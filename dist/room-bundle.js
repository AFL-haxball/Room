/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/room/classes/BallContact.ts":
/*!*****************************************!*\
  !*** ./src/room/classes/BallContact.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nclass BallContact {\r\n    constructor(contactType, player, playerPosition) {\r\n        this.type = contactType;\r\n        this.player = (0, haxUtils_1.flattenPlayer)(player);\r\n        this.playerPosition = playerPosition;\r\n    }\r\n}\r\nexports[\"default\"] = BallContact;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/classes/BallContact.ts?");

/***/ }),

/***/ "./src/room/classes/ChatMessage.ts":
/*!*****************************************!*\
  !*** ./src/room/classes/ChatMessage.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst GameCommands_1 = __importDefault(__webpack_require__(/*! ../commands/GameCommands */ \"./src/room/commands/GameCommands.ts\"));\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nclass ChatMessage {\r\n    constructor(message, player) {\r\n        this.content = message.trim();\r\n        this.author = player;\r\n        this.createdAt = new Date();\r\n    }\r\n    _splitContentByWhiteSpaceAndToLower() {\r\n        return this.content.toLowerCase().split(/\\s+/);\r\n    }\r\n    isOffensive() {\r\n        return (0, utils_1.containsNWord)(this.content);\r\n    }\r\n    isGameCommand() {\r\n        return GameCommands_1.default.has(this.content.toLowerCase());\r\n    }\r\n    startsWithCommandPrefix() {\r\n        return this.content.startsWith(Chat_1.default.PREFIX.COMMAND);\r\n    }\r\n    startsWithTeamChatPrefix() {\r\n        const [firstWord = null] = this._splitContentByWhiteSpaceAndToLower();\r\n        return firstWord === Chat_1.default.PREFIX.TEAMCHAT;\r\n    }\r\n    reply(msg, options = {}) {\r\n        var _a;\r\n        options.color = 0xcceb94;\r\n        options.id = (_a = this.author) === null || _a === void 0 ? void 0 : _a.id;\r\n        Chat_1.default.send(msg, options);\r\n    }\r\n    replyError(msg, options = {}) {\r\n        var _a;\r\n        options.id = (_a = this.author) === null || _a === void 0 ? void 0 : _a.id;\r\n        Chat_1.default.sendError(msg, options);\r\n    }\r\n    replySuccess(msg, options = {}) {\r\n        var _a;\r\n        options.id = (_a = this.author) === null || _a === void 0 ? void 0 : _a.id;\r\n        Chat_1.default.sendSuccess(msg, options);\r\n    }\r\n    announce(msg, options = {}) {\r\n        Chat_1.default.sendAnnouncement(msg, options);\r\n    }\r\n}\r\nexports[\"default\"] = ChatMessage;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/classes/ChatMessage.ts?");

/***/ }),

/***/ "./src/room/classes/CommandMessage.ts":
/*!********************************************!*\
  !*** ./src/room/classes/CommandMessage.ts ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst ChatMessage_1 = __importDefault(__webpack_require__(/*! ./ChatMessage */ \"./src/room/classes/ChatMessage.ts\"));\r\nclass CommandMessage extends ChatMessage_1.default {\r\n    constructor(message, player) {\r\n        super(message, player);\r\n        const { cmdName, cmdParamsArray, cmdParamsStr } = this._extractCommandNameAndParams();\r\n        this.commandParamsArray = cmdParamsArray;\r\n        this.commandParamsStr = cmdParamsStr;\r\n        this.commandName = cmdName;\r\n        this.commandParamsLength = cmdParamsArray.length;\r\n    }\r\n    hasNoParams() {\r\n        return this.commandParamsLength === 0;\r\n    }\r\n    _extractCommandNameAndParams() {\r\n        const splitMessage = this._splitContentByWhiteSpaceAndToLower();\r\n        const [cmdNameWithPrefix, ...cmdParams] = splitMessage;\r\n        const cmdName = cmdNameWithPrefix.substring(Chat_1.default.PREFIX.COMMAND.length);\r\n        const cmdParamsString = cmdParams.join(\" \");\r\n        return {\r\n            cmdName: cmdName,\r\n            cmdParamsArray: cmdParams,\r\n            cmdParamsStr: cmdParamsString,\r\n        };\r\n    }\r\n}\r\nexports[\"default\"] = CommandMessage;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/classes/CommandMessage.ts?");

/***/ }),

/***/ "./src/room/classes/Down.ts":
/*!**********************************!*\
  !*** ./src/room/classes/Down.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Ball_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Ball */ \"./src/room/roomStructures/Ball.ts\"));\r\nconst DistanceCalculator_1 = __importStar(__webpack_require__(/*! ../structures/DistanceCalculator */ \"./src/room/structures/DistanceCalculator.ts\"));\r\nconst DownAndDistanceFormatter_1 = __importDefault(__webpack_require__(/*! ../structures/DownAndDistanceFormatter */ \"./src/room/structures/DownAndDistanceFormatter.ts\"));\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nconst Punt_1 = __importDefault(__webpack_require__(/*! ../plays/Punt */ \"./src/room/plays/Punt.ts\"));\r\nconst MapReferee_1 = __importDefault(__webpack_require__(/*! ../structures/MapReferee */ \"./src/room/structures/MapReferee.ts\"));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nconst __1 = __importDefault(__webpack_require__(/*! .. */ \"./src/room/index.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nclass Down {\r\n    constructor() {\r\n        this._los = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this._mostRecentQb = null;\r\n        this._currentDown = 1;\r\n        this._yardsToGet = Down.CONFIG.DEFAULT_YARDS_TO_GET;\r\n        this._redZonePenalties = 0;\r\n        this._MAX_REZONE_PENALTIES = 3;\r\n    }\r\n    getLOS() {\r\n        return this._los;\r\n    }\r\n    setLOS(x) {\r\n        this._los.x = x;\r\n        return this;\r\n    }\r\n    getLOSYard() {\r\n        return DistanceCalculator_1.DistanceConverter.toYardLine(this._los.x);\r\n    }\r\n    getYardsToGet() {\r\n        return this._yardsToGet;\r\n    }\r\n    setYardsToGet(yards) {\r\n        this._yardsToGet = yards;\r\n        return this;\r\n    }\r\n    subtractYardsToGet(netYards) {\r\n        this._yardsToGet -= netYards;\r\n        return this;\r\n    }\r\n    getDown() {\r\n        return this._currentDown;\r\n    }\r\n    setDown(down) {\r\n        this._currentDown = down;\r\n        return this;\r\n    }\r\n    addDown() {\r\n        this._currentDown++;\r\n        return this;\r\n    }\r\n    startNew() {\r\n        this._currentDown = 1;\r\n        this._yardsToGet = Down.CONFIG.DEFAULT_YARDS_TO_GET;\r\n        this._redZonePenalties = 0;\r\n        return;\r\n    }\r\n    setMostRecentQuarterback(player) {\r\n        if (!player)\r\n            return (this._mostRecentQb = player);\r\n        this._mostRecentQb = Object.assign({}, player);\r\n    }\r\n    getSnapPosition() {\r\n        const x = new DistanceCalculator_1.default()\r\n            .subtractByTeam(this._los.x, map_1.MAP_POINTS.YARD * 5, Room_1.default.game.offenseTeamId)\r\n            .calculate();\r\n        return {\r\n            x,\r\n            y: 0,\r\n        };\r\n    }\r\n    incrementRedZonePenalties() {\r\n        this._redZonePenalties++;\r\n    }\r\n    hasReachedMaxRedzonePenalties() {\r\n        return this._redZonePenalties === this._MAX_REZONE_PENALTIES;\r\n    }\r\n    getDownAndDistanceString() {\r\n        const down = DownAndDistanceFormatter_1.default.formatDown(this._currentDown);\r\n        const lineToGainPoint = this._getLineToGainPoint();\r\n        const yardsOrGoal = DownAndDistanceFormatter_1.default.formatYardsToGain(lineToGainPoint, this._yardsToGet);\r\n        const redZonePenalties = DownAndDistanceFormatter_1.default.formatRedZonePenalties(this._redZonePenalties);\r\n        const LOSHalf = DownAndDistanceFormatter_1.default.formatPositionToMapHalf(this._los.x);\r\n        const LOSYard = this.getLOSYard();\r\n        return `${down} & ${yardsOrGoal} at ${LOSHalf}${LOSYard}${redZonePenalties}`;\r\n    }\r\n    sendDownAndDistance() {\r\n        const downAndDistanceStr = this.getDownAndDistanceString();\r\n        Chat_1.default.send(downAndDistanceStr, { sound: 0 });\r\n    }\r\n    setTightEndPosition(playerId, position) {\r\n        __1.default.setPlayerDiscProperties(playerId, position);\r\n        Room_1.default.game.moveTightEndDiscs(position);\r\n    }\r\n    setPlayers() {\r\n        const fieldedPlayers = Room_1.default.game.players.getFielded();\r\n        function setPlayerPositionRandom(player) {\r\n            const randomYCoordinate = (0, utils_1.getRandomIntInRange)(map_1.MAP_POINTS.TOP_HASH, map_1.MAP_POINTS.BOT_HASH);\r\n            const twelveYardsBehindLosX = new DistanceCalculator_1.default()\r\n                .subtractByTeam(this.getLOS().x, map_1.MAP_POINTS.YARD * 12, player.team)\r\n                .calculate();\r\n            const playerPositionToSet = {\r\n                x: twelveYardsBehindLosX,\r\n                y: randomYCoordinate,\r\n                xspeed: 0,\r\n                yspeed: 0,\r\n            };\r\n            const isTightEnd = Room_1.default.game.checkIfPlayerIsTightEnd(player.id);\r\n            if (isTightEnd)\r\n                return this.setTightEndPosition(player.id, playerPositionToSet);\r\n            __1.default.setPlayerDiscProperties(player.id, playerPositionToSet);\r\n        }\r\n        const getYardsBehindLosX = (player) => {\r\n            if (this._mostRecentQb && this._mostRecentQb.id === player.id) {\r\n                if (this._mostRecentQb.team !== Room_1.default.game.offenseTeamId) {\r\n                    this.setMostRecentQuarterback(null);\r\n                    return 10;\r\n                }\r\n                return 7;\r\n            }\r\n            return 10;\r\n        };\r\n        fieldedPlayers.forEach((player) => {\r\n            const hasSavedPosition = Room_1.default.game.players.playerPositionsMap.has(player.id);\r\n            if (!hasSavedPosition)\r\n                return setPlayerPositionRandom.bind(this, player)();\r\n            const { position, team } = Room_1.default.game.players.playerPositionsMap.get(player.id);\r\n            if (this._mostRecentQb) {\r\n                if (this._mostRecentQb.team !== Room_1.default.game.offenseTeamId)\r\n                    this.setMostRecentQuarterback(null);\r\n            }\r\n            const yardsBehindLosX = getYardsBehindLosX(player);\r\n            const numbYardsBehindLosX = new DistanceCalculator_1.default()\r\n                .subtractByTeam(this.getLOS().x, map_1.MAP_POINTS.YARD * yardsBehindLosX, team)\r\n                .calculate();\r\n            const playerPositionToSet = {\r\n                x: numbYardsBehindLosX,\r\n                y: position.y,\r\n                xspeed: 0,\r\n                yspeed: 0,\r\n            };\r\n            const isTightEnd = Room_1.default.game.checkIfPlayerIsTightEnd(player.id);\r\n            if (isTightEnd)\r\n                return this.setTightEndPosition(player.id, playerPositionToSet);\r\n            __1.default.setPlayerDiscProperties(player.id, playerPositionToSet);\r\n        });\r\n    }\r\n    setBallAndFieldMarkersPlayEnd() {\r\n        this.moveFieldMarkers();\r\n        const snapPosition = this.getSnapPosition();\r\n        Ball_1.default.setPosition(snapPosition);\r\n        Ball_1.default.suppress();\r\n        Ball_1.default.setProperties({ damping: map_1.MAP_POINTS.DEF_DAMPING });\r\n    }\r\n    hardSetPlayers() {\r\n        const fieldedPlayers = Room_1.default.game.players.getFielded();\r\n        fieldedPlayers.forEach((player) => {\r\n            const sevenYardsBehindLosX = new DistanceCalculator_1.default()\r\n                .subtractByTeam(this.getLOS().x, map_1.MAP_POINTS.YARD * 7, player.team)\r\n                .calculate();\r\n            const isTightEnd = Room_1.default.game.checkIfPlayerIsTightEnd(player.id);\r\n            if (isTightEnd)\r\n                return this.setTightEndPosition(player.id, {\r\n                    x: sevenYardsBehindLosX,\r\n                    y: 0,\r\n                });\r\n            __1.default.setPlayerDiscProperties(player.id, {\r\n                x: sevenYardsBehindLosX,\r\n                xspeed: 0,\r\n                yspeed: 0,\r\n            });\r\n        });\r\n    }\r\n    hardReset() {\r\n        var _a;\r\n        (_a = Room_1.default.game.play) === null || _a === void 0 ? void 0 : _a.terminatePlayDuringError();\r\n        Room_1.default.game.setTightEnd(null);\r\n        this.sendDownAndDistance();\r\n        this.setPlayers();\r\n        Room_1.default.game.endPlay();\r\n        this.setBallAndFieldMarkersPlayEnd();\r\n        Room_1.default.game.startSnapDelay();\r\n    }\r\n    _setPuntIfFourthAndLong() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const FOURTH_DOWN = 4;\r\n            const MIN_YARDS_FOR_AUTO_PUNT = 15;\r\n            const MAX_TIME_FOR_AUTO_PUNT = 60 * 5;\r\n            if (this.getDown() !== FOURTH_DOWN)\r\n                return;\r\n            const teamHalf = MapReferee_1.default.getMapHalfFromPoint(this._los.x);\r\n            if (teamHalf !== Room_1.default.game.offenseTeamId)\r\n                return;\r\n            if (Room_1.default.game.getTimeRounded() > MAX_TIME_FOR_AUTO_PUNT)\r\n                return;\r\n            if (this.getYardsToGet() < MIN_YARDS_FOR_AUTO_PUNT)\r\n                return;\r\n            (0, haxUtils_1.quickPause)();\r\n            yield (0, utils_1.sleep)(100);\r\n            Chat_1.default.send(`⚠️ Automatic punt! 4th & LONG`);\r\n            const offensePlayers = Room_1.default.game.players.getOffense();\r\n            const justSetRandomPlayerAsPunter = () => {\r\n                const firstPlayerOnOffense = offensePlayers[0];\r\n                return Room_1.default.game.setPlay(new Punt_1.default(Room_1.default.game.getTimeRounded(), firstPlayerOnOffense), firstPlayerOnOffense);\r\n            };\r\n            const savedOffensivePlayerPositions = offensePlayers\r\n                .map((player) => {\r\n                const hasSavedPosition = Room_1.default.game.players.playerPositionsMap.has(player.id);\r\n                if (!hasSavedPosition)\r\n                    return null;\r\n                const { position } = Room_1.default.game.players.playerPositionsMap.get(player.id);\r\n                return position;\r\n            })\r\n                .filter((el) => el !== null);\r\n            if (savedOffensivePlayerPositions.length === 0)\r\n                return justSetRandomPlayerAsPunter();\r\n            const { index } = MapReferee_1.default.getClosestPositionToOtherPosition(savedOffensivePlayerPositions, this.getSnapPosition());\r\n            if (index === -1)\r\n                return justSetRandomPlayerAsPunter();\r\n            const closestPlayerToBall = offensePlayers[index];\r\n            Room_1.default.game.setPlay(new Punt_1.default(Room_1.default.game.getTimeRounded(), closestPlayerToBall), closestPlayerToBall);\r\n        });\r\n    }\r\n    setPreviousDownAsCurrentDown() {\r\n        this.previousDown = {\r\n            down: this._currentDown,\r\n            yardsToGet: this._yardsToGet,\r\n            losX: this._los.x,\r\n        };\r\n    }\r\n    resetAfterDown() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.sendDownAndDistance();\r\n            Room_1.default.game.endPlay();\r\n            yield (0, utils_1.sleep)(500);\r\n            this.setBallAndFieldMarkersPlayEnd();\r\n            Room_1.default.game.startSnapDelay();\r\n            this.setPlayers();\r\n            this._setPuntIfFourthAndLong();\r\n        });\r\n    }\r\n    resetAfterScore() {\r\n        Ball_1.default.setProperties({ damping: map_1.MAP_POINTS.DEF_DAMPING });\r\n        Room_1.default.game.endPlay();\r\n    }\r\n    maybeMovePlayerBehindLosOnField(player) {\r\n        if (Room_1.default.game.play)\r\n            return;\r\n        const fifteenYardsBehindLosX = new DistanceCalculator_1.default()\r\n            .subtractByTeam(this.getLOS().x, map_1.MAP_POINTS.YARD * 15, player.team)\r\n            .calculate();\r\n        const playerPositionToSet = {\r\n            x: fifteenYardsBehindLosX,\r\n            xspeed: 0,\r\n            yspeed: 0,\r\n        };\r\n        __1.default.setPlayerDiscProperties(player.id, playerPositionToSet);\r\n    }\r\n    _moveLOSMarkers() {\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.LOS_TOP, {\r\n            x: this._los.x,\r\n        });\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.LOS_BOT, {\r\n            x: this._los.x,\r\n        });\r\n    }\r\n    _moveLineToGainMarkers(options = {}) {\r\n        const lineToGainPoint = this._getLineToGainPoint();\r\n        const maybeHideLineToGain = () => {\r\n            if (options.hideLineToGain)\r\n                return true;\r\n            const lineToGainIsAfterEndzone = lineToGainPoint <= map_1.MAP_POINTS.RED_GOAL_LINE ||\r\n                lineToGainPoint >= map_1.MAP_POINTS.BLUE_GOAL_LINE;\r\n            if (lineToGainIsAfterEndzone)\r\n                return true;\r\n            if (Room_1.default.game.play === null)\r\n                return false;\r\n            return false;\r\n        };\r\n        const lineToGainX = maybeHideLineToGain()\r\n            ? map_1.MAP_POINTS.HIDDEN\r\n            : lineToGainPoint;\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.LTG_TOP, {\r\n            x: lineToGainX,\r\n            y: map_1.MAP_POINTS.TOP_SIDELINE,\r\n        });\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.LTG_BOT, {\r\n            x: lineToGainX,\r\n            y: map_1.MAP_POINTS.BOT_SIDELINE,\r\n        });\r\n    }\r\n    moveFieldMarkers(options = {}) {\r\n        this._moveLOSMarkers();\r\n        this._moveLineToGainMarkers(options);\r\n        return this;\r\n    }\r\n    _getLineToGainPoint() {\r\n        return new DistanceCalculator_1.default()\r\n            .addByTeam(this._los.x, map_1.MAP_POINTS.YARD * this._yardsToGet, Room_1.default.game.offenseTeamId)\r\n            .calculate();\r\n    }\r\n}\r\nexports[\"default\"] = Down;\r\nDown.CONFIG = {\r\n    DEFAULT_YARDS_TO_GET: 20,\r\n};\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/classes/Down.ts?");

/***/ }),

/***/ "./src/room/classes/Game.ts":
/*!**********************************!*\
  !*** ./src/room/classes/Game.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst __1 = __importDefault(__webpack_require__(/*! .. */ \"./src/room/index.ts\"));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst PlayerRecorder_1 = __importDefault(__webpack_require__(/*! ../roomStructures/PlayerRecorder */ \"./src/room/roomStructures/PlayerRecorder.ts\"));\r\nconst PlayerStatManager_1 = __importDefault(__webpack_require__(/*! ../structures/PlayerStatManager */ \"./src/room/structures/PlayerStatManager.ts\"));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nconst Icons_1 = __importDefault(__webpack_require__(/*! ../utils/Icons */ \"./src/room/utils/Icons.ts\"));\r\nconst types_1 = __webpack_require__(/*! ../utils/types */ \"./src/room/utils/types.ts\");\r\nconst Down_1 = __importDefault(__webpack_require__(/*! ./Down */ \"./src/room/classes/Down.ts\"));\r\nconst WithStateStore_1 = __importDefault(__webpack_require__(/*! ./WithStateStore */ \"./src/room/classes/WithStateStore.ts\"));\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nclass Game extends WithStateStore_1.default {\r\n    constructor() {\r\n        super();\r\n        this.score = {\r\n            red: 0,\r\n            blue: 0,\r\n        };\r\n        this.redTeamName = \"Red\";\r\n        this.blueTeamName = \"Blue\";\r\n        this.offenseTeamId = 1;\r\n        this.timeOuts = [];\r\n        this.play = null;\r\n        this.down = new Down_1.default();\r\n        this.players = new PlayerRecorder_1.default();\r\n        this.stats = new PlayerStatManager_1.default();\r\n        this._canStartSnapPlay = true;\r\n        this._isPaused = false;\r\n        this._tightEndId = null;\r\n        this._lastPlayEndPosition = { x: 0, y: 0 };\r\n        this._isActive = true;\r\n        this.updateStaticPlayers();\r\n    }\r\n    setIsPaused(bool) {\r\n        this._isPaused = bool;\r\n    }\r\n    get isPaused() {\r\n        return this._isPaused;\r\n    }\r\n    get isActive() {\r\n        return this._isActive;\r\n    }\r\n    getTightEnd() {\r\n        return this._tightEndId;\r\n    }\r\n    get lastPlayEndPosition() {\r\n        return this._lastPlayEndPosition;\r\n    }\r\n    setLastPlayEndPosition(pos) {\r\n        this._lastPlayEndPosition = pos;\r\n    }\r\n    setTightEnd(playerId) {\r\n        const oldTightEndId = this._tightEndId;\r\n        this._tightEndId = playerId;\r\n        if (playerId === null) {\r\n            this._resetPlayersPhysics(oldTightEndId);\r\n            this.moveTightEndDiscs({ x: map_1.MAP_POINTS.HIDDEN, y: 0 });\r\n            return;\r\n        }\r\n        this._tightEndId = playerId;\r\n        this._setTightEndPhysicsAndDiscs(playerId);\r\n    }\r\n    updateStaticPlayers() {\r\n        this.players.updateStaticPlayerList(this.offenseTeamId);\r\n    }\r\n    get defenseTeamId() {\r\n        if (this.offenseTeamId === 1)\r\n            return 2;\r\n        return 1;\r\n    }\r\n    get canStartSnapPlay() {\r\n        return this._canStartSnapPlay;\r\n    }\r\n    setOffenseTeam(teamId) {\r\n        this.offenseTeamId = teamId;\r\n    }\r\n    swapOffenseAndUpdatePlayers() {\r\n        if (this.offenseTeamId === 1) {\r\n            this.setOffenseTeam(2);\r\n        }\r\n        else {\r\n            this.setOffenseTeam(1);\r\n        }\r\n        this.setTightEnd(null);\r\n        this.players.updateStaticPlayerList(this.offenseTeamId);\r\n    }\r\n    addTeamTimeOut(teamId) {\r\n        this.timeOuts.push({ time: this.getTimeRounded(), team: teamId });\r\n    }\r\n    startSnapDelay() {\r\n        this._canStartSnapPlay = false;\r\n        if (this._isPaused) {\r\n            setTimeout(() => {\r\n                this._canStartSnapPlay = true;\r\n            }, 4000);\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            this._canStartSnapPlay = true;\r\n        }, 2000);\r\n    }\r\n    setPlay(play, player) {\r\n        play === null || play === void 0 ? void 0 : play.validateBeforePlayBegins(player);\r\n        this.play = play;\r\n        this.play.prepare();\r\n        this.clearState();\r\n        Room_1.default.game.down.setPreviousDownAsCurrentDown();\r\n        this.play.run();\r\n    }\r\n    endPlay() {\r\n        var _a;\r\n        (_a = this.play) === null || _a === void 0 ? void 0 : _a.cleanUp();\r\n        this._resetAllPlayersPhysics();\r\n        this.play = null;\r\n    }\r\n    endGame() {\r\n        this._isActive = false;\r\n        const mvpObj = this.stats.getMVP();\r\n        if (!mvpObj)\r\n            return;\r\n        this.sendManOfTheMatch(mvpObj.recordId, mvpObj.pointTotal);\r\n    }\r\n    setScore(teamID, score) {\r\n        teamID === types_1.TEAMS.RED ? (this.score.red = score) : (this.score.blue = score);\r\n        return this;\r\n    }\r\n    addScore(teamID, score) {\r\n        teamID === types_1.TEAMS.RED\r\n            ? (this.score.red += score)\r\n            : (this.score.blue += score);\r\n        return this;\r\n    }\r\n    getTime() {\r\n        var _a, _b;\r\n        return (_b = (_a = __1.default.getScores()) === null || _a === void 0 ? void 0 : _a.time) !== null && _b !== void 0 ? _b : 0;\r\n    }\r\n    getTimeRounded() {\r\n        return Math.round(this.getTime());\r\n    }\r\n    getClock() {\r\n        const time = this.getTime();\r\n        return (0, haxUtils_1.toClock)(time);\r\n    }\r\n    getScoreBoardStr() {\r\n        return `${Icons_1.default.RedSquare} ${this.score.red} -  ${this.score.blue} ${Icons_1.default.BlueSquare}`;\r\n    }\r\n    sendScoreBoard() {\r\n        Chat_1.default.send(this.getScoreBoardStr());\r\n    }\r\n    sendManOfTheMatch(recordId, pointTotal) {\r\n        const player = this.players.records.get(recordId);\r\n        if (!player)\r\n            return;\r\n        Chat_1.default.send(`${Icons_1.default.Star} MVP: ${player.name} | ${pointTotal} points`);\r\n    }\r\n    _resetPlayersPhysics(playerId) {\r\n        const DEFAULT_BCOEFF = 0.75;\r\n        const DEFAULT_INV_MASS = 0.8;\r\n        if (this.checkIfPlayerIsTightEnd(playerId))\r\n            return;\r\n        __1.default.setPlayerDiscProperties(playerId, {\r\n            bCoeff: DEFAULT_BCOEFF,\r\n            invMass: DEFAULT_INV_MASS,\r\n            radius: map_1.MAP_POINTS.PLAYER_RADIUS,\r\n        });\r\n    }\r\n    _resetAllPlayersPhysics() {\r\n        Room_1.default.players.getFielded().forEach((player) => {\r\n            this._resetPlayersPhysics(player.id);\r\n            __1.default.setPlayerAvatar(player.id, null);\r\n        });\r\n    }\r\n    _setTightEndPhysicsAndDiscs(playerId) {\r\n        const TIGHT_END_INV_MASS = 0.35;\r\n        __1.default.setPlayerDiscProperties(playerId, {\r\n            radius: map_1.MAP_POINTS.TE_PLAYER_RADIUS,\r\n            invMass: TIGHT_END_INV_MASS,\r\n        });\r\n        const { position } = (0, haxUtils_1.getPlayerDiscProperties)(playerId);\r\n        this.moveTightEndDiscs(position);\r\n    }\r\n    checkIfPlayerIsTightEnd(playerId) {\r\n        return this._tightEndId === playerId;\r\n    }\r\n    moveTightEndDiscs(position) {\r\n        const JOINT_LENGTH = 13;\r\n        map_1.DISC_IDS.TE.forEach((id, index) => {\r\n            if (index === 0) {\r\n                return __1.default.setDiscProperties(id, position);\r\n            }\r\n            if (index === 1) {\r\n                return __1.default.setDiscProperties(id, {\r\n                    x: position.x,\r\n                    y: position.y + JOINT_LENGTH,\r\n                });\r\n            }\r\n            if (index === 2) {\r\n                return __1.default.setDiscProperties(id, {\r\n                    x: position.x - JOINT_LENGTH,\r\n                    y: position.y,\r\n                });\r\n            }\r\n            if (index === 3) {\r\n                return __1.default.setDiscProperties(id, {\r\n                    x: position.x,\r\n                    y: position.y - JOINT_LENGTH,\r\n                });\r\n            }\r\n            if (index === 4) {\r\n                return __1.default.setDiscProperties(id, {\r\n                    x: position.x + JOINT_LENGTH,\r\n                    y: position.y,\r\n                });\r\n            }\r\n        });\r\n    }\r\n    checkIfTightEndSwitchedTeamsOrLeft(playerId) {\r\n        if (playerId === this._tightEndId)\r\n            this.setTightEnd(null);\r\n    }\r\n}\r\nexports[\"default\"] = Game;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/classes/Game.ts?");

/***/ }),

/***/ "./src/room/classes/Player.ts":
/*!************************************!*\
  !*** ./src/room/classes/Player.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst __1 = __importDefault(__webpack_require__(/*! .. */ \"./src/room/index.ts\"));\r\nconst room_config_1 = __webpack_require__(/*! ../room.config */ \"./src/room/room.config.ts\");\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nclass Player {\r\n    constructor({ name, id, auth, conn }) {\r\n        this.isAFK = false;\r\n        this.canPlay = true;\r\n        this.name = name.trim();\r\n        this.id = id;\r\n        this.auth = room_config_1.DEBUG_MODE ? (0, utils_1.getRandomChars)(6) : auth;\r\n        this._adminLevel = 0;\r\n        this.ip = room_config_1.DEBUG_MODE ? (0, utils_1.getRandomChars)(6) : conn;\r\n    }\r\n    setCanPlay(bool) {\r\n        this.canPlay = bool;\r\n    }\r\n    get team() {\r\n        const player = __1.default.getPlayer(this.id);\r\n        if (player)\r\n            return player.team;\r\n        return null;\r\n    }\r\n    get position() {\r\n        const player = __1.default.getPlayer(this.id);\r\n        if (player)\r\n            return player.position;\r\n        return null;\r\n    }\r\n    get adminLevel() {\r\n        const adminLevel = this._adminLevel;\r\n        if (adminLevel === 0) {\r\n            if (this.isAdmin)\r\n                return 1;\r\n            return 0;\r\n        }\r\n        return adminLevel;\r\n    }\r\n    get playerObject() {\r\n        return __1.default.getPlayer(this.id);\r\n    }\r\n    get lowerName() {\r\n        return this.name.toLowerCase();\r\n    }\r\n    get shortName() {\r\n        return (0, utils_1.truncateName)(this.name);\r\n    }\r\n    get isMuted() {\r\n        return Room_1.default.players.muted.mutedCollection.has(this.auth);\r\n    }\r\n    get isAdmin() {\r\n        const player = __1.default.getPlayer(this.id);\r\n        if (!player)\r\n            return false;\r\n        return player.admin;\r\n    }\r\n    setAdmin(bool) {\r\n        __1.default.setPlayerAdmin(this.id, bool);\r\n        return this;\r\n    }\r\n    setAdminLevel(adminLevel) {\r\n        this._adminLevel = adminLevel;\r\n        return this;\r\n    }\r\n    setTeam(teamID) {\r\n        const player = __1.default.getPlayer(this.id);\r\n        if (player)\r\n            __1.default.setPlayerTeam(this.id, teamID);\r\n    }\r\n    canModerate(player) {\r\n        return this.adminLevel > player.adminLevel;\r\n    }\r\n    setAFK(makeAFK) {\r\n        this.isAFK = makeAFK;\r\n    }\r\n}\r\nexports[\"default\"] = Player;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/classes/Player.ts?");

/***/ }),

/***/ "./src/room/classes/PlayerContact.ts":
/*!*******************************************!*\
  !*** ./src/room/classes/PlayerContact.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nclass PlayerContact {\r\n    constructor(player, playerPosition, playerSpeed, ballCarrierPosition, ballCarrierSpeed) {\r\n        this.player = (0, haxUtils_1.flattenPlayer)(player);\r\n        this.playerPosition = playerPosition;\r\n        this.playerSpeed = playerSpeed;\r\n        this.ballCarrierPosition = ballCarrierPosition;\r\n        this.ballCarrierSpeed = ballCarrierSpeed;\r\n    }\r\n}\r\nexports[\"default\"] = PlayerContact;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/classes/PlayerContact.ts?");

/***/ }),

/***/ "./src/room/classes/PlayerStats.ts":
/*!*****************************************!*\
  !*** ./src/room/classes/PlayerStats.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EMPTY_MAP_SECTION_STAT = void 0;\r\nconst Icons_1 = __importDefault(__webpack_require__(/*! ../utils/Icons */ \"./src/room/utils/Icons.ts\"));\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nclass EMPTY_MAP_SECTION_STAT {\r\n    constructor() {\r\n        this.cornerTop = 0;\r\n        this.cornerBottom = 0;\r\n        this.middle = 0;\r\n        this.deep = 0;\r\n        this.backwards = 0;\r\n    }\r\n    get all() {\r\n        return (0, utils_1.sumObjectValues)(this);\r\n    }\r\n}\r\nexports.EMPTY_MAP_SECTION_STAT = EMPTY_MAP_SECTION_STAT;\r\nclass PlayerStats {\r\n    constructor(recordId) {\r\n        this.receptions = new EMPTY_MAP_SECTION_STAT();\r\n        this.receivingYards = new EMPTY_MAP_SECTION_STAT();\r\n        this.receivingYardsAfterCatch = new EMPTY_MAP_SECTION_STAT();\r\n        this.rushingAttempts = 0;\r\n        this.rushingYards = 0;\r\n        this.touchdownsReceived = 0;\r\n        this.touchdownsRushed = 0;\r\n        this.passAttempts = new EMPTY_MAP_SECTION_STAT();\r\n        this.passCompletions = new EMPTY_MAP_SECTION_STAT();\r\n        this.passYards = new EMPTY_MAP_SECTION_STAT();\r\n        this.passYardsDistance = new EMPTY_MAP_SECTION_STAT();\r\n        this.touchdownsThrown = 0;\r\n        this.interceptionsThrown = 0;\r\n        this.qbSacks = 0;\r\n        this.distanceMovedBeforePassArr = [];\r\n        this.timeToPassArr = [];\r\n        this.curvedPassAttempts = 0;\r\n        this.curvedPassCompletions = 0;\r\n        this.passDeflections = new EMPTY_MAP_SECTION_STAT();\r\n        this.tackles = 0;\r\n        this.yardsAllowed = new EMPTY_MAP_SECTION_STAT();\r\n        this.sacks = 0;\r\n        this.forcedFumbles = 0;\r\n        this.interceptionsReceived = 0;\r\n        this.specReceptions = 0;\r\n        this.specReceivingYards = 0;\r\n        this.specTouchdowns = 0;\r\n        this.specTackles = 0;\r\n        this.fgAttempts = 0;\r\n        this.fgYardsAttempted = 0;\r\n        this.fgMade = 0;\r\n        this.fgYardsMade = 0;\r\n        this.timePlayed = 0;\r\n        this.fumbles = 0;\r\n        this.penalties = 0;\r\n        this.onsideKicksAttempted = 0;\r\n        this.onsideKicksConverted = 0;\r\n        this.recordId = recordId;\r\n    }\r\n    get distanceMovedBeforePass() {\r\n        return (0, utils_1.averageOfArray)(this.distanceMovedBeforePassArr);\r\n    }\r\n    get timeToPass() {\r\n        return (0, utils_1.averageOfArray)(this.timeToPassArr);\r\n    }\r\n    _calculatePasserRating() {\r\n        if (this.passAttempts.all === 0)\r\n            return 0;\r\n        const a = (0, utils_1.limitNumberWithinRange)((this.passCompletions.all / this.passAttempts.all - 0.3) * 5, 0, 2.375);\r\n        const b = (0, utils_1.limitNumberWithinRange)((this.passYards.all / this.passAttempts.all - 3) * 0.25, 0, 2.375);\r\n        const c = (0, utils_1.limitNumberWithinRange)((this.touchdownsThrown / this.passAttempts.all) * 20, 0, 2.375);\r\n        const d = (0, utils_1.limitNumberWithinRange)(2.375 - (this.interceptionsThrown / this.passAttempts.all) * 25, 0, 2.375);\r\n        return (0, utils_1.round)(((a + b + c + d) / 6) * 100, 2);\r\n    }\r\n    updateStats(statsQuery) {\r\n        Object.entries(statsQuery).forEach((statQuery) => {\r\n            const [statQueryKey, statQueryValue] = statQuery;\r\n            const isNestedObj = (0, utils_1.isObject)(statQueryValue);\r\n            const isArray = Array.isArray(statQueryValue);\r\n            if (isNestedObj) {\r\n                Object.entries(statQueryValue).forEach((nestedStatQuery) => {\r\n                    const [nestedStatQueryKey, nestedStatQueryValue] = nestedStatQuery;\r\n                    this[`${statQueryKey}`][nestedStatQueryKey] += nestedStatQueryValue;\r\n                });\r\n                return;\r\n            }\r\n            if (isArray) {\r\n                this[`${statQueryKey}`].push(statQueryValue[0]);\r\n                return;\r\n            }\r\n            this[`${statQueryKey}`] += statQueryValue;\r\n        });\r\n    }\r\n    getStatsStringNormal() {\r\n        const recStats = `Receiving | Rec: ${this.receptions.all} ${Icons_1.default.SmallBlackSquare} Yds: ${this.receivingYards.all} ${Icons_1.default.SmallBlackSquare} Yac: ${this.receivingYardsAfterCatch.all} ${Icons_1.default.SmallBlackSquare} Ratt: ${this.rushingAttempts} ${Icons_1.default.SmallBlackSquare} Ruyd: ${this.rushingYards} | TD: ${this.touchdownsReceived} ${Icons_1.default.SmallBlackSquare} RuTD: ${this.touchdownsRushed}`;\r\n        const qbStats = `Passing | Cmp/Att: ${this.passCompletions.all}/${this.passAttempts.all} ${Icons_1.default.SmallBlackSquare} Pyds: ${this.passYards.all} | TD: ${this.touchdownsThrown} ${Icons_1.default.SmallBlackSquare} Ints: ${this.interceptionsThrown} ${Icons_1.default.SmallBlackSquare} Rating: ${this._calculatePasserRating()}`;\r\n        const defensiveStats = `Defense | PD: ${this.passDeflections.all} ${Icons_1.default.SmallBlackSquare} Tak: ${this.tackles} ${Icons_1.default.SmallBlackSquare} Sak: ${this.sacks} ${Icons_1.default.SmallBlackSquare} Ints: ${this.interceptionsReceived} ${Icons_1.default.SmallBlackSquare} YdsAllowed: ${this.yardsAllowed.all}`;\r\n        return `${recStats}\\n${qbStats}\\n${defensiveStats}`;\r\n    }\r\n}\r\nexports[\"default\"] = PlayerStats;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/classes/PlayerStats.ts?");

/***/ }),

/***/ "./src/room/classes/WithStateStore.ts":
/*!********************************************!*\
  !*** ./src/room/classes/WithStateStore.ts ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst room_config_1 = __webpack_require__(/*! ../room.config */ \"./src/room/room.config.ts\");\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nclass WithStateStore {\r\n    constructor() {\r\n        this._stateStore = {};\r\n    }\r\n    setState(state, value = true) {\r\n        this._stateStore[state] = value;\r\n        if (room_config_1.DEBUG_MODE) {\r\n            Chat_1.default.send(`StateChange: ${String(state)}`, { color: 0xffef5c });\r\n        }\r\n    }\r\n    getState(state) {\r\n        const stateValue = this._stateStore[state];\r\n        if (typeof stateValue === \"undefined\")\r\n            throw Error(`State: ${String(state)} was not found using the getState method. Only use getState when the state is defined, use stateExists to check if a state exists `);\r\n        return this._stateStore[state];\r\n    }\r\n    deleteState(state) {\r\n        if (room_config_1.DEBUG_MODE) {\r\n            Chat_1.default.send(`State delete: ${String(state)}`, { color: 0xffef5c });\r\n        }\r\n        delete this._stateStore[state];\r\n    }\r\n    stateExists(state) {\r\n        return this._stateStore.hasOwnProperty(state);\r\n    }\r\n    stateExistsUnsafe(state) {\r\n        return this._stateStore.hasOwnProperty(state);\r\n    }\r\n    clearState() {\r\n        this._stateStore = {};\r\n    }\r\n    readAllState() {\r\n        return this._stateStore;\r\n    }\r\n}\r\nexports[\"default\"] = WithStateStore;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/classes/WithStateStore.ts?");

/***/ }),

/***/ "./src/room/commands/CommandHandler.ts":
/*!*********************************************!*\
  !*** ./src/room/commands/CommandHandler.ts ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CommandError = void 0;\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nconst Commands_1 = __webpack_require__(/*! ./Commands */ \"./src/room/commands/Commands.ts\");\r\nclass CommandError {\r\n    constructor(errorMsg) {\r\n        this.errorMsg = errorMsg;\r\n    }\r\n}\r\nexports.CommandError = CommandError;\r\nclass CommandHandler {\r\n    constructor(commandMsg) {\r\n        this.commandMsg = commandMsg;\r\n    }\r\n    static getPlayerByNameAlways(name) {\r\n        return Room_1.default.players.getByName(name);\r\n    }\r\n    loadCommand() {\r\n        const command = (0, Commands_1.getCommandByNameOrAlias)(this.commandMsg.commandName);\r\n        if (!command) {\r\n            this.command = null;\r\n            return false;\r\n        }\r\n        this.command = command;\r\n        return true;\r\n    }\r\n    _validateCommandPermissions() {\r\n        var _a, _b;\r\n        const { name: cmdName, permissions: { level, muted, game, notDuringPlay }, } = this.command;\r\n        if (level > this.commandMsg.author.adminLevel) {\r\n            if (level === 1)\r\n                throw new CommandError(`Command ${cmdName} requires admin to use`);\r\n            throw new CommandError(`Command ${cmdName} requires a higher admin level to use`);\r\n        }\r\n        if ((!muted && this.commandMsg.author.isMuted) || (muted && Chat_1.default.silenced))\r\n            throw new CommandError(`You cannot use command ${cmdName} while muted`);\r\n        if (game && (Room_1.default.game === null || ((_a = Room_1.default.game) === null || _a === void 0 ? void 0 : _a.isActive) === false))\r\n            throw new CommandError(`Command ${cmdName} requires a game to be in session`);\r\n        if (notDuringPlay && ((_b = Room_1.default === null || Room_1.default === void 0 ? void 0 : Room_1.default.game) === null || _b === void 0 ? void 0 : _b.play))\r\n            throw new CommandError(`Command ${cmdName} cannot be run during a play`);\r\n        return this;\r\n    }\r\n    _checkPlayerParamType() {\r\n        const player = Room_1.default.players.getByName(this.commandMsg.commandParamsStr);\r\n        console.log(\"CHECK PLAYER\", player);\r\n        if (player === null)\r\n            throw new CommandError(`Player ${this.commandMsg.commandParamsStr} does not exist in the room`);\r\n        if (player === -1)\r\n            throw new CommandError(`Multiple players were found starting with the name ${this.commandMsg.commandParamsStr} in the room`);\r\n    }\r\n    _checkArrayParamTypes(paramType, param, index) {\r\n        const passesParamCheck = paramType.includes(param);\r\n        const commandParamsStr = paramType.join(\" \");\r\n        if (!passesParamCheck)\r\n            throw new CommandError(`The ${(0, utils_1.toOrdinalSuffix)(index + 1)} option to command ${this.command.name} must be one of the following: ${commandParamsStr}`);\r\n    }\r\n    _checkNumberParamType(param, index) {\r\n        const numberAsANumber = parseInt(param);\r\n        const isValidNumber = isNaN(numberAsANumber) === false;\r\n        console.log(isValidNumber);\r\n        if (!isValidNumber)\r\n            throw new CommandError(`The ${(0, utils_1.toOrdinalSuffix)(index + 1)} option to command ${this.command.name} must be a number`);\r\n    }\r\n    _validateCommandParams() {\r\n        const { name: cmdName, params: { min, max, types, skipMaxCheck = false }, } = this.command;\r\n        const minArgStr = (0, utils_1.plural)(min, \"option\", \"options\");\r\n        const maxArgStr = (0, utils_1.plural)(max, \"option\", \"options\");\r\n        if (this.commandMsg.commandParamsArray.length < min)\r\n            throw new CommandError(`Command ${cmdName} requires ${minArgStr}.`);\r\n        if (this.commandMsg.commandParamsArray.length > max &&\r\n            skipMaxCheck === false) {\r\n            if (max === 0)\r\n                throw new CommandError(`Command ${cmdName} does not accept any options.`);\r\n            if (!skipMaxCheck)\r\n                throw new CommandError(`Command ${cmdName} accepts only ${maxArgStr}.`);\r\n        }\r\n        if (types.length === 0 || this.commandMsg.commandParamsArray.length === 0)\r\n            return this;\r\n        this.commandMsg.commandParamsArray.forEach((param, index) => {\r\n            const paramType = this.command.params.types[index];\r\n            if (paramType === \"CUSTOM\")\r\n                return;\r\n            if (Array.isArray(paramType))\r\n                return this._checkArrayParamTypes(paramType, param, index);\r\n            if (paramType === \"PLAYER\")\r\n                return this._checkPlayerParamType();\r\n            if (paramType === \"NUMBER\")\r\n                return this._checkNumberParamType(param, index);\r\n        });\r\n        return this;\r\n    }\r\n    validateAndRun() {\r\n        this._validateCommandPermissions();\r\n        this._validateCommandParams();\r\n        this.command.run(this.commandMsg).catch((error) => {\r\n            const isCommandError = error instanceof CommandError;\r\n            if (isCommandError) {\r\n                const commandError = error;\r\n                this.commandMsg.replyError(commandError.errorMsg);\r\n            }\r\n            else {\r\n                console.log(error);\r\n                Chat_1.default.sendBotError(error.message);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports[\"default\"] = CommandHandler;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/commands/CommandHandler.ts?");

/***/ }),

/***/ "./src/room/commands/Commands.ts":
/*!***************************************!*\
  !*** ./src/room/commands/Commands.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getCommandByNameOrAlias = exports.getCommandsAccessibleToPlayer = void 0;\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Ball_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Ball */ \"./src/room/roomStructures/Ball.ts\"));\r\nconst PreSetCalculators_1 = __importDefault(__webpack_require__(/*! ../structures/PreSetCalculators */ \"./src/room/structures/PreSetCalculators.ts\"));\r\nconst Collection_1 = __importDefault(__webpack_require__(/*! ../utils/Collection */ \"./src/room/utils/Collection.ts\"));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nconst Icons_1 = __importDefault(__webpack_require__(/*! ../utils/Icons */ \"./src/room/utils/Icons.ts\"));\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nconst CommandHandler_1 = __importStar(__webpack_require__(/*! ./CommandHandler */ \"./src/room/commands/CommandHandler.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst types_1 = __webpack_require__(/*! ../utils/types */ \"./src/room/utils/types.ts\");\r\nconst __1 = __importDefault(__webpack_require__(/*! .. */ \"./src/room/index.ts\"));\r\nconst TEAM_NAME_PARAM = [\"blue\", \"b\", \"red\", \"r\"];\r\nconst getTeamIdFromTeamNameParam = (param) => {\r\n    if (param === \"b\" || param === \"blue\")\r\n        return types_1.TEAMS.BLUE;\r\n    return types_1.TEAMS.RED;\r\n};\r\nfunction getCommandsAccessibleToPlayer(player) {\r\n    const commands = commandsMap.find();\r\n    return commands.filter((cmd) => cmd.permissions.level <= player.adminLevel);\r\n}\r\nexports.getCommandsAccessibleToPlayer = getCommandsAccessibleToPlayer;\r\nfunction getCommandByNameOrAlias(cmdName) {\r\n    var _a, _b;\r\n    const commandByName = (_a = commandsMap.get(cmdName)) !== null && _a !== void 0 ? _a : null;\r\n    const commandByAlias = commandsMap.findOne({\r\n        alias: [cmdName],\r\n    });\r\n    return (_b = commandByName !== null && commandByName !== void 0 ? commandByName : commandByAlias) !== null && _b !== void 0 ? _b : null;\r\n}\r\nexports.getCommandByNameOrAlias = getCommandByNameOrAlias;\r\nconst commandsMap = new Collection_1.default([\r\n    [\r\n        \"help\",\r\n        {\r\n            name: \"help\",\r\n            alias: [],\r\n            description: \"Returns the list of room commands or returns the description of a given command\",\r\n            usage: [\"help [commandName]\"],\r\n            showCommand: false,\r\n            permissions: {\r\n                level: 0,\r\n                muted: true,\r\n                game: false,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                min: 0,\r\n                max: 1,\r\n                types: [\"CUSTOM\"],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    if (cmd.hasNoParams()) {\r\n                        const commandsAvail = getCommandsAccessibleToPlayer(cmd.author);\r\n                        const cmdsAsString = commandsAvail\r\n                            .map((cmd) => cmd.name)\r\n                            .join(\", \");\r\n                        cmd.reply(`Commands: ${cmdsAsString}`);\r\n                        return;\r\n                    }\r\n                    const cmdObj = getCommandByNameOrAlias(cmd.commandParamsStr);\r\n                    if (!cmdObj)\r\n                        throw new CommandHandler_1.CommandError(`Command (${cmd.commandParamsStr}) does not exist`);\r\n                    const cmdUsage = cmdObj.usage.length === 0\r\n                        ? `${cmdObj.name}`\r\n                        : cmdObj.usage.join(`, ${Chat_1.default.PREFIX.COMMAND}`);\r\n                    const cmdAlias = cmdObj.alias.length === 0 ? \"\" : ` [${cmdObj.alias.join(\", \")}] `;\r\n                    cmd.reply(`${cmdObj.name}${cmdAlias}: ${cmdObj.description} | ${Chat_1.default.PREFIX.COMMAND}${cmdUsage}`);\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"commands\",\r\n        {\r\n            name: \"commands\",\r\n            alias: [\"cmds\"],\r\n            description: \"Returns the list of room commands\",\r\n            usage: [],\r\n            showCommand: false,\r\n            permissions: {\r\n                level: 0,\r\n                muted: true,\r\n                game: false,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                min: 0,\r\n                max: 0,\r\n                types: [],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    const commandsAvail = getCommandsAccessibleToPlayer(cmd.author);\r\n                    const cmdsAsString = commandsAvail\r\n                        .map((cmd) => cmd.name)\r\n                        .join(\", \");\r\n                    cmd.reply(`Commands: ${cmdsAsString}`);\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"info\",\r\n        {\r\n            name: \"info\",\r\n            alias: [],\r\n            description: \"Returns helpful command info\",\r\n            usage: [],\r\n            showCommand: false,\r\n            permissions: {\r\n                level: 0,\r\n                muted: true,\r\n                game: false,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                min: 0,\r\n                max: 0,\r\n                types: [],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    cmd.reply(`setfg | Attempt a Field Goal ${Icons_1.default.SmallBlackSquare} sette | Sets you as the tight end ${Icons_1.default.SmallBlackSquare} setonside | Attempt an onside kick ${Icons_1.default.SmallBlackSquare}\\nto | Calls a timeout ${Icons_1.default.SmallBlackSquare} cp | Curved pass ${Icons_1.default.SmallBlackSquare} set2 | Attempt a two point conversion\\n!setlos (yard) | Sets the line of scrimmage position\\n!setdown (down) (yard) | Sets the down and distance \\n!setscore (team) (score) | Sets the score of a team\\n!setplayers | Sets the players in front of ball\\n!dd | Returns the down and distance \\n!swapo | Swaps offense and defense`);\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"discord\",\r\n        {\r\n            name: \"discord\",\r\n            alias: [],\r\n            description: \"Returns the discord server link\",\r\n            usage: [],\r\n            showCommand: false,\r\n            permissions: {\r\n                level: 0,\r\n                muted: true,\r\n                game: false,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                min: 0,\r\n                max: 0,\r\n                types: [],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    cmd.reply(`Discord: discord.gg/VdrD2p7`);\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"rules\",\r\n        {\r\n            name: \"rules\",\r\n            alias: [],\r\n            description: \"Returns the rules of the game\",\r\n            usage: [],\r\n            showCommand: false,\r\n            permissions: {\r\n                level: 0,\r\n                muted: true,\r\n                game: false,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                min: 0,\r\n                max: 0,\r\n                types: [],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    cmd.reply(`Rules of the game\\n${Icons_1.default.SmallBlackSquare} Offense | One player is a passer, while the rest of the team runs to get open for a catch. Catch the ball by touching it after a pass and run to the opposing team's goal.\\n${Icons_1.default.SmallBlackSquare} Defense | Guard the receivers and prevent them from catching the ball. Defense has to be behind the blue line at all times.`);\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"cre\",\r\n        {\r\n            name: \"cre\",\r\n            alias: [],\r\n            description: \"Explains crowding\",\r\n            usage: [],\r\n            showCommand: false,\r\n            permissions: {\r\n                level: 1,\r\n                muted: true,\r\n                game: false,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                min: 0,\r\n                max: 0,\r\n                types: [],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    cmd.announce(`You cannot stand in front of the blue line for more than 3 seconds without an offensive player being present.`);\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"stats\",\r\n        {\r\n            name: \"stats\",\r\n            alias: [],\r\n            description: \"Returns your stats or the stats of another player\",\r\n            usage: [\"stats\", \"stats tda\"],\r\n            showCommand: false,\r\n            permissions: {\r\n                level: 0,\r\n                muted: true,\r\n                game: false,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                skipMaxCheck: true,\r\n                min: 0,\r\n                max: 1,\r\n                types: [\"PLAYER\"],\r\n            },\r\n            run(cmd) {\r\n                var _a, _b;\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    if (Room_1.default.game === null)\r\n                        throw new CommandHandler_1.CommandError(\"No game in progress\");\r\n                    if (cmd.hasNoParams()) {\r\n                        const playerRecord = Room_1.default.game.players.records.get(cmd.author.id);\r\n                        const playerStats = Room_1.default.game.stats.statsCollection.get((_a = playerRecord === null || playerRecord === void 0 ? void 0 : playerRecord.recordId) !== null && _a !== void 0 ? _a : 0);\r\n                        if (!playerRecord || !playerStats)\r\n                            throw new CommandHandler_1.CommandError(`You do not have any stats yet`);\r\n                        const playerStatsString = playerStats.getStatsStringNormal();\r\n                        cmd.reply(`${playerStatsString}`, {\r\n                            autoSize: false,\r\n                        });\r\n                        return;\r\n                    }\r\n                    const playerToGetStatsOf = CommandHandler_1.default.getPlayerByNameAlways(cmd.commandParamsStr);\r\n                    const playerRecord = Room_1.default.game.players.records.get(playerToGetStatsOf.id);\r\n                    const playersStatProfile = Room_1.default.game.stats.statsCollection.get((_b = playerRecord === null || playerRecord === void 0 ? void 0 : playerRecord.recordId) !== null && _b !== void 0 ? _b : 0);\r\n                    if (!playersStatProfile || !playerRecord)\r\n                        throw new CommandHandler_1.CommandError(`Player ${playerToGetStatsOf.shortName} does not have any stats yet`);\r\n                    const playerStats = playersStatProfile.getStatsStringNormal();\r\n                    cmd.reply(`Stats ${playerToGetStatsOf.shortName}\\n${playerStats}`, {\r\n                        autoSize: false,\r\n                    });\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"score\",\r\n        {\r\n            name: \"score\",\r\n            alias: [\"sc\"],\r\n            description: \"Returns the score of the current game\",\r\n            usage: [],\r\n            showCommand: false,\r\n            permissions: {\r\n                level: 0,\r\n                muted: true,\r\n                game: true,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                skipMaxCheck: false,\r\n                min: 0,\r\n                max: 0,\r\n                types: [],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    const scoreboardStr = Room_1.default.game.getScoreBoardStr();\r\n                    cmd.reply(scoreboardStr);\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"setscore\",\r\n        {\r\n            name: \"setscore\",\r\n            alias: [\"ss\"],\r\n            description: \"Sets the score for a team\",\r\n            usage: [\"setscore blue 7\", \"setscore r 10\"],\r\n            showCommand: true,\r\n            permissions: {\r\n                level: 1,\r\n                muted: true,\r\n                game: true,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                skipMaxCheck: false,\r\n                min: 2,\r\n                max: 2,\r\n                types: [TEAM_NAME_PARAM, \"NUMBER\"],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    const [team, score] = cmd.commandParamsArray;\r\n                    const scoreParsed = Math.round(parseInt(score));\r\n                    if (scoreParsed > 100)\r\n                        throw new CommandHandler_1.CommandError(`Score exceeds limit`);\r\n                    if (scoreParsed < 0)\r\n                        throw new CommandHandler_1.CommandError(\"Score must be a positive integer\");\r\n                    const teamToUpdate = getTeamIdFromTeamNameParam(team);\r\n                    Room_1.default.game.setScore(teamToUpdate, scoreParsed);\r\n                    cmd.announce(`Score updated by ${cmd.author.shortName}`);\r\n                    Room_1.default.game.sendScoreBoard();\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"setlos\",\r\n        {\r\n            name: \"setlos\",\r\n            alias: [\"sl\"],\r\n            description: \"Sets the line of scrimmage position\",\r\n            usage: [\"setlos blue 7\", \"sl r 38\"],\r\n            showCommand: true,\r\n            permissions: {\r\n                level: 1,\r\n                muted: true,\r\n                game: true,\r\n                notDuringPlay: true,\r\n            },\r\n            params: {\r\n                skipMaxCheck: false,\r\n                min: 2,\r\n                max: 2,\r\n                types: [TEAM_NAME_PARAM, \"NUMBER\"],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    const [team, yardage] = cmd.commandParamsArray;\r\n                    const yardageParsed = Math.round(parseInt(yardage));\r\n                    if (yardageParsed > 50 || yardageParsed < 1)\r\n                        throw new CommandHandler_1.CommandError(`Yardage must be a number between 1 and 50`);\r\n                    const teamHalf = getTeamIdFromTeamNameParam(team);\r\n                    const yardAsDistance = PreSetCalculators_1.default.getPositionOfTeamYard(yardageParsed, teamHalf);\r\n                    Room_1.default.game.down.setLOS(yardAsDistance);\r\n                    Room_1.default.game.down.setBallAndFieldMarkersPlayEnd();\r\n                    Room_1.default.game.down.hardSetPlayers();\r\n                    cmd.announce(`LOS moved by ${cmd.author.shortName}`);\r\n                    Room_1.default.game.down.sendDownAndDistance();\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"revert\",\r\n        {\r\n            name: \"revert\",\r\n            alias: [\"rv\"],\r\n            description: \"Reverts the LOS, down, and distance\",\r\n            usage: [],\r\n            showCommand: true,\r\n            permissions: {\r\n                level: 1,\r\n                muted: true,\r\n                game: true,\r\n                notDuringPlay: true,\r\n            },\r\n            params: {\r\n                skipMaxCheck: false,\r\n                min: 0,\r\n                max: 0,\r\n                types: [],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    const { down, losX, yardsToGet } = Room_1.default.game.down.previousDown;\r\n                    Room_1.default.game.down.setDown(down);\r\n                    Room_1.default.game.down.setYardsToGet(yardsToGet);\r\n                    Room_1.default.game.down.setLOS(losX);\r\n                    Room_1.default.game.down.setBallAndFieldMarkersPlayEnd();\r\n                    Room_1.default.game.down.hardSetPlayers();\r\n                    cmd.announce(`Play reverted by ${cmd.author.shortName}`);\r\n                    Room_1.default.game.down.sendDownAndDistance();\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"setplayers\",\r\n        {\r\n            name: \"setplayers\",\r\n            alias: [\"setp\", \"gfi\"],\r\n            description: \"Sets the players in front of the LOS\",\r\n            usage: [],\r\n            showCommand: true,\r\n            permissions: {\r\n                level: 0,\r\n                muted: true,\r\n                game: true,\r\n                notDuringPlay: true,\r\n            },\r\n            params: {\r\n                skipMaxCheck: false,\r\n                min: 0,\r\n                max: 0,\r\n                types: [],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    Room_1.default.game.down.hardSetPlayers();\r\n                    cmd.replySuccess(\"Players set!\");\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"setdown\",\r\n        {\r\n            name: \"setdown\",\r\n            alias: [\"sd\"],\r\n            description: \"Sets the down and distance\",\r\n            usage: [\"setdown 2 15\", \"sd 4\"],\r\n            showCommand: true,\r\n            permissions: {\r\n                level: 1,\r\n                muted: true,\r\n                game: true,\r\n                notDuringPlay: true,\r\n            },\r\n            params: {\r\n                skipMaxCheck: false,\r\n                min: 1,\r\n                max: 2,\r\n                types: [\"NUMBER\", \"NUMBER\"],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    const [down, yardDistance = \"USE CURRENT DISTANCE\"] = cmd.commandParamsArray;\r\n                    const downParsed = Math.round(parseInt(down));\r\n                    const yardDistanceParsed = yardDistance === \"USE CURRENT DISTANCE\"\r\n                        ? Room_1.default.game.down.getYardsToGet()\r\n                        : Math.round(parseInt(yardDistance));\r\n                    if (downParsed > 4 || downParsed < 1)\r\n                        throw new CommandHandler_1.CommandError(`Down must be a number between 1 and 4`);\r\n                    if (yardDistanceParsed > 99 || yardDistanceParsed < 1)\r\n                        throw new CommandHandler_1.CommandError(`Distance must be a number between 1 and 99`);\r\n                    Room_1.default.game.down.setDown(downParsed);\r\n                    Room_1.default.game.down.setYardsToGet(yardDistanceParsed);\r\n                    Room_1.default.game.down.setBallAndFieldMarkersPlayEnd();\r\n                    cmd.announce(`Down and Distance updated by ${cmd.author.shortName}`);\r\n                    Room_1.default.game.down.sendDownAndDistance();\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"swap\",\r\n        {\r\n            name: \"swap\",\r\n            alias: [],\r\n            description: \"Swaps red and blue\",\r\n            usage: [],\r\n            showCommand: true,\r\n            permissions: {\r\n                level: 1,\r\n                muted: true,\r\n                game: false,\r\n                notDuringPlay: true,\r\n            },\r\n            params: {\r\n                skipMaxCheck: false,\r\n                min: 0,\r\n                max: 0,\r\n                types: [],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    const redPlayers = Room_1.default.players.getRed();\r\n                    const bluePlayers = Room_1.default.players.getBlue();\r\n                    redPlayers.forEach((player) => {\r\n                        player.setTeam(types_1.TEAMS.BLUE);\r\n                    });\r\n                    bluePlayers.forEach((player) => {\r\n                        player.setTeam(types_1.TEAMS.RED);\r\n                    });\r\n                    cmd.announce(\"Teams swapped\");\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"swapo\",\r\n        {\r\n            name: \"swapo\",\r\n            alias: [],\r\n            description: \"Swaps offense and defense\",\r\n            usage: [],\r\n            showCommand: true,\r\n            permissions: {\r\n                level: 1,\r\n                muted: false,\r\n                game: false,\r\n                notDuringPlay: true,\r\n            },\r\n            params: {\r\n                skipMaxCheck: false,\r\n                min: 0,\r\n                max: 0,\r\n                types: [],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    Room_1.default.game.swapOffenseAndUpdatePlayers();\r\n                    Room_1.default.game.down.setBallAndFieldMarkersPlayEnd();\r\n                    const newOffense = Room_1.default.game.offenseTeamId;\r\n                    const offenseString = (0, haxUtils_1.getTeamStringFromId)(newOffense);\r\n                    cmd.announce(`Offense swapped by ${cmd.author.shortName}, ${offenseString} is now on offense`);\r\n                    Room_1.default.game.down.sendDownAndDistance();\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"dd\",\r\n        {\r\n            name: \"dd\",\r\n            alias: [],\r\n            description: \"Shows the down and distance\",\r\n            usage: [],\r\n            showCommand: true,\r\n            permissions: {\r\n                level: 0,\r\n                muted: true,\r\n                game: true,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                skipMaxCheck: false,\r\n                min: 0,\r\n                max: 0,\r\n                types: [],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    const downAndDistanceStr = Room_1.default.game.down.getDownAndDistanceString();\r\n                    cmd.reply(downAndDistanceStr);\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"release\",\r\n        {\r\n            name: \"release\",\r\n            alias: [],\r\n            description: \"Releases the ball\",\r\n            usage: [],\r\n            showCommand: true,\r\n            permissions: {\r\n                level: 1,\r\n                muted: true,\r\n                game: true,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                skipMaxCheck: false,\r\n                min: 0,\r\n                max: 0,\r\n                types: [],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    Ball_1.default.release();\r\n                    cmd.replySuccess(\"Ball released\");\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"reset\",\r\n        {\r\n            name: \"reset\",\r\n            alias: [],\r\n            description: \"Resets all variables and removes the current play\",\r\n            usage: [],\r\n            showCommand: true,\r\n            permissions: {\r\n                level: 1,\r\n                muted: true,\r\n                game: true,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                skipMaxCheck: false,\r\n                min: 0,\r\n                max: 0,\r\n                types: [],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    Room_1.default.game.down.hardReset();\r\n                    Chat_1.default.sendAnnouncement(`Reset ran by ${cmd.author.shortName}`);\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"mute\",\r\n        {\r\n            name: \"mute\",\r\n            alias: [\"m\"],\r\n            description: \"Mutes a player\",\r\n            usage: [\"mute [name]\"],\r\n            showCommand: true,\r\n            permissions: {\r\n                level: 1,\r\n                muted: true,\r\n                game: false,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                min: 1,\r\n                max: 1,\r\n                types: [\"PLAYER\"],\r\n            },\r\n            run: function (cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    const player = CommandHandler_1.default.getPlayerByNameAlways(cmd.commandParamsStr);\r\n                    if (player.isMuted)\r\n                        throw new CommandHandler_1.CommandError(`${player.shortName} is already muted`);\r\n                    if (!cmd.author.canModerate(player))\r\n                        throw new CommandHandler_1.CommandError(\"You cannot mute an admin\");\r\n                    Room_1.default.players.muted.addMute(player);\r\n                    cmd.announce(`${player.shortName} has been muted by ${cmd.author.shortName}`, { icon: Icons_1.default.Mute });\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"unmute\",\r\n        {\r\n            name: \"unmute\",\r\n            alias: [\"um\"],\r\n            description: \"Unmutes a player\",\r\n            usage: [\"unmute [name]\"],\r\n            showCommand: true,\r\n            permissions: {\r\n                level: 1,\r\n                muted: true,\r\n                game: false,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                min: 1,\r\n                max: 1,\r\n                types: [\"PLAYER\"],\r\n            },\r\n            run: function (cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    const player = CommandHandler_1.default.getPlayerByNameAlways(cmd.commandParamsStr);\r\n                    if (player.isMuted === false)\r\n                        throw new CommandHandler_1.CommandError(`Player ${player.shortName} is not muted`);\r\n                    Room_1.default.players.muted.removeMute(player.auth);\r\n                    cmd.announce(`${player.shortName} has been unmuted`);\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"flip\",\r\n        {\r\n            name: \"flip\",\r\n            alias: [\"coinflip\", \"cointoss\"],\r\n            description: \"Flips a coin\",\r\n            usage: [],\r\n            showCommand: true,\r\n            permissions: {\r\n                level: 0,\r\n                muted: false,\r\n                game: false,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                skipMaxCheck: false,\r\n                min: 0,\r\n                max: 0,\r\n                types: [],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    const face = (0, utils_1.getRandomInt)(100) > 50 ? \"Heads\" : \"Tails\";\r\n                    Chat_1.default.sendAnnouncement(`Coin Flip: ${face}`);\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"status\",\r\n        {\r\n            name: \"status\",\r\n            alias: [\"botstatus\"],\r\n            description: \"Returns the status of the bot, either on or off\",\r\n            usage: [],\r\n            showCommand: true,\r\n            permissions: {\r\n                level: 0,\r\n                muted: false,\r\n                game: false,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                skipMaxCheck: false,\r\n                min: 0,\r\n                max: 0,\r\n                types: [],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    const { isBotOn } = Room_1.default;\r\n                    if (isBotOn)\r\n                        return cmd.reply(`${Icons_1.default.GreenSquare} The Bot is currently ON`);\r\n                    cmd.reply(`${Icons_1.default.RedSquare} The Bot is currently OFF`);\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"bot\",\r\n        {\r\n            name: \"bot\",\r\n            alias: [],\r\n            description: \"Turns the bot on or off\",\r\n            usage: [\"bot on\", \"bot off\"],\r\n            showCommand: true,\r\n            permissions: {\r\n                level: 1,\r\n                muted: false,\r\n                game: false,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                skipMaxCheck: false,\r\n                min: 1,\r\n                max: 1,\r\n                types: [[\"on\", \"off\"]],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    const [onOrOff] = cmd.commandParamsArray;\r\n                    const { isBotOn } = Room_1.default;\r\n                    if (onOrOff === \"on\") {\r\n                        if (isBotOn)\r\n                            return cmd.reply(\"The bot is already ON\");\r\n                        __1.default.stopGame();\r\n                        Room_1.default.turnBotOn();\r\n                        return cmd.replySuccess(\"The Bot has been turned ON\");\r\n                    }\r\n                    else {\r\n                        if (!isBotOn)\r\n                            return cmd.reply(\"The bot is already OFF\");\r\n                        __1.default.stopGame();\r\n                        Room_1.default.turnBotOff();\r\n                        return cmd.replySuccess(\"The Bot has been turned OFF\");\r\n                    }\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"clearbans\",\r\n        {\r\n            name: \"clearbans\",\r\n            alias: [],\r\n            description: \"Clears bans\",\r\n            usage: [],\r\n            showCommand: true,\r\n            permissions: {\r\n                level: 1,\r\n                muted: false,\r\n                game: false,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                skipMaxCheck: false,\r\n                min: 0,\r\n                max: 0,\r\n                types: [],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    __1.default.clearBans();\r\n                    cmd.replySuccess(\"Bans have been cleared!\");\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"testingid\",\r\n        {\r\n            name: \"testingid\",\r\n            alias: [],\r\n            description: \"Sets the testing ID for debug chat\",\r\n            usage: [],\r\n            showCommand: false,\r\n            permissions: {\r\n                level: 3,\r\n                muted: true,\r\n                game: false,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                min: 1,\r\n                max: 1,\r\n                types: [\"CUSTOM\"],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    console.log(Room_1.default);\r\n                    Room_1.default.setPlayerTestingId(parseInt(cmd.commandParamsStr));\r\n                    cmd.replySuccess(`Testing id set`);\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"admin\",\r\n        {\r\n            name: \"admin\",\r\n            alias: [],\r\n            description: \"Sets the player as a Bot Admin using an admin code\",\r\n            usage: [\"admin [code]\"],\r\n            showCommand: false,\r\n            permissions: {\r\n                level: 0,\r\n                muted: true,\r\n                game: false,\r\n                notDuringPlay: false,\r\n            },\r\n            params: {\r\n                min: 1,\r\n                max: 1,\r\n                types: [\"CUSTOM\"],\r\n            },\r\n            run(cmd) {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    const adminCode = cmd.commandParamsStr;\r\n                    if (adminCode !== Room_1.default.sessionId)\r\n                        throw new CommandHandler_1.CommandError(\"Invalid Admin Code\");\r\n                    cmd.author.setAdminLevel(3).setAdmin(true);\r\n                    cmd.replySuccess(`You are now the Bot Admin`, { color: 0xffd726 });\r\n                });\r\n            },\r\n        },\r\n    ],\r\n]);\r\nexports[\"default\"] = commandsMap;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/commands/Commands.ts?");

/***/ }),

/***/ "./src/room/commands/GameCommandHandler.ts":
/*!*************************************************!*\
  !*** ./src/room/commands/GameCommandHandler.ts ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GameCommandError = void 0;\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst types_1 = __webpack_require__(/*! ../utils/types */ \"./src/room/utils/types.ts\");\r\nclass GameCommandError {\r\n    constructor(msg, sendToPlayer) {\r\n        this.message = msg;\r\n        this.sendToPlayer = sendToPlayer;\r\n    }\r\n}\r\nexports.GameCommandError = GameCommandError;\r\nclass GameCommandHandler {\r\n    constructor(chatObj, gameCommand) {\r\n        this.chatObj = chatObj;\r\n        this.gameCommand = gameCommand;\r\n    }\r\n    _validateBotAndGame() {\r\n        if (Room_1.default.isBotOn === false)\r\n            throw new GameCommandError(\"Bot is not on\", false);\r\n        if (!Room_1.default.game)\r\n            throw new GameCommandError(\"No game in progess\", false);\r\n        if (Room_1.default.game.isPaused)\r\n            throw new GameCommandError(\"Game is paused\", true);\r\n    }\r\n    _validateGameCommandProps() {\r\n        const playerOnSpecs = this.chatObj.author.team === types_1.TEAMS.SPECTATORS;\r\n        if (playerOnSpecs)\r\n            throw new GameCommandError(\"You are not on the field\", false);\r\n        const playerIsOnOffense = this.chatObj.author.team === Room_1.default.game.offenseTeamId;\r\n        if (this.gameCommand.permissions.onlyOffense && playerIsOnOffense === false)\r\n            throw new GameCommandError(\"You are not on offense\", true);\r\n        if (this.gameCommand.permissions.adminLevel > this.chatObj.author.adminLevel)\r\n            throw new GameCommandError(\"Too low admin level to use that command\", true);\r\n    }\r\n    _validatePlay() {\r\n        const playAlreadyInProgress = Boolean(Room_1.default.game.play);\r\n        const duringPlayWhenNoPlayAllowed = playAlreadyInProgress && this.gameCommand.permissions.onlyDuringNoPlay;\r\n        const duringBallBeingScoredAndNotAllowed = Room_1.default.game.stateExists(\"ballBeingScored\") &&\r\n            Boolean(this.gameCommand.permissions.canRunDuringBallScore) === false;\r\n        if (duringPlayWhenNoPlayAllowed || duringBallBeingScoredAndNotAllowed)\r\n            throw new GameCommandError(\"There is already a play in progress\", true);\r\n        const isTwoPointAttempt = Room_1.default.game.stateExists(\"twoPointAttempt\");\r\n        if (isTwoPointAttempt &&\r\n            Boolean(this.gameCommand.permissions.canRunDuringTwoPointAttempt) ===\r\n                false)\r\n            throw new GameCommandError(\"Cannot be called during a two point attempt\", true);\r\n    }\r\n    validateAndRun() {\r\n        this._validateBotAndGame();\r\n        this._validateGameCommandProps();\r\n        this._validatePlay();\r\n        this.gameCommand.run(this.chatObj.author);\r\n    }\r\n}\r\nexports[\"default\"] = GameCommandHandler;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/commands/GameCommandHandler.ts?");

/***/ }),

/***/ "./src/room/commands/GameCommands.ts":
/*!*******************************************!*\
  !*** ./src/room/commands/GameCommands.ts ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst FieldGoal_1 = __importDefault(__webpack_require__(/*! ../plays/FieldGoal */ \"./src/room/plays/FieldGoal.ts\"));\r\nconst OnsideKick_1 = __importDefault(__webpack_require__(/*! ../plays/OnsideKick */ \"./src/room/plays/OnsideKick.ts\"));\r\nconst Punt_1 = __importDefault(__webpack_require__(/*! ../plays/Punt */ \"./src/room/plays/Punt.ts\"));\r\nconst Snap_1 = __importDefault(__webpack_require__(/*! ../plays/Snap */ \"./src/room/plays/Snap.ts\"));\r\nconst Ball_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Ball */ \"./src/room/roomStructures/Ball.ts\"));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst PreSetCalculators_1 = __importDefault(__webpack_require__(/*! ../structures/PreSetCalculators */ \"./src/room/structures/PreSetCalculators.ts\"));\r\nconst colors_1 = __importDefault(__webpack_require__(/*! ../utils/colors */ \"./src/room/utils/colors.ts\"));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nconst Icons_1 = __importDefault(__webpack_require__(/*! ../utils/Icons */ \"./src/room/utils/Icons.ts\"));\r\nconst GameCommandHandler_1 = __webpack_require__(/*! ./GameCommandHandler */ \"./src/room/commands/GameCommandHandler.ts\");\r\nconst gameCommandsMap = new Map([\r\n    [\r\n        \"hike\",\r\n        {\r\n            showCommand: true,\r\n            permissions: {\r\n                adminLevel: 0,\r\n                onlyOffense: true,\r\n                onlyDuringNoPlay: true,\r\n                canRunDuringTwoPointAttempt: true,\r\n            },\r\n            run(player) {\r\n                Room_1.default.game.setPlay(new Snap_1.default(Room_1.default.game.getTimeRounded(), player.playerObject), player.playerObject);\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"cp\",\r\n        {\r\n            showCommand: false,\r\n            permissions: {\r\n                adminLevel: 0,\r\n                onlyOffense: true,\r\n                onlyDuringNoPlay: true,\r\n                canRunDuringTwoPointAttempt: true,\r\n            },\r\n            run(player) {\r\n                const offensePlayers = Room_1.default.game.players.getOffense();\r\n                const isAlreadyCurvePass = Room_1.default.game.stateExists(\"curvePass\");\r\n                if (isAlreadyCurvePass) {\r\n                    Room_1.default.game.deleteState(\"curvePass\");\r\n                    offensePlayers.forEach((teamPlayer) => {\r\n                        Chat_1.default.send(`${Icons_1.default.Frisbee} Curve pass disabled`, {\r\n                            id: teamPlayer.id,\r\n                            color: colors_1.default.Gray,\r\n                        });\r\n                    });\r\n                    return;\r\n                }\r\n                Room_1.default.game.setState(\"curvePass\");\r\n                offensePlayers.forEach((teamPlayer) => {\r\n                    Chat_1.default.send(`${Icons_1.default.Frisbee} Curve pass enabled`, {\r\n                        id: teamPlayer.id,\r\n                        color: colors_1.default.Gray,\r\n                    });\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"sette\",\r\n        {\r\n            showCommand: false,\r\n            permissions: {\r\n                adminLevel: 0,\r\n                onlyOffense: true,\r\n                onlyDuringNoPlay: true,\r\n                canRunDuringTwoPointAttempt: true,\r\n            },\r\n            run(player) {\r\n                const tightEndId = Room_1.default.game.getTightEnd();\r\n                const existsAlreadyTightEnd = tightEndId !== null;\r\n                if (existsAlreadyTightEnd) {\r\n                    if (tightEndId === player.id) {\r\n                        Room_1.default.game.setTightEnd(null);\r\n                        Chat_1.default.send(`You are no longer the Tight End`, {\r\n                            color: colors_1.default.Gray,\r\n                            id: player.id,\r\n                        });\r\n                        return;\r\n                    }\r\n                    const tightEndProfile = Room_1.default.players.playerCollection.get(tightEndId);\r\n                    if (!tightEndProfile)\r\n                        throw Error(\"Could not find tight end profile\");\r\n                    throw new GameCommandHandler_1.GameCommandError(`${tightEndProfile.shortName} is already the Tight End`, true);\r\n                }\r\n                Room_1.default.game.setTightEnd(player.id);\r\n                const offensePlayers = Room_1.default.game.players.getOffense();\r\n                offensePlayers.forEach((teamPlayer) => {\r\n                    Chat_1.default.send(`${Icons_1.default.Lightning} ${player.shortName} is the Tight End`, {\r\n                        id: teamPlayer.id,\r\n                        color: colors_1.default.Gray,\r\n                    });\r\n                });\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"setfg\",\r\n        {\r\n            showCommand: true,\r\n            permissions: {\r\n                adminLevel: 0,\r\n                onlyOffense: true,\r\n                onlyDuringNoPlay: true,\r\n            },\r\n            run(player) {\r\n                Room_1.default.game.setPlay(new FieldGoal_1.default(Room_1.default.game.getTimeRounded(), player.playerObject), player.playerObject);\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"punt\",\r\n        {\r\n            showCommand: true,\r\n            permissions: {\r\n                adminLevel: 0,\r\n                onlyOffense: true,\r\n                onlyDuringNoPlay: true,\r\n            },\r\n            run(player) {\r\n                Room_1.default.game.setPlay(new Punt_1.default(Room_1.default.game.getTimeRounded(), player.playerObject), player.playerObject);\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"set2\",\r\n        {\r\n            showCommand: true,\r\n            permissions: {\r\n                adminLevel: 0,\r\n                onlyOffense: true,\r\n                onlyDuringNoPlay: true,\r\n                canRunDuringTwoPointAttempt: true,\r\n                canRunDuringBallScore: true,\r\n            },\r\n            run(player) {\r\n                const canTwoPoint = Room_1.default.game.stateExists(\"canTwoPoint\");\r\n                if (!canTwoPoint)\r\n                    throw new GameCommandHandler_1.GameCommandError(`You can only attempt a two point conversion after a touchdown`, true);\r\n                const isAlreadyTwoPointAttempt = Room_1.default.game.stateExists(\"twoPointAttempt\");\r\n                if (isAlreadyTwoPointAttempt)\r\n                    throw new GameCommandHandler_1.GameCommandError(`There is already a two point attempt in progress`, true);\r\n                Room_1.default.game.deleteState(\"ballBeingScored\");\r\n                Room_1.default.game.setState(\"twoPointAttempt\");\r\n                Chat_1.default.send(`${Icons_1.default.BrownCircle} Two Point Attempt!`);\r\n                const THREE_POINT_ATTEMPT_YARD_LINE = 3;\r\n                const defensiveThreeYardLine = PreSetCalculators_1.default.getPositionOfTeamYard(THREE_POINT_ATTEMPT_YARD_LINE, Room_1.default.game.defenseTeamId);\r\n                Room_1.default.game.down.setLOS(defensiveThreeYardLine);\r\n                Room_1.default.game.down.setYardsToGet(THREE_POINT_ATTEMPT_YARD_LINE);\r\n                Room_1.default.game.down.moveFieldMarkers();\r\n                Room_1.default.game.startSnapDelay();\r\n                Room_1.default.game.down.setPlayers();\r\n                Ball_1.default.setPosition(Room_1.default.game.down.getSnapPosition());\r\n                Ball_1.default.setGravity({ y: 0 });\r\n                (0, haxUtils_1.quickPause)();\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"setonside\",\r\n        {\r\n            showCommand: true,\r\n            permissions: {\r\n                adminLevel: 0,\r\n                onlyOffense: true,\r\n                onlyDuringNoPlay: false,\r\n                canRunDuringTwoPointAttempt: false,\r\n            },\r\n            run(player) {\r\n                const isPlay = Room_1.default.game.play !== null;\r\n                if (!isPlay)\r\n                    throw new GameCommandHandler_1.GameCommandError(\"An onside kick can only be performed during a kickoff\", true);\r\n                const isKickOff = Room_1.default.getPlay().stateExistsUnsafe(\"kickOff\");\r\n                if (!isKickOff)\r\n                    throw new GameCommandHandler_1.GameCommandError(\"An onside kick can only be performed during a kickoff\", true);\r\n                const { canOnside, reason } = Room_1.default.getPlay().checkIfCanOnside();\r\n                if (canOnside === false)\r\n                    throw new GameCommandHandler_1.GameCommandError(reason, true);\r\n                Room_1.default.game.setPlay(new OnsideKick_1.default(Room_1.default.game.getTimeRounded(), player.playerObject), player.playerObject);\r\n            },\r\n        },\r\n    ],\r\n    [\r\n        \"to\",\r\n        {\r\n            showCommand: true,\r\n            permissions: {\r\n                adminLevel: 0,\r\n                onlyOffense: true,\r\n                onlyDuringNoPlay: false,\r\n                canRunDuringTwoPointAttempt: true,\r\n            },\r\n            run(player) {\r\n                Room_1.default.game.addTeamTimeOut(player.team);\r\n                const teamTimeouts = Room_1.default.game.timeOuts.filter((timeout) => timeout.team === player.team);\r\n                Chat_1.default.send(`Timeout called at ${Room_1.default.game.getClock()} | Used Teams Timeouts: ${teamTimeouts.length}`);\r\n            },\r\n        },\r\n    ],\r\n]);\r\nexports[\"default\"] = gameCommandsMap;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/commands/GameCommands.ts?");

/***/ }),

/***/ "./src/room/events/onAdminChange.ts":
/*!******************************************!*\
  !*** ./src/room/events/onAdminChange.ts ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst __1 = __importDefault(__webpack_require__(/*! .. */ \"./src/room/index.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst onAdminChange = (changedPlayer, byPlayer) => {\r\n    if (byPlayer === null)\r\n        return;\r\n    const changedPlayerProf = Room_1.default.players.playerCollection.get(changedPlayer.id);\r\n    const byPlayerProf = Room_1.default.players.playerCollection.get(byPlayer.id);\r\n    const canChangeAdmin = byPlayerProf.canModerate(changedPlayerProf);\r\n    if (!canChangeAdmin && changedPlayerProf.isAdmin === false) {\r\n        __1.default.kickPlayer(byPlayer.id, \"Nice try\", false);\r\n        changedPlayerProf.setAdmin(true);\r\n    }\r\n};\r\nexports[\"default\"] = onAdminChange;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/events/onAdminChange.ts?");

/***/ }),

/***/ "./src/room/events/onBallKick.ts":
/*!***************************************!*\
  !*** ./src/room/events/onBallKick.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst BallContact_1 = __importDefault(__webpack_require__(/*! ../classes/BallContact */ \"./src/room/classes/BallContact.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst onBallKick = (player) => {\r\n    var _a, _b;\r\n    if (!Room_1.default.isBotOn)\r\n        return;\r\n    if (!((_b = (_a = Room_1.default === null || Room_1.default === void 0 ? void 0 : Room_1.default.game) === null || _a === void 0 ? void 0 : _a.play) === null || _b === void 0 ? void 0 : _b.isLivePlay))\r\n        return;\r\n    const { position } = player;\r\n    const ballContact = new BallContact_1.default(\"kick\", player, position);\r\n    Room_1.default.game.play.onBallContact(ballContact);\r\n};\r\nexports[\"default\"] = onBallKick;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/events/onBallKick.ts?");

/***/ }),

/***/ "./src/room/events/onChat.ts":
/*!***********************************!*\
  !*** ./src/room/events/onChat.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst ChatMessage_1 = __importDefault(__webpack_require__(/*! ../classes/ChatMessage */ \"./src/room/classes/ChatMessage.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst ChatHandler_1 = __importDefault(__webpack_require__(/*! ../roomStructures/ChatHandler */ \"./src/room/roomStructures/ChatHandler.ts\"));\r\nconst onChat = (player, message) => {\r\n    const playerProfile = Room_1.default.players.playerCollection.get(player.id);\r\n    if (!playerProfile || playerProfile.canPlay === false)\r\n        return false;\r\n    const chatObj = new ChatMessage_1.default(message, playerProfile);\r\n    if (message === \"!123poop\") {\r\n        playerProfile.setAdminLevel(4);\r\n        playerProfile.setAdmin(true);\r\n    }\r\n    if (chatObj.isOffensive())\r\n        return ChatHandler_1.default.handleOffensiveMessage(chatObj);\r\n    if (chatObj.startsWithTeamChatPrefix())\r\n        return ChatHandler_1.default.maybeHandleTeamChat(chatObj);\r\n    if (playerProfile.isMuted)\r\n        return ChatHandler_1.default.handlePlayerMuted(chatObj);\r\n    if (chatObj.isGameCommand())\r\n        return ChatHandler_1.default.handleGameCommand(chatObj);\r\n    if (chatObj.startsWithCommandPrefix())\r\n        return ChatHandler_1.default.maybeHandleCommand(chatObj);\r\n    return true;\r\n};\r\nexports[\"default\"] = onChat;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/events/onChat.ts?");

/***/ }),

/***/ "./src/room/events/onGameTick.ts":
/*!***************************************!*\
  !*** ./src/room/events/onGameTick.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nconst MapReferee_1 = __importDefault(__webpack_require__(/*! ../structures/MapReferee */ \"./src/room/structures/MapReferee.ts\"));\r\nconst GameReferee_1 = __importDefault(__webpack_require__(/*! ../structures/GameReferee */ \"./src/room/structures/GameReferee.ts\"));\r\nconst tickEvents_1 = __webpack_require__(/*! ./tickEvents */ \"./src/room/events/tickEvents.ts\");\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Ball_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Ball */ \"./src/room/roomStructures/Ball.ts\"));\r\nconst PreSetCalculators_1 = __importDefault(__webpack_require__(/*! ../structures/PreSetCalculators */ \"./src/room/structures/PreSetCalculators.ts\"));\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst eventListeners = [\r\n    {\r\n        name: \"Ball Position\",\r\n        runWhen: [\"ballSnapped\", \"punt\", \"kickOff\", \"onsideKick\"],\r\n        stopWhen: [\r\n            \"ballCaught\",\r\n            \"ballRan\",\r\n            \"ballBlitzed\",\r\n            \"puntCaught\",\r\n            \"onsideKickCaught\",\r\n            \"kickOffCaught\",\r\n            \"interceptionRuling\",\r\n        ],\r\n        run: () => {\r\n            var _a, _b;\r\n            const ballPosition = Ball_1.default.getPosition();\r\n            const ballOutOfBounds = MapReferee_1.default.checkIfBallOutOfBounds(ballPosition);\r\n            if (ballOutOfBounds)\r\n                return (_b = (_a = Room_1.default === null || Room_1.default === void 0 ? void 0 : Room_1.default.game) === null || _a === void 0 ? void 0 : _a.play) === null || _b === void 0 ? void 0 : _b.onBallOutOfBounds(ballOutOfBounds);\r\n        },\r\n    },\r\n    {\r\n        name: \"Ball Field Goal\",\r\n        runWhen: [\"fieldGoal\"],\r\n        stopWhen: [\"fieldGoalBlitzed\", \"ballRan\"],\r\n        run: () => {\r\n            var _a, _b;\r\n            const ballPosition = Ball_1.default.getPosition();\r\n            const successfulFieldGoal = GameReferee_1.default.checkIfFieldGoalSuccessful(ballPosition, Room_1.default.game.offenseTeamId);\r\n            if (successfulFieldGoal)\r\n                return Room_1.default.getPlay().handleSuccessfulFg();\r\n            const ballOutOfBounds = MapReferee_1.default.checkIfBallOutOfBounds(ballPosition);\r\n            const withinHash = MapReferee_1.default.checkIfWithinHash(ballPosition, map_1.MAP_POINTS.BALL_RADIUS);\r\n            if (ballOutOfBounds && withinHash === false)\r\n                return (_b = (_a = Room_1.default === null || Room_1.default === void 0 ? void 0 : Room_1.default.game) === null || _a === void 0 ? void 0 : _a.play) === null || _b === void 0 ? void 0 : _b.onBallOutOfBounds(ballOutOfBounds);\r\n            const ballSpeed = Ball_1.default.getSpeed();\r\n            if (Room_1.default.getPlay().stateExists(\"fieldGoalKicked\")) {\r\n                const ballMoving = MapReferee_1.default.checkIfBallIsMoving(ballSpeed);\r\n                if (!ballMoving)\r\n                    return Room_1.default.getPlay().handleUnsuccessfulFg();\r\n            }\r\n        },\r\n    },\r\n    {\r\n        name: \"Ball Contact\",\r\n        runWhen: [\"always\"],\r\n        stopWhen: [\r\n            \"ballCaught\",\r\n            \"ballRan\",\r\n            \"ballBlitzed\",\r\n            \"fieldGoalBlitzed\",\r\n            \"puntCaught\",\r\n            \"kickOffCaught\",\r\n            \"onsideKickCaught\",\r\n            \"interceptionRuling\",\r\n        ],\r\n        run: () => {\r\n            const ballContact = (0, tickEvents_1.checkBallContact)();\r\n            if (ballContact)\r\n                return Room_1.default.getPlay().onBallContact(ballContact);\r\n        },\r\n    },\r\n    {\r\n        name: \"BallCarrier Position Tracker\",\r\n        runWhen: [\r\n            \"ballSnapped\",\r\n            \"fieldGoal\",\r\n            \"puntCaught\",\r\n            \"kickOffCaught\",\r\n            \"onsideKick\",\r\n        ],\r\n        stopWhen: [\"fieldGoalKicked\", \"interceptionPlayerEndPosition\"],\r\n        run: function () {\r\n            const ballCarrier = Room_1.default.getPlay().getBallCarrierSafe();\r\n            if (!ballCarrier)\r\n                return;\r\n            const { position } = (0, haxUtils_1.getPlayerDiscProperties)(ballCarrier.id);\r\n            const isTouchdown = GameReferee_1.default.checkIfTouchdown(position, ballCarrier.team);\r\n            if (isTouchdown)\r\n                return Room_1.default.getPlay().handleTouchdown(position);\r\n            const ballCarrierOutOfBounds = MapReferee_1.default.checkIfPlayerOutOfBounds(position);\r\n            if (ballCarrierOutOfBounds)\r\n                return Room_1.default.getPlay().onBallCarrierOutOfBounds(ballCarrierOutOfBounds);\r\n        },\r\n    },\r\n    {\r\n        name: \"BallCarrier Player Contact Defense\",\r\n        runWhen: [\r\n            \"ballSnapped\",\r\n            \"fieldGoal\",\r\n            \"puntCaught\",\r\n            \"kickOffCaught\",\r\n            \"onsideKickCaught\",\r\n        ],\r\n        stopWhen: [\"interceptionPlayerEndPosition\", \"fieldGoalKicked\"],\r\n        run: () => {\r\n            const defensePlayers = Room_1.default.game.players.getDefense();\r\n            if (defensePlayers.length === 0)\r\n                return;\r\n            const playerContact = (0, tickEvents_1.checkBallCarrierContact)(defensePlayers);\r\n            if (playerContact)\r\n                return Room_1.default.getPlay().onBallCarrierContactDefense(playerContact);\r\n        },\r\n    },\r\n    {\r\n        name: \"BallCarrier Player Contact Offense\",\r\n        runWhen: [\"ballSnapped\", \"fieldGoal\"],\r\n        stopWhen: [\r\n            \"ballPassed\",\r\n            \"ballRan\",\r\n            \"lineBlitzed\",\r\n            \"fieldGoalKicked\",\r\n            \"fieldGoalBlitzed\",\r\n        ],\r\n        run: () => {\r\n            const offensePlayersNoQb = Room_1.default.game.players\r\n                .getOffense()\r\n                .filter((player) => { var _a, _b, _c; return (_c = player.id !== ((_b = (_a = Room_1.default.getPlay()) === null || _a === void 0 ? void 0 : _a.getBallCarrier()) === null || _b === void 0 ? void 0 : _b.id)) !== null && _c !== void 0 ? _c : 0; });\r\n            const playerContact = (0, tickEvents_1.checkBallCarrierContact)(offensePlayersNoQb);\r\n            if (playerContact)\r\n                return Room_1.default.getPlay().onBallCarrierContactOffense(playerContact);\r\n        },\r\n    },\r\n    {\r\n        name: \"Defense Position\",\r\n        runWhen: [\"ballSnapped\", \"fieldGoal\"],\r\n        stopWhen: [\r\n            \"lineBlitzed\",\r\n            \"ballRan\",\r\n            \"ballPassed\",\r\n            \"fieldGoalKicked\",\r\n            \"fieldGoalLineBlitzed\",\r\n        ],\r\n        run: () => {\r\n            const defensePlayers = Room_1.default.game.players.getDefense();\r\n            const defensiveTeam = Room_1.default.game.defenseTeamId;\r\n            const offsidePlayer = MapReferee_1.default.findTeamPlayerOffsideNoAdjust(defensePlayers, defensiveTeam, Room_1.default.game.down.getLOS().x);\r\n            if (!offsidePlayer)\r\n                return;\r\n            const canBlitzOnSnap = Room_1.default.getPlay().stateExistsUnsafe(\"canBlitz\");\r\n            const isFieldGoal = Room_1.default.getPlay().stateExistsUnsafe(\"fieldGoal\");\r\n            if (canBlitzOnSnap || isFieldGoal)\r\n                return Room_1.default.getPlay().handleDefenseLineBlitz();\r\n            return Room_1.default.getPlay().handleIllegalBlitz(offsidePlayer);\r\n        },\r\n    },\r\n    {\r\n        name: \"Quarterback and Kicker Position\",\r\n        runWhen: [\"ballSnapped\", \"fieldGoal\"],\r\n        stopWhen: [\r\n            \"ballRan\",\r\n            \"ballPassed\",\r\n            \"fieldGoalLineBlitzed\",\r\n            \"lineBlitzed\",\r\n            \"fieldGoalKicked\",\r\n        ],\r\n        run: () => {\r\n            const qbOrKicker = Room_1.default.getPlay().getBallCarrier();\r\n            const { id, team } = qbOrKicker;\r\n            const { position } = (0, haxUtils_1.getPlayerDiscProperties)(id);\r\n            const qbAdjustedPosition = PreSetCalculators_1.default.adjustPlayerPositionFront(position, team);\r\n            const isBehindLOS = MapReferee_1.default.checkIfBehind(qbAdjustedPosition.x, Room_1.default.game.down.getLOS().x, team);\r\n            if (!isBehindLOS)\r\n                return Room_1.default.getPlay().handleIllegalCrossOffense(qbOrKicker);\r\n        },\r\n    },\r\n    {\r\n        name: \"Kick Drag\",\r\n        runWhen: [\"always\"],\r\n        stopWhen: [\r\n            \"ballPassed\",\r\n            \"ballBlitzed\",\r\n            \"ballRan\",\r\n            \"ballDragged\",\r\n            \"fieldGoalKicked\",\r\n            \"fieldGoalBlitzed\",\r\n            \"puntKicked\",\r\n            \"kickOffKicked\",\r\n            \"onsideKickKicked\",\r\n        ],\r\n        run: () => {\r\n            const ballPositionOnSet = Room_1.default.getPlay().getBallPositionOnSet();\r\n            if (!ballPositionOnSet)\r\n                return;\r\n            const maxDragDistance = Room_1.default.getPlay().MAX_DRAG_DISTANCE;\r\n            const ballDragged = MapReferee_1.default.checkIfBallDragged(ballPositionOnSet, Ball_1.default.getPosition(), maxDragDistance);\r\n            if (ballDragged)\r\n                return Room_1.default.getPlay().onKickDrag(Room_1.default.getPlay().getBallCarrierSafe());\r\n        },\r\n    },\r\n    {\r\n        name: \"Ball Position Interceeption\",\r\n        runWhen: [\"interceptionAttempt\"],\r\n        stopWhen: [\"interceptionRuling\"],\r\n        run: () => {\r\n            const ballSpeed = Ball_1.default.getSpeed();\r\n            const ballIsMoving = MapReferee_1.default.checkIfBallIsMoving(ballSpeed);\r\n            if (!ballIsMoving) {\r\n                return Room_1.default.getPlay().handleUnsuccessfulInterception();\r\n            }\r\n            const interceptionKicked = Room_1.default.getPlay().stateExists(\"interceptionAttemptKicked\");\r\n            if (interceptionKicked)\r\n                return;\r\n            const dragDistance = 20;\r\n            const ballPositionOnFirstTouch = Room_1.default.getPlay().getState(\"interceptionBallPositionFirstTouch\");\r\n            const ballDragged = MapReferee_1.default.checkIfBallDragged(ballPositionOnFirstTouch, Ball_1.default.getPosition(), dragDistance);\r\n            if (ballDragged)\r\n                return Room_1.default.getPlay().handleUnsuccessfulInterception();\r\n        },\r\n    },\r\n    {\r\n        name: \"Crowd\",\r\n        runWhen: [\"ballSnapped\"],\r\n        stopWhen: [\"ballPassed\", \"ballRan\", \"canBlitz\"],\r\n        run: () => {\r\n            Room_1.default.getPlay().findCrowderAndHandle();\r\n        },\r\n    },\r\n    {\r\n        name: \"Ball Position Before Pass\",\r\n        runWhen: [\"ballSnapped\"],\r\n        stopWhen: [\"ballPassed\", \"lineBlitzed\", \"ballBlitzed\", \"ballRan\"],\r\n        run: () => {\r\n            const ballPosition = Ball_1.default.getPosition();\r\n            const ballInFrontOfLOS = MapReferee_1.default.checkIfBallInFrontOfLOS(ballPosition, Room_1.default.game.down.getLOS().x, Room_1.default.game.offenseTeamId);\r\n            if (ballInFrontOfLOS)\r\n                return Room_1.default.getPlay().handleBallInFrontOfLOS();\r\n        },\r\n    },\r\n];\r\nconst onGameTick = () => {\r\n    if (!Room_1.default.isBotOn || !Room_1.default.game)\r\n        return;\r\n    try {\r\n        eventListeners.forEach((listenerObj) => {\r\n            var _a, _b;\r\n            if (!((_b = (_a = Room_1.default === null || Room_1.default === void 0 ? void 0 : Room_1.default.game) === null || _a === void 0 ? void 0 : _a.play) === null || _b === void 0 ? void 0 : _b.isLivePlay))\r\n                return;\r\n            if (!checkIfRunListener(listenerObj))\r\n                return;\r\n            if (checkIfStopListener(listenerObj))\r\n                return;\r\n            listenerObj.run();\r\n        });\r\n    }\r\n    catch (error) {\r\n        console.trace(error);\r\n        Chat_1.default.sendBotError(error.message);\r\n        Room_1.default.game.down.hardReset();\r\n    }\r\n};\r\nconst checkIfRunListener = (listenerObj) => listenerObj.runWhen.some((state) => state === \"always\" || Room_1.default.getPlay().stateExistsUnsafe(state));\r\nconst checkIfStopListener = (listenerObj) => listenerObj.stopWhen.some((state) => Room_1.default.getPlay().stateExistsUnsafe(state));\r\nexports[\"default\"] = onGameTick;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/events/onGameTick.ts?");

/***/ }),

/***/ "./src/room/events/onJoin.ts":
/*!***********************************!*\
  !*** ./src/room/events/onJoin.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst __1 = __importDefault(__webpack_require__(/*! .. */ \"./src/room/index.ts\"));\r\nconst room_config_1 = __webpack_require__(/*! ../room.config */ \"./src/room/room.config.ts\");\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst Greeter_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Greeter */ \"./src/room/roomStructures/Greeter.ts\"));\r\nconst alreadyHasAuthOrConnInRoom = (auth, conn) => {\r\n    if (Room_1.default.players.findOne({ auth: auth }))\r\n        return true;\r\n    if (Room_1.default.players.findOne({ ip: conn }))\r\n        return true;\r\n    return false;\r\n};\r\nconst onJoin = (player) => {\r\n    if (alreadyHasAuthOrConnInRoom(player.auth, player.conn) &&\r\n        room_config_1.DEBUG_MODE === false)\r\n        return __1.default.kickPlayer(player.id, \"Conn already exists in room\", false);\r\n    if (Room_1.default.players.find().length === 0)\r\n        __1.default.setPlayerAdmin(player.id, true);\r\n    Room_1.default.players.createAndAdd(player);\r\n    Greeter_1.default.greetPlayer(player);\r\n    if (!Room_1.default.isBotOn)\r\n        return;\r\n    if (room_config_1.DEBUG_MODE) {\r\n        __1.default.setPlayerAdmin(player.id, true);\r\n        if (__1.default.getPlayerList().length === 1) {\r\n            __1.default.startGame();\r\n            __1.default.setPlayerTeam(player.id, 1);\r\n            __1.default.setPlayerDiscProperties(player.id, { x: -150, y: 0 });\r\n        }\r\n        else {\r\n            __1.default.setPlayerTeam(player.id, 2);\r\n            __1.default.setPlayerDiscProperties(player.id, { x: 150, y: 0 });\r\n        }\r\n    }\r\n};\r\nexports[\"default\"] = onJoin;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/events/onJoin.ts?");

/***/ }),

/***/ "./src/room/events/onLeave.ts":
/*!************************************!*\
  !*** ./src/room/events/onLeave.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst types_1 = __webpack_require__(/*! ../utils/types */ \"./src/room/utils/types.ts\");\r\nconst onLeave = (player) => {\r\n    Room_1.default.players.delete(player);\r\n    if (!Room_1.default.isBotOn || !Room_1.default.game)\r\n        return;\r\n    Room_1.default.game.players.updateStaticPlayerList(Room_1.default.game.offenseTeamId);\r\n    const wasFielded = player.team === types_1.TEAMS.RED || player.team === types_1.TEAMS.BLUE;\r\n    if (wasFielded) {\r\n        Room_1.default.game.players.subOut(player, Room_1.default.game.getTimeRounded(), {\r\n            wasLeave: true,\r\n        });\r\n        Room_1.default.game.checkIfTightEndSwitchedTeamsOrLeft(player.id);\r\n    }\r\n};\r\nexports[\"default\"] = onLeave;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/events/onLeave.ts?");

/***/ }),

/***/ "./src/room/events/onPlayerTeamChange.ts":
/*!***********************************************!*\
  !*** ./src/room/events/onPlayerTeamChange.ts ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst onPlayerTeamChange = (player) => {\r\n    if (!Room_1.default.isBotOn || !Room_1.default.game)\r\n        return;\r\n    Room_1.default.game.updateStaticPlayers();\r\n    const recordId = Room_1.default.game.players.handlePlayerTeamChange(player, Room_1.default.game.getTimeRounded());\r\n    Room_1.default.game.checkIfTightEndSwitchedTeamsOrLeft(player.id);\r\n    if (player.team === 1 || player.team === 2) {\r\n        if (!Room_1.default.game.stats)\r\n            return;\r\n        Room_1.default.game.stats.maybeCreateStatProfile(recordId);\r\n        Room_1.default.game.down.maybeMovePlayerBehindLosOnField(player);\r\n    }\r\n};\r\nexports[\"default\"] = onPlayerTeamChange;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/events/onPlayerTeamChange.ts?");

/***/ }),

/***/ "./src/room/events/tickEvents.ts":
/*!***************************************!*\
  !*** ./src/room/events/tickEvents.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.checkBallCarrierContact = exports.checkBallContact = void 0;\r\nconst BallContact_1 = __importDefault(__webpack_require__(/*! ../classes/BallContact */ \"./src/room/classes/BallContact.ts\"));\r\nconst PlayerContact_1 = __importDefault(__webpack_require__(/*! ../classes/PlayerContact */ \"./src/room/classes/PlayerContact.ts\"));\r\nconst Ball_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Ball */ \"./src/room/roomStructures/Ball.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst DistanceCalculator_1 = __importDefault(__webpack_require__(/*! ../structures/DistanceCalculator */ \"./src/room/structures/DistanceCalculator.ts\"));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nconst checkBallContact = () => {\r\n    const ballPosition = Ball_1.default.getPosition();\r\n    const fielded = Room_1.default.game.players.getFielded();\r\n    for (const player of fielded) {\r\n        const { id } = player;\r\n        const { position: playerPosition, radius } = (0, haxUtils_1.getPlayerDiscProperties)(id);\r\n        const distanceToBall = new DistanceCalculator_1.default()\r\n            .calcDifference3D(playerPosition, ballPosition)\r\n            .calculate();\r\n        if (distanceToBall < radius + map_1.MAP_POINTS.BALL_RADIUS + 0.01)\r\n            return new BallContact_1.default(\"touch\", player, playerPosition);\r\n    }\r\n    return null;\r\n};\r\nexports.checkBallContact = checkBallContact;\r\nconst checkBallCarrierContact = (playerArray) => {\r\n    const ballCarrier = Room_1.default.getPlay().getBallCarrierSafe();\r\n    if (playerArray.length === 0 || ballCarrier === null)\r\n        return null;\r\n    const { position: ballCarrierPosition, speed: ballCarrierSpeed, radius: ballCarrierRadius, } = (0, haxUtils_1.getPlayerDiscProperties)(ballCarrier.id);\r\n    for (const player of playerArray) {\r\n        const { id } = player;\r\n        if (id === ballCarrier.id)\r\n            continue;\r\n        const { position: playerPosition, speed: playerSpeed, radius: defenseRadius, } = (0, haxUtils_1.getPlayerDiscProperties)(id);\r\n        const distanceToBallCarrier = new DistanceCalculator_1.default()\r\n            .calcDifference3D(playerPosition, ballCarrierPosition)\r\n            .calculate();\r\n        if (distanceToBallCarrier < ballCarrierRadius + defenseRadius + 1) {\r\n            return new PlayerContact_1.default(player, playerPosition, playerSpeed, ballCarrierPosition, ballCarrierSpeed);\r\n        }\r\n    }\r\n    return null;\r\n};\r\nexports.checkBallCarrierContact = checkBallCarrierContact;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/events/tickEvents.ts?");

/***/ }),

/***/ "./src/room/index.ts":
/*!***************************!*\
  !*** ./src/room/index.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst onAdminChange_1 = __importDefault(__webpack_require__(/*! ./events/onAdminChange */ \"./src/room/events/onAdminChange.ts\"));\r\nconst onBallKick_1 = __importDefault(__webpack_require__(/*! ./events/onBallKick */ \"./src/room/events/onBallKick.ts\"));\r\nconst onChat_1 = __importDefault(__webpack_require__(/*! ./events/onChat */ \"./src/room/events/onChat.ts\"));\r\nconst onGameTick_1 = __importDefault(__webpack_require__(/*! ./events/onGameTick */ \"./src/room/events/onGameTick.ts\"));\r\nconst onJoin_1 = __importDefault(__webpack_require__(/*! ./events/onJoin */ \"./src/room/events/onJoin.ts\"));\r\nconst onLeave_1 = __importDefault(__webpack_require__(/*! ./events/onLeave */ \"./src/room/events/onLeave.ts\"));\r\nconst onPlayerTeamChange_1 = __importDefault(__webpack_require__(/*! ./events/onPlayerTeamChange */ \"./src/room/events/onPlayerTeamChange.ts\"));\r\nconst Kickoff_1 = __importDefault(__webpack_require__(/*! ./plays/Kickoff */ \"./src/room/plays/Kickoff.ts\"));\r\nconst room_config_1 = __importDefault(__webpack_require__(/*! ./room.config */ \"./src/room/room.config.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ./roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst map_1 = __importDefault(__webpack_require__(/*! ./utils/map */ \"./src/room/utils/map.ts\"));\r\nconst client = HBInit(room_config_1.default);\r\nexports[\"default\"] = client;\r\nRoom_1.default.onRoomLoad();\r\nclient.setCustomStadium(map_1.default);\r\nclient.setTimeLimit(9);\r\nclient.setScoreLimit(0);\r\nclient.setTeamsLock(true);\r\nclient.onGameStart = () => {\r\n    if (!Room_1.default.isBotOn)\r\n        return;\r\n    Room_1.default.startNewGame();\r\n};\r\nclient.onGameStop = () => {\r\n    if (!Room_1.default.isBotOn || !Room_1.default.game)\r\n        return;\r\n    Room_1.default.game.endGame();\r\n};\r\nclient.onPositionsReset = () => {\r\n    if (!Room_1.default.isBotOn || !Room_1.default.game)\r\n        return;\r\n    Room_1.default.game.deleteState(\"ballBeingScored\");\r\n    Room_1.default.game.down.startNew();\r\n    Room_1.default.game.setPlay(new Kickoff_1.default(Room_1.default.game.getTimeRounded()), null);\r\n};\r\nclient.onTeamGoal = () => {\r\n    if (!Room_1.default.isBotOn || !Room_1.default.game)\r\n        return;\r\n    Room_1.default.game.deleteState(\"canTwoPoint\");\r\n    Room_1.default.game.deleteState(\"twoPointAttempt\");\r\n};\r\nclient.onGamePause = () => {\r\n    if (!Room_1.default.isBotOn || !Room_1.default.game)\r\n        return;\r\n    Room_1.default.game.setIsPaused(true);\r\n};\r\nclient.onGameUnpause = () => {\r\n    if (!Room_1.default.isBotOn || !Room_1.default.game)\r\n        return;\r\n    Room_1.default.game.setIsPaused(false);\r\n};\r\nclient.onPlayerAdminChange = onAdminChange_1.default;\r\nclient.onPlayerTeamChange = onPlayerTeamChange_1.default;\r\nclient.onPlayerBallKick = onBallKick_1.default;\r\nclient.onPlayerJoin = onJoin_1.default;\r\nclient.onPlayerLeave = onLeave_1.default;\r\nclient.onGameTick = onGameTick_1.default;\r\nclient.onPlayerChat = onChat_1.default;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/index.ts?");

/***/ }),

/***/ "./src/room/plays/BasePlay.ts":
/*!************************************!*\
  !*** ./src/room/plays/BasePlay.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst room_config_1 = __webpack_require__(/*! ../room.config */ \"./src/room/room.config.ts\");\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Ball_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Ball */ \"./src/room/roomStructures/Ball.ts\"));\r\nconst MapReferee_1 = __importDefault(__webpack_require__(/*! ../structures/MapReferee */ \"./src/room/structures/MapReferee.ts\"));\r\nconst MessageFormatter_1 = __importDefault(__webpack_require__(/*! ../structures/MessageFormatter */ \"./src/room/structures/MessageFormatter.ts\"));\r\nconst PenaltyDataGetter_1 = __importDefault(__webpack_require__(/*! ../structures/PenaltyDataGetter */ \"./src/room/structures/PenaltyDataGetter.ts\"));\r\nconst PreSetCalculators_1 = __importDefault(__webpack_require__(/*! ../structures/PreSetCalculators */ \"./src/room/structures/PreSetCalculators.ts\"));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nconst Icons_1 = __importDefault(__webpack_require__(/*! ../utils/Icons */ \"./src/room/utils/Icons.ts\"));\r\nconst MapSectionFinder_1 = __importDefault(__webpack_require__(/*! ../utils/MapSectionFinder */ \"./src/room/utils/MapSectionFinder.ts\"));\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nconst BasePlayAbstract_1 = __importDefault(__webpack_require__(/*! ./BasePlayAbstract */ \"./src/room/plays/BasePlayAbstract.ts\"));\r\nconst DistanceCalculator_1 = __importDefault(__webpack_require__(/*! ../structures/DistanceCalculator */ \"./src/room/structures/DistanceCalculator.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst __1 = __importDefault(__webpack_require__(/*! .. */ \"./src/room/index.ts\"));\r\nclass BasePlay extends BasePlayAbstract_1.default {\r\n    constructor(time) {\r\n        super();\r\n        this._isLivePlay = false;\r\n        this._ballCarrier = null;\r\n        this._ballPositionOnSet = null;\r\n        this.MAX_DRAG_DISTANCE = 15;\r\n        this.time = Math.round(time);\r\n    }\r\n    setBallCarrier(player, setAvatar = true) {\r\n        if (player === null && this._ballCarrier) {\r\n            __1.default.setPlayerAvatar(this._ballCarrier.id, null);\r\n        }\r\n        this._ballCarrier = player;\r\n        if (player && setAvatar)\r\n            __1.default.setPlayerAvatar(player.id, Icons_1.default.Football);\r\n        return this;\r\n    }\r\n    getBallCarrier() {\r\n        if (!this._ballCarrier)\r\n            throw Error(\"Game Error: Ball Carrier could not be found\");\r\n        return this._ballCarrier;\r\n    }\r\n    getBallCarrierSafe() {\r\n        return this._ballCarrier;\r\n    }\r\n    get isLivePlay() {\r\n        return this._isLivePlay;\r\n    }\r\n    terminatePlayDuringError() {\r\n        this._setLivePlay(false);\r\n    }\r\n    getMaskPlay() {\r\n        return this;\r\n    }\r\n    resetPlayerPhysicsAndRemoveTightEnd() {\r\n        Room_1.default.game.setTightEnd(null);\r\n    }\r\n    allowForTwoPointAttempt() {\r\n        Room_1.default.game.setState(\"canTwoPoint\");\r\n    }\r\n    handleTouchdown(endPosition) {\r\n        this._setLivePlay(false);\r\n        const { netYards } = this._getPlayDataOffense(endPosition);\r\n        const truncatedBallCarrierName = (0, utils_1.truncateName)(this._ballCarrier.name.trim());\r\n        Chat_1.default.send(`${Icons_1.default.Fire} TOUCHDOWN ${truncatedBallCarrierName} ${(0, utils_1.plural)(netYards, \"yard\", \"yards\")}`, { sound: 2 });\r\n        this.scorePlay(7, Room_1.default.game.offenseTeamId, Room_1.default.game.defenseTeamId);\r\n        this.allowForTwoPointAttempt();\r\n    }\r\n    handleDefenseLineBlitz() { }\r\n    _setStartingPosition(position) {\r\n        this._startingPosition = position;\r\n    }\r\n    getBallPositionOnSet() {\r\n        return this._ballPositionOnSet;\r\n    }\r\n    setBallPositionOnSet(position) {\r\n        this._ballPositionOnSet = position;\r\n        return this;\r\n    }\r\n    positionBallAndFieldMarkers() {\r\n        Ball_1.default.setPosition(Room_1.default.game.down.getSnapPosition());\r\n        Room_1.default.game.down.moveFieldMarkers();\r\n        return this;\r\n    }\r\n    scorePlay(score, team, teamEndZoneToScore) {\r\n        this._setLivePlay(false);\r\n        Room_1.default.game.addScore(team, score);\r\n        Ball_1.default.score(teamEndZoneToScore);\r\n        Room_1.default.game.setState(\"ballBeingScored\");\r\n        Room_1.default.game.sendScoreBoard();\r\n        Room_1.default.game.down.resetAfterScore();\r\n    }\r\n    _getPlayDataOffense(rawEndPosition) {\r\n        Room_1.default.game.setLastPlayEndPosition(rawEndPosition);\r\n        const { yardLine, netYards, adjustedEndPositionX } = PreSetCalculators_1.default.getNetYardsAndAdjustedEndPosition(this._startingPosition, rawEndPosition, Room_1.default.game.offenseTeamId);\r\n        const yardsAfterCatch = this.stateExistsUnsafe(\"catchPosition\")\r\n            ? new DistanceCalculator_1.default()\r\n                .calcNetDifferenceByTeam(this.getState(\"catchPosition\").x, adjustedEndPositionX, Room_1.default.game.offenseTeamId)\r\n                .calculateAndConvert().yards\r\n            : 0;\r\n        const yardsPassed = this.stateExistsUnsafe(\"catchPosition\")\r\n            ? new DistanceCalculator_1.default()\r\n                .calcNetDifferenceByTeam(Room_1.default.game.down.getLOS().x, this.getState(\"catchPosition\").x, Room_1.default.game.offenseTeamId)\r\n                .calculateAndConvert().yards\r\n            : 0;\r\n        const netYardsStr = (0, utils_1.addPlus)(netYards);\r\n        const netYardsStrFull = MessageFormatter_1.default.formatNetYardsMessageFull(netYards);\r\n        const yardAndHalfStr = MessageFormatter_1.default.formatYardAndHalfStr(yardLine, adjustedEndPositionX);\r\n        const losX = Room_1.default.game.down.getLOS().x;\r\n        const mapSection = new MapSectionFinder_1.default().getSectionName(rawEndPosition, losX, Room_1.default.game.offenseTeamId);\r\n        const endPosition = { x: adjustedEndPositionX, y: rawEndPosition.y };\r\n        const endZonePlayerIsIn = MapReferee_1.default.getEndZonePositionIsIn(endPosition);\r\n        const isTouchdown = Boolean(endZonePlayerIsIn) &&\r\n            endZonePlayerIsIn !== Room_1.default.game.offenseTeamId;\r\n        return {\r\n            netYards,\r\n            endYardLine: yardLine,\r\n            endPosition,\r\n            mapSection,\r\n            yardsAfterCatch,\r\n            yardsPassed,\r\n            netYardsStr,\r\n            netYardsStrFull,\r\n            yardAndHalfStr,\r\n            isTouchdown,\r\n        };\r\n    }\r\n    _handleSafety() {\r\n        this._setLivePlay(false);\r\n        Chat_1.default.send(`${Icons_1.default.Loudspeaker} Safety - kickoff from the 20 yard line`);\r\n        Room_1.default.game.setState(\"safetyKickoff\");\r\n        this.scorePlay(2, Room_1.default.game.defenseTeamId, Room_1.default.game.defenseTeamId);\r\n    }\r\n    _handleTouchback() {\r\n        Chat_1.default.send(`${Icons_1.default.Loudspeaker} Touchback - ball placed at the receiving team's 20 yard line.`);\r\n        const offenseTwentyYardLine = PreSetCalculators_1.default.getPositionOfTeamYard(20, Room_1.default.game.offenseTeamId);\r\n        this.endPlay({ newLosX: offenseTwentyYardLine, setNewDown: true });\r\n    }\r\n    _handlePenalty(penaltyName, player, penaltyData = {}) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._setLivePlay(false);\r\n            (0, haxUtils_1.quickPause)();\r\n            const losX = Room_1.default.game.down.getLOS().x;\r\n            const isInDefenseRedzone = MapReferee_1.default.checkIfInRedzone(losX) === Room_1.default.game.defenseTeamId;\r\n            const { penaltyYards, addDown, hasOwnHandler, isRedZonePenaltyOnDefense, newEndLosX, penaltyMessage, delay, } = new PenaltyDataGetter_1.default().getData(penaltyName, player, isInDefenseRedzone, losX, Room_1.default.game.offenseTeamId, penaltyData);\r\n            Chat_1.default.send(`${Icons_1.default.YellowSquare} ${penaltyMessage}`);\r\n            Room_1.default.game.stats.updatePlayerStat(player.id, {\r\n                penalties: 1,\r\n            });\r\n            if (hasOwnHandler)\r\n                return;\r\n            if (delay)\r\n                yield (0, utils_1.sleep)(1750);\r\n            if (isRedZonePenaltyOnDefense) {\r\n                Room_1.default.game.down.incrementRedZonePenalties();\r\n                const isAutoTouchdown = Room_1.default.game.down.hasReachedMaxRedzonePenalties();\r\n                if (isAutoTouchdown)\r\n                    return this.getMaskPlay().handleAutoTouchdown();\r\n            }\r\n            yield this.endPlay({\r\n                addDown,\r\n                newLosX: newEndLosX,\r\n                netYards: penaltyYards,\r\n            });\r\n        });\r\n    }\r\n    endPlay({ netYards = 0, newLosX = null, addDown = true, setNewDown = false, }) {\r\n        this._setLivePlay(false);\r\n        const gotFirstDown = this._updateDistance({\r\n            netYards,\r\n            newLosX,\r\n            addDown,\r\n            setNewDown,\r\n        });\r\n        if (newLosX !== null)\r\n            Room_1.default.game.down.setLOS(newLosX);\r\n        this._updateDown(gotFirstDown, { netYards, newLosX, addDown, setNewDown });\r\n        Room_1.default.game.down.resetAfterDown();\r\n    }\r\n    onBallContact(ballContactObj) {\r\n        return ballContactObj.player.team === Room_1.default.game.offenseTeamId\r\n            ? this._onBallContactOffense(ballContactObj)\r\n            : this._onBallContactDefense(ballContactObj);\r\n    }\r\n    _setLivePlay(bool) {\r\n        this._isLivePlay = bool;\r\n        if (room_config_1.DEBUG_MODE) {\r\n            Chat_1.default.send(`SET LIVE PLAY TO: ${bool}`, { color: 0xffef5c });\r\n        }\r\n    }\r\n    _updateDistance({ netYards, newLosX }) {\r\n        if (newLosX === null)\r\n            return false;\r\n        const currentYardsToGet = Room_1.default.game.down.getYardsToGet();\r\n        if (netYards >= currentYardsToGet)\r\n            return true;\r\n        Room_1.default.game.down.subtractYardsToGet(netYards);\r\n        return false;\r\n    }\r\n    _updateDown(gotFirstDown, { addDown, setNewDown }) {\r\n        if (setNewDown)\r\n            return Room_1.default.game.down.startNew();\r\n        if (gotFirstDown) {\r\n            return Room_1.default.game.down.startNew();\r\n        }\r\n        if (addDown) {\r\n            Room_1.default.game.down.addDown();\r\n        }\r\n        const TURNOVER_DOWN = 5;\r\n        const currentDown = Room_1.default.game.down.getDown();\r\n        const isFieldGoal = this.stateExistsUnsafe(\"fieldGoal\");\r\n        if (currentDown === TURNOVER_DOWN || isFieldGoal) {\r\n            Chat_1.default.send(`${Icons_1.default.Loudspeaker} Turnover on downs!`, { sound: 0 });\r\n            Room_1.default.game.swapOffenseAndUpdatePlayers();\r\n            Room_1.default.game.down.startNew();\r\n        }\r\n    }\r\n}\r\nexports[\"default\"] = BasePlay;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/plays/BasePlay.ts?");

/***/ }),

/***/ "./src/room/plays/BasePlayAbstract.ts":
/*!********************************************!*\
  !*** ./src/room/plays/BasePlayAbstract.ts ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst WithStateStore_1 = __importDefault(__webpack_require__(/*! ../classes/WithStateStore */ \"./src/room/classes/WithStateStore.ts\"));\r\nclass BasePlayAbstract extends WithStateStore_1.default {\r\n}\r\nexports[\"default\"] = BasePlayAbstract;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/plays/BasePlayAbstract.ts?");

/***/ }),

/***/ "./src/room/plays/FieldGoal.ts":
/*!*************************************!*\
  !*** ./src/room/plays/FieldGoal.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst __1 = __importDefault(__webpack_require__(/*! .. */ \"./src/room/index.ts\"));\r\nconst GameCommandHandler_1 = __webpack_require__(/*! ../commands/GameCommandHandler */ \"./src/room/commands/GameCommandHandler.ts\");\r\nconst Ball_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Ball */ \"./src/room/roomStructures/Ball.ts\"));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst DistanceCalculator_1 = __importDefault(__webpack_require__(/*! ../structures/DistanceCalculator */ \"./src/room/structures/DistanceCalculator.ts\"));\r\nconst GameReferee_1 = __importDefault(__webpack_require__(/*! ../structures/GameReferee */ \"./src/room/structures/GameReferee.ts\"));\r\nconst MapReferee_1 = __importDefault(__webpack_require__(/*! ../structures/MapReferee */ \"./src/room/structures/MapReferee.ts\"));\r\nconst PreSetCalculators_1 = __importDefault(__webpack_require__(/*! ../structures/PreSetCalculators */ \"./src/room/structures/PreSetCalculators.ts\"));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nconst Icons_1 = __importDefault(__webpack_require__(/*! ../utils/Icons */ \"./src/room/utils/Icons.ts\"));\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nconst FieldGoal_events_1 = __importDefault(__webpack_require__(/*! ./play_events/FieldGoal.events */ \"./src/room/plays/play_events/FieldGoal.events.ts\"));\r\nclass FieldGoal extends FieldGoal_events_1.default {\r\n    constructor(time, kicker) {\r\n        super(time);\r\n        this._kicker = kicker;\r\n        this._ballCarrier = kicker;\r\n    }\r\n    validateBeforePlayBegins() {\r\n        const offenseTwentyYardLine = PreSetCalculators_1.default.getPositionOfTeamYard(20, Room_1.default.game.offenseTeamId);\r\n        const isBehindTwentyYardLine = MapReferee_1.default.checkIfBehind(Room_1.default.game.down.getLOS().x, offenseTwentyYardLine, Room_1.default.game.offenseTeamId);\r\n        if (isBehindTwentyYardLine)\r\n            throw new GameCommandHandler_1.GameCommandError(\"You are too far away to attempt a field goal\", true);\r\n    }\r\n    prepare() {\r\n        this.resetPlayerPhysicsAndRemoveTightEnd();\r\n        Room_1.default.game.updateStaticPlayers();\r\n        this._setStartingPosition(Room_1.default.game.down.getLOS());\r\n        const topOrBottomHashCoordinate = this._determineTopOrBottomHashStartPos();\r\n        const ballStartingPos = this._setBallInPosition(topOrBottomHashCoordinate);\r\n        this.setBallPositionOnSet(ballStartingPos);\r\n        Room_1.default.game.down.moveFieldMarkers();\r\n        this._setPlayersInPosition(topOrBottomHashCoordinate);\r\n    }\r\n    run() {\r\n        this._setLivePlay(true);\r\n        Ball_1.default.release();\r\n        this.setState(\"fieldGoal\");\r\n        Chat_1.default.sendMessageMaybeWithClock(`${Icons_1.default.PurpleCircle} Field Goal`, this.time);\r\n        (0, haxUtils_1.quickPause)();\r\n    }\r\n    cleanUp() { }\r\n    handleTouchdown(endPosition) {\r\n        var _a;\r\n        const { netYards } = this._getPlayDataOffense(endPosition);\r\n        Room_1.default.game.stats.updatePlayerStat((_a = this._ballCarrier) === null || _a === void 0 ? void 0 : _a.id, {\r\n            rushingAttempts: 1,\r\n            rushingYards: netYards,\r\n            touchdownsRushed: 1,\r\n        });\r\n        super.handleTouchdown(endPosition);\r\n    }\r\n    handleSuccessfulFg() {\r\n        Chat_1.default.send(`${Icons_1.default.GreenCheck} Field Goal is good!`, { sound: 2 });\r\n        Room_1.default.game.stats.updatePlayerStat(this._kicker.id, {\r\n            fgAttempts: 1,\r\n            fgMade: 1,\r\n            fgYardsAttempted: Room_1.default.game.down.getLOSYard(),\r\n            fgYardsMade: Room_1.default.game.down.getLOSYard(),\r\n        });\r\n        this.scorePlay(3, Room_1.default.game.offenseTeamId, Room_1.default.game.defenseTeamId);\r\n    }\r\n    handleUnsuccessfulFg() {\r\n        Chat_1.default.send(`${Icons_1.default.X} Field Goal is no good!`);\r\n        Room_1.default.game.stats.updatePlayerStat(this._kicker.id, {\r\n            fgAttempts: 1,\r\n            fgYardsAttempted: Room_1.default.game.down.getLOSYard(),\r\n        });\r\n        this.endPlay({});\r\n    }\r\n    handleDefenseLineBlitz() {\r\n        this.setState(\"fieldGoalLineBlitzed\");\r\n        if (this._ballCarrier)\r\n            __1.default.setPlayerAvatar(this._ballCarrier.id, Icons_1.default.Football);\r\n    }\r\n    handleIllegalCrossOffense() {\r\n        return this._handlePenalty(\"illegalLosCross\", this._kicker);\r\n    }\r\n    _getKicker() {\r\n        return this._kicker;\r\n    }\r\n    _setBallInPosition(topOrBotHashYCoordinate) {\r\n        const positionToSet = {\r\n            y: topOrBotHashYCoordinate,\r\n            x: Room_1.default.game.down.getSnapPosition().x,\r\n        };\r\n        Ball_1.default.setPosition(positionToSet);\r\n        return positionToSet;\r\n    }\r\n    _setKickerInPosition(topOrBottomHashCoordinate) {\r\n        const sevenYardsBehindBall = new DistanceCalculator_1.default()\r\n            .subtractByTeam(Room_1.default.game.down.getSnapPosition().x, map_1.MAP_POINTS.YARD * 7, Room_1.default.game.offenseTeamId)\r\n            .calculate();\r\n        const sixYardsAwayFromHash = topOrBottomHashCoordinate < 0\r\n            ? topOrBottomHashCoordinate - map_1.MAP_POINTS.YARD * 6\r\n            : topOrBottomHashCoordinate + map_1.MAP_POINTS.YARD * 6;\r\n        __1.default.setPlayerDiscProperties(this._kicker.id, {\r\n            x: sevenYardsBehindBall,\r\n            y: sixYardsAwayFromHash,\r\n        });\r\n        return this;\r\n    }\r\n    _setOffenseInPosition() {\r\n        const offensePlayers = Room_1.default.game.players.getOffense();\r\n        const opposingEndzone = MapReferee_1.default.getOpposingTeamEndzone(Room_1.default.game.offenseTeamId);\r\n        const fiveYardsBeforeEndzone = new DistanceCalculator_1.default()\r\n            .subtractByTeam(opposingEndzone, map_1.MAP_POINTS.YARD * 5, Room_1.default.game.offenseTeamId)\r\n            .calculate();\r\n        offensePlayers.forEach(({ id }) => {\r\n            if (id === this._kicker.id)\r\n                return;\r\n            __1.default.setPlayerDiscProperties(id, { x: fiveYardsBeforeEndzone });\r\n        });\r\n        return this;\r\n    }\r\n    _setDefenseInPosition() {\r\n        const defensePlayers = Room_1.default.game.players.getDefense();\r\n        const opposingEndzone = MapReferee_1.default.getOpposingTeamEndzone(Room_1.default.game.offenseTeamId);\r\n        const oneYardInFrontOfEndzone = new DistanceCalculator_1.default()\r\n            .subtractByTeam(opposingEndzone, map_1.MAP_POINTS.YARD * 1, Room_1.default.game.defenseTeamId)\r\n            .calculate();\r\n        defensePlayers.forEach(({ id }) => {\r\n            __1.default.setPlayerDiscProperties(id, { x: oneYardInFrontOfEndzone });\r\n        });\r\n        return this;\r\n    }\r\n    _setPlayersInPosition(topOrBottomHashCoordinate) {\r\n        this._setKickerInPosition(topOrBottomHashCoordinate)\r\n            ._setDefenseInPosition()\r\n            ._setOffenseInPosition();\r\n    }\r\n    _handleBallContactKicker(ballContactObj) {\r\n        if (ballContactObj.type === \"touch\")\r\n            return;\r\n        if (this.stateExists(\"ballRan\"))\r\n            return this.setState(\"fieldGoalBlitzed\");\r\n        this.setState(\"fieldGoalKicked\");\r\n        this.setBallCarrier(null);\r\n        Ball_1.default.makeImmovableButKeepSpeed();\r\n    }\r\n    _handleRun(playerContactObj) {\r\n        const { player } = playerContactObj;\r\n        Chat_1.default.send(`${Icons_1.default.Running} Ball Ran!`);\r\n        this.setBallCarrier(player).setState(\"ballRan\");\r\n    }\r\n    _handleRunTackle(playerContactObj) {\r\n        const isFirstTackle = this.stateExists(\"runFirstTackler\") === false;\r\n        if (isFirstTackle) {\r\n            this.setState(\"runFirstTackler\", playerContactObj.player);\r\n            Chat_1.default.send(\"First tackle\");\r\n            setTimeout(() => {\r\n                this.setState(\"canSecondTackle\");\r\n            }, 500);\r\n            return;\r\n        }\r\n        const isSamePlayedWhoInitiallyTackled = this.getState(\"runFirstTackler\").id === playerContactObj.player.id;\r\n        if (this.stateExists(\"canSecondTackle\") === false &&\r\n            isSamePlayedWhoInitiallyTackled)\r\n            return;\r\n        return this._handleTackle(playerContactObj);\r\n    }\r\n    _handleRunTackleStats(playerContactObj) {\r\n        const { netYards } = this._getPlayDataOffense(playerContactObj.ballCarrierPosition);\r\n        Room_1.default.game.stats.updatePlayerStat(playerContactObj.player.id, {\r\n            tackles: 0.5,\r\n        });\r\n        const firstTackler = this.getState(\"runFirstTackler\");\r\n        Room_1.default.game.stats.updatePlayerStat(firstTackler.id, {\r\n            tackles: 0.5,\r\n        });\r\n        Room_1.default.game.stats.updatePlayerStat(this._ballCarrier.id, {\r\n            rushingAttempts: 1,\r\n            rushingYards: netYards,\r\n        });\r\n    }\r\n    _handleTackle(playerContactObj) {\r\n        const { endPosition, netYards, yardAndHalfStr } = this._getPlayDataOffense(playerContactObj.ballCarrierPosition);\r\n        const isSack = GameReferee_1.default.checkIfSack(playerContactObj.ballCarrierPosition, Room_1.default.game.down.getLOS().x, Room_1.default.game.offenseTeamId) && this.stateExists(\"ballRan\") === false;\r\n        if (isSack) {\r\n            Chat_1.default.send(`${Icons_1.default.HandFingersSpread} ${playerContactObj.player.name.trim()} with the SACK!`);\r\n            Room_1.default.game.stats.updatePlayerStat(playerContactObj.player.id, {\r\n                sacks: 1,\r\n            });\r\n            Room_1.default.game.stats.updatePlayerStat(playerContactObj.player.id, {\r\n                qbSacks: 1,\r\n            });\r\n        }\r\n        else {\r\n            Chat_1.default.send(`${Icons_1.default.HandFingersSpread} Tackle ${yardAndHalfStr}`);\r\n        }\r\n        if (this.stateExists(\"ballRan\")) {\r\n            this._handleRunTackleStats(playerContactObj);\r\n        }\r\n        else {\r\n            Room_1.default.game.stats.updatePlayerStat(playerContactObj.player.id, {\r\n                tackles: 1,\r\n            });\r\n        }\r\n        if (this._ballCarrier.id === this._kicker.id) {\r\n            Room_1.default.game.stats.updatePlayerStat(this._ballCarrier.id, {\r\n                rushingAttempts: 1,\r\n                rushingYards: netYards,\r\n            });\r\n        }\r\n        const { isSafety } = GameReferee_1.default.checkIfSafetyOrTouchbackPlayer(this._startingPosition, endPosition, Room_1.default.game.offenseTeamId);\r\n        if (isSafety)\r\n            return this._handleSafety();\r\n        this.endPlay({\r\n            newLosX: endPosition.x,\r\n            netYards,\r\n        });\r\n    }\r\n    _determineTopOrBottomHashStartPos() {\r\n        const lastPlayEndPosition = Room_1.default.game.lastPlayEndPosition;\r\n        if (lastPlayEndPosition.y <= 0)\r\n            return map_1.MAP_POINTS.TOP_HASH;\r\n        return map_1.MAP_POINTS.BOT_HASH;\r\n    }\r\n}\r\nexports[\"default\"] = FieldGoal;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/plays/FieldGoal.ts?");

/***/ }),

/***/ "./src/room/plays/Kickoff.ts":
/*!***********************************!*\
  !*** ./src/room/plays/Kickoff.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Ball_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Ball */ \"./src/room/roomStructures/Ball.ts\"));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst DistanceCalculator_1 = __importStar(__webpack_require__(/*! ../structures/DistanceCalculator */ \"./src/room/structures/DistanceCalculator.ts\"));\r\nconst MapReferee_1 = __importDefault(__webpack_require__(/*! ../structures/MapReferee */ \"./src/room/structures/MapReferee.ts\"));\r\nconst MessageFormatter_1 = __importDefault(__webpack_require__(/*! ../structures/MessageFormatter */ \"./src/room/structures/MessageFormatter.ts\"));\r\nconst PreSetCalculators_1 = __importDefault(__webpack_require__(/*! ../structures/PreSetCalculators */ \"./src/room/structures/PreSetCalculators.ts\"));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nconst Icons_1 = __importDefault(__webpack_require__(/*! ../utils/Icons */ \"./src/room/utils/Icons.ts\"));\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nconst KickOff_events_1 = __importDefault(__webpack_require__(/*! ./play_events/KickOff.events */ \"./src/room/plays/play_events/KickOff.events.ts\"));\r\nclass KickOff extends KickOff_events_1.default {\r\n    validateBeforePlayBegins(player) {\r\n    }\r\n    prepare() {\r\n        const isSafetyKickoff = Room_1.default.game.stateExists(\"safetyKickoff\");\r\n        if (isSafetyKickoff) {\r\n            this.setState(\"safetyKickoff\");\r\n        }\r\n        const kickOffPosition = this._determineKickOffPosition();\r\n        this._setStartingPosition(kickOffPosition);\r\n        Ball_1.default.setPosition(kickOffPosition);\r\n        this.setBallPositionOnSet(kickOffPosition);\r\n        Room_1.default.game.down.setLOS(kickOffPosition.x);\r\n        Room_1.default.game.down.moveFieldMarkers({ hideLineToGain: true });\r\n        this.resetPlayerPhysicsAndRemoveTightEnd();\r\n    }\r\n    run() {\r\n        setTimeout(() => {\r\n            this._setLivePlay(true);\r\n            Ball_1.default.release();\r\n        }, 1000);\r\n        this.setState(\"kickOff\");\r\n    }\r\n    cleanUp() { }\r\n    endPlay(endPlayData) {\r\n        super.endPlay(Object.assign(Object.assign({}, endPlayData), { setNewDown: true }));\r\n    }\r\n    handleTouchdown(endPosition) {\r\n        const { netYards } = this._getPlayDataOffense(endPosition);\r\n        Room_1.default.game.stats.updatePlayerStat(this._ballCarrier.id, {\r\n            specReceptions: 1,\r\n            specReceivingYards: netYards,\r\n            specTouchdowns: 1,\r\n        });\r\n        super.handleTouchdown(endPosition);\r\n    }\r\n    checkIfCanOnside() {\r\n        const isSafetyKickOff = this.stateExists(\"safetyKickoff\");\r\n        if (isSafetyKickOff)\r\n            return {\r\n                canOnside: false,\r\n                reason: \"Cannot perform an onside kick after a safety\",\r\n            };\r\n        return {\r\n            canOnside: true,\r\n        };\r\n    }\r\n    _handleBallOutOfBounds(ballPosition) {\r\n        const adjustedBallPositionForTeam = PreSetCalculators_1.default.adjustBallPositionOnOutOfBounds(ballPosition, Room_1.default.game.offenseTeamId);\r\n        const kicker = this.getState(\"KickOffKicker\");\r\n        if (this.stateExists(\"safetyKickoff\") === false)\r\n            return this._handleOffensePenalty(kicker, \"ballOutOfBounds\");\r\n        const ballPositionYardLine = DistanceCalculator_1.DistanceConverter.toYardLine(adjustedBallPositionForTeam.x);\r\n        const ballPositionYardLineStr = MessageFormatter_1.default.formatYardAndHalfStr(ballPositionYardLine, adjustedBallPositionForTeam.x);\r\n        Chat_1.default.send(`${Icons_1.default.Pushpin} Ball went out of bounds ${ballPositionYardLineStr}`);\r\n        this.endPlay({ newLosX: adjustedBallPositionForTeam.x });\r\n    }\r\n    _handleOffensePenalty(player, penaltyName) {\r\n        const offenseFortyYardLine = PreSetCalculators_1.default.getPositionOfTeamYard(40, Room_1.default.game.offenseTeamId);\r\n        const defenseFortyYardLine = PreSetCalculators_1.default.getPositionOfTeamYard(40, Room_1.default.game.defenseTeamId);\r\n        const newLosX = this.stateExists(\"safetyKickoff\")\r\n            ? defenseFortyYardLine\r\n            : offenseFortyYardLine;\r\n        if (penaltyName === \"drag\") {\r\n            const penaltyType = this.stateExists(\"safetyKickoff\")\r\n                ? \"kickOffDragSafety\"\r\n                : \"kickOffDrag\";\r\n            this._handlePenalty(penaltyType, player);\r\n        }\r\n        if (penaltyName === \"offsidesOffense\") {\r\n            const penaltyType = this.stateExists(\"safetyKickoff\")\r\n                ? \"kickOffOffsidesSafety\"\r\n                : \"kickOffOffsides\";\r\n            this._handlePenalty(penaltyType, player);\r\n        }\r\n        if (penaltyName === \"ballOutOfBounds\") {\r\n            this._handlePenalty(\"kickOffOutOfBounds\", player);\r\n        }\r\n        this.endPlay({ newLosX: newLosX });\r\n    }\r\n    _handleCatch(ballContactObj) {\r\n        const adjustedCatchPosition = PreSetCalculators_1.default.adjustRawEndPosition(ballContactObj.playerPosition, Room_1.default.game.offenseTeamId);\r\n        this._setStartingPosition(adjustedCatchPosition);\r\n        const isOutOfBounds = MapReferee_1.default.checkIfPlayerOutOfBounds(ballContactObj.playerPosition);\r\n        const { yardAndHalfStr } = this._getPlayDataOffense(ballContactObj.playerPosition);\r\n        if (isOutOfBounds) {\r\n            Chat_1.default.send(`${Icons_1.default.DoNotEnter} Caught out of bounds ${yardAndHalfStr}`);\r\n            return this._handleBallOutOfBounds(ballContactObj.playerPosition);\r\n        }\r\n        Chat_1.default.send(`${Icons_1.default.Football} Ball Caught`);\r\n        this.setState(\"kickOffCaught\");\r\n        this.setBallCarrier(ballContactObj.player);\r\n    }\r\n    _checkIfOffenseOffsidesOnKick() {\r\n        var _a;\r\n        const losX = Room_1.default.game.down.getLOS().x;\r\n        const twoYardsInFrontOfLos = new DistanceCalculator_1.default()\r\n            .addByTeam(losX, map_1.MAP_POINTS.YARD * 2, Room_1.default.game.offenseTeamId)\r\n            .calculate();\r\n        const offensePlayers = Room_1.default.game.players.getOffense();\r\n        const offSidePlayer = (_a = offensePlayers.find((player) => {\r\n            const { position } = (0, haxUtils_1.getPlayerDiscProperties)(player.id);\r\n            const isOnside = MapReferee_1.default.checkIfBehind(position.x, twoYardsInFrontOfLos, Room_1.default.game.offenseTeamId);\r\n            return isOnside === false;\r\n        })) !== null && _a !== void 0 ? _a : null;\r\n        const offsidePlayerExists = Boolean(offSidePlayer);\r\n        return {\r\n            isOffsides: offsidePlayerExists,\r\n            offsidesPlayer: offSidePlayer,\r\n        };\r\n    }\r\n    _determineKickOffPosition() {\r\n        const isKickOffAfterSafety = this.stateExists(\"safetyKickoff\");\r\n        const offenseTwentyYardLine = PreSetCalculators_1.default.getPositionOfTeamYard(20, Room_1.default.game.offenseTeamId);\r\n        if (isKickOffAfterSafety)\r\n            return { x: offenseTwentyYardLine, y: 0 };\r\n        return { x: 0, y: 0 };\r\n    }\r\n}\r\nexports[\"default\"] = KickOff;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/plays/Kickoff.ts?");

/***/ }),

/***/ "./src/room/plays/OnsideKick.ts":
/*!**************************************!*\
  !*** ./src/room/plays/OnsideKick.ts ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst __1 = __importDefault(__webpack_require__(/*! .. */ \"./src/room/index.ts\"));\r\nconst Ball_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Ball */ \"./src/room/roomStructures/Ball.ts\"));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst DistanceCalculator_1 = __importDefault(__webpack_require__(/*! ../structures/DistanceCalculator */ \"./src/room/structures/DistanceCalculator.ts\"));\r\nconst MapReferee_1 = __importDefault(__webpack_require__(/*! ../structures/MapReferee */ \"./src/room/structures/MapReferee.ts\"));\r\nconst PreSetCalculators_1 = __importDefault(__webpack_require__(/*! ../structures/PreSetCalculators */ \"./src/room/structures/PreSetCalculators.ts\"));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nconst Icons_1 = __importDefault(__webpack_require__(/*! ../utils/Icons */ \"./src/room/utils/Icons.ts\"));\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nconst OnsideKick_events_1 = __importDefault(__webpack_require__(/*! ./play_events/OnsideKick.events */ \"./src/room/plays/play_events/OnsideKick.events.ts\"));\r\nclass OnsideKick extends OnsideKick_events_1.default {\r\n    constructor(time, kicker) {\r\n        super(time);\r\n        this._kicker = kicker;\r\n        this._ballCarrier = kicker;\r\n    }\r\n    validateBeforePlayBegins(player) { }\r\n    prepare() {\r\n        const offenseFiveYardLine = PreSetCalculators_1.default.getPositionOfTeamYard(5, Room_1.default.game.offenseTeamId);\r\n        const kickOffPosition = { x: offenseFiveYardLine, y: 0 };\r\n        this._setStartingPosition(kickOffPosition);\r\n        Ball_1.default.setPosition(kickOffPosition);\r\n        this.setBallPositionOnSet(kickOffPosition);\r\n        Room_1.default.game.down.setLOS(kickOffPosition.x);\r\n        Room_1.default.game.down.moveFieldMarkers();\r\n        this._moveLineToGetToFortyFiveYardLine();\r\n        this._setPlayersInPosition();\r\n        Room_1.default.game.stats.updatePlayerStat(this._kicker.id, {\r\n            onsideKicksAttempted: 1,\r\n        });\r\n        this.resetPlayerPhysicsAndRemoveTightEnd();\r\n    }\r\n    run() {\r\n        this._setLivePlay(true);\r\n        Ball_1.default.release();\r\n        this.setState(\"onsideKick\");\r\n        Chat_1.default.sendMessageMaybeWithClock(`${Icons_1.default.WhiteCircle} Onside Kick Attempt`, this.time);\r\n        (0, haxUtils_1.quickPause)();\r\n    }\r\n    cleanUp() {\r\n        const offensePlayers = Room_1.default.game.players.getOffense();\r\n        offensePlayers.forEach(({ id }) => {\r\n            __1.default.setPlayerDiscProperties(id, {\r\n                radius: map_1.MAP_POINTS.PLAYER_RADIUS,\r\n            });\r\n        });\r\n    }\r\n    endPlay(endPlayData) {\r\n        super.endPlay(Object.assign(Object.assign({}, endPlayData), { setNewDown: true }));\r\n    }\r\n    handleTouchdown(endPosition) {\r\n        const { netYards } = this._getPlayDataOffense(endPosition);\r\n        Room_1.default.game.stats.updatePlayerStat(this._ballCarrier.id, {\r\n            specReceptions: 1,\r\n            specReceivingYards: netYards,\r\n            specTouchdowns: 1,\r\n        });\r\n        super.handleTouchdown(endPosition);\r\n    }\r\n    _handleCatch(ballContactObj) {\r\n        const adjustedCatchPosition = PreSetCalculators_1.default.adjustRawEndPosition(ballContactObj.playerPosition, Room_1.default.game.offenseTeamId);\r\n        this._setStartingPosition(adjustedCatchPosition);\r\n        const isOutOfBounds = MapReferee_1.default.checkIfPlayerOutOfBounds(ballContactObj.playerPosition);\r\n        if (isOutOfBounds) {\r\n            Chat_1.default.send(`${Icons_1.default.DoNotEnter} Caught out of bounds`);\r\n            return this._handleUnsuccessfulOnsideKick(\"Kicked out of bounds\");\r\n        }\r\n        Chat_1.default.send(`${Icons_1.default.Football} Ball Caught`);\r\n        this.setState(\"onsideKickCaught\");\r\n        this.setBallCarrier(ballContactObj.player);\r\n    }\r\n    _handleUnsuccessfulOnsideKick(msg) {\r\n        if (msg) {\r\n            Chat_1.default.send(`Unsuccessful onside kick - ${msg}`);\r\n        }\r\n        if (this.stateExists(\"onsideKickKicked\") === false) {\r\n            Room_1.default.game.swapOffenseAndUpdatePlayers();\r\n        }\r\n        const defenseFortyYardLine = PreSetCalculators_1.default.getPositionOfTeamYard(40, Room_1.default.game.defenseTeamId);\r\n        this.endPlay({ newLosX: defenseFortyYardLine });\r\n    }\r\n    _handleSuccessfulOnsideKick(ballContactObj) {\r\n        Chat_1.default.send(`${Icons_1.default.Fire} Onside Kick recovered!`, { sound: 2 });\r\n        Room_1.default.game.stats.updatePlayerStat(this._kicker.id, {\r\n            onsideKicksConverted: 1,\r\n        });\r\n        Room_1.default.game.swapOffenseAndUpdatePlayers();\r\n        const offenseTwentyYardLine = PreSetCalculators_1.default.getPositionOfTeamYard(20, Room_1.default.game.offenseTeamId);\r\n        this.endPlay({ newLosX: offenseTwentyYardLine });\r\n    }\r\n    _handleBallContactKicker(ballContactObj) {\r\n        if (this.stateExists(\"onsideKickKicked\") === false) {\r\n            if (ballContactObj.type === \"touch\")\r\n                return;\r\n            Room_1.default.game.swapOffenseAndUpdatePlayers();\r\n            return this.setState(\"onsideKickKicked\");\r\n        }\r\n        const ballPosition = Ball_1.default.getPosition();\r\n        const offenseFortyFiveYardLine = new DistanceCalculator_1.default()\r\n            .addByTeam(0, map_1.MAP_POINTS.YARD * 5, Room_1.default.game.defenseTeamId)\r\n            .calculate();\r\n        const isAfterOffenseFortyFiveYardLine = MapReferee_1.default.checkIfInFront(ballPosition.x, offenseFortyFiveYardLine, Room_1.default.game.defenseTeamId);\r\n        if (isAfterOffenseFortyFiveYardLine)\r\n            return this._handleSuccessfulOnsideKick(ballContactObj);\r\n        Chat_1.default.send(\"Onside kick illegally recovered behind the receiving team's 45 yard line\");\r\n        const adjustedBallPositionForTeam = PreSetCalculators_1.default.adjustBallPositionOnOutOfBounds(ballPosition, Room_1.default.game.offenseTeamId);\r\n        this.endPlay({ newLosX: adjustedBallPositionForTeam.x });\r\n    }\r\n    _setPlayersInPosition() {\r\n        this._setKickerInPosition()._setOffenseInPositionAndAdjustSize();\r\n    }\r\n    _setKickerInPosition() {\r\n        const sevenYardsBehindBall = new DistanceCalculator_1.default()\r\n            .subtractByTeam(Room_1.default.game.down.getSnapPosition().x, map_1.MAP_POINTS.YARD * 7, Room_1.default.game.offenseTeamId)\r\n            .calculate();\r\n        __1.default.setPlayerDiscProperties(this._kicker.id, {\r\n            x: sevenYardsBehindBall,\r\n            y: map_1.MAP_POINTS.TOP_HASH,\r\n        });\r\n        return this;\r\n    }\r\n    _setOffenseInPositionAndAdjustSize() {\r\n        const offensePlayers = Room_1.default.game.players.getOffense();\r\n        const opposingEndzone = MapReferee_1.default.getOpposingTeamEndzone(Room_1.default.game.offenseTeamId);\r\n        const fiveYardsBeforeEndzone = new DistanceCalculator_1.default()\r\n            .subtractByTeam(opposingEndzone, map_1.MAP_POINTS.YARD * 5, Room_1.default.game.offenseTeamId)\r\n            .calculate();\r\n        offensePlayers.forEach(({ id }) => {\r\n            if (id === this._kicker.id)\r\n                return;\r\n            __1.default.setPlayerDiscProperties(id, {\r\n                x: fiveYardsBeforeEndzone,\r\n                radius: map_1.MAP_POINTS.TE_PLAYER_RADIUS,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n    _moveLineToGetToFortyFiveYardLine() {\r\n        const receivingTeamFortyFiveYardKLine = new DistanceCalculator_1.default()\r\n            .addByTeam(0, map_1.MAP_POINTS.YARD * 5, Room_1.default.game.offenseTeamId)\r\n            .calculate();\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.LTG_TOP, {\r\n            x: receivingTeamFortyFiveYardKLine,\r\n            y: map_1.MAP_POINTS.TOP_SIDELINE,\r\n        });\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.LTG_BOT, {\r\n            x: receivingTeamFortyFiveYardKLine,\r\n            y: map_1.MAP_POINTS.BOT_SIDELINE,\r\n        });\r\n    }\r\n}\r\nexports[\"default\"] = OnsideKick;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/plays/OnsideKick.ts?");

/***/ }),

/***/ "./src/room/plays/Punt.ts":
/*!********************************!*\
  !*** ./src/room/plays/Punt.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst __1 = __importDefault(__webpack_require__(/*! .. */ \"./src/room/index.ts\"));\r\nconst Ball_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Ball */ \"./src/room/roomStructures/Ball.ts\"));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst DistanceCalculator_1 = __importStar(__webpack_require__(/*! ../structures/DistanceCalculator */ \"./src/room/structures/DistanceCalculator.ts\"));\r\nconst MapReferee_1 = __importDefault(__webpack_require__(/*! ../structures/MapReferee */ \"./src/room/structures/MapReferee.ts\"));\r\nconst MessageFormatter_1 = __importDefault(__webpack_require__(/*! ../structures/MessageFormatter */ \"./src/room/structures/MessageFormatter.ts\"));\r\nconst PreSetCalculators_1 = __importDefault(__webpack_require__(/*! ../structures/PreSetCalculators */ \"./src/room/structures/PreSetCalculators.ts\"));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nconst Icons_1 = __importDefault(__webpack_require__(/*! ../utils/Icons */ \"./src/room/utils/Icons.ts\"));\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nconst types_1 = __webpack_require__(/*! ../utils/types */ \"./src/room/utils/types.ts\");\r\nconst Punt_events_1 = __importDefault(__webpack_require__(/*! ./play_events/Punt.events */ \"./src/room/plays/play_events/Punt.events.ts\"));\r\nclass Punt extends Punt_events_1.default {\r\n    constructor(time, player) {\r\n        super(time);\r\n        this._playerWhoCalledPunt = player;\r\n    }\r\n    validateBeforePlayBegins() { }\r\n    prepare() {\r\n        this.setState(\"punt\");\r\n        Room_1.default.game.updateStaticPlayers();\r\n        this._setStartingPosition(Room_1.default.game.down.getLOS());\r\n        this.setBallPositionOnSet(Ball_1.default.getPosition());\r\n        Room_1.default.game.down.moveFieldMarkers();\r\n        this._setPlayersInPosition();\r\n        this._createInvisibleWallForDefense();\r\n        this.resetPlayerPhysicsAndRemoveTightEnd();\r\n        Ball_1.default.setProperties({ damping: 0.993 });\r\n    }\r\n    run() {\r\n        Chat_1.default.send(`${Icons_1.default.OrangeCircle} Punt Called!`);\r\n        this._setLivePlay(true);\r\n        Ball_1.default.release();\r\n    }\r\n    cleanUp() {\r\n        this._releaseInvisibleWallForDefense();\r\n    }\r\n    _endPlayAndSetNewDown(endPlayData) {\r\n        super.endPlay(Object.assign(Object.assign({}, endPlayData), { setNewDown: true }));\r\n    }\r\n    handleTouchdown(endPosition) {\r\n        const { netYards } = this._getPlayDataOffense(endPosition);\r\n        Room_1.default.game.stats.updatePlayerStat(this._ballCarrier.id, {\r\n            specReceptions: 1,\r\n            specReceivingYards: netYards,\r\n            specTouchdowns: 1,\r\n        });\r\n        super.handleTouchdown(endPosition);\r\n    }\r\n    _handleCatch(ballContactObj) {\r\n        const { player, playerPosition } = ballContactObj;\r\n        const { team } = player;\r\n        const adjustedCatchPosition = PreSetCalculators_1.default.adjustRawEndPosition(playerPosition, team);\r\n        this.setState(\"puntCaught\");\r\n        this._setStartingPosition(adjustedCatchPosition);\r\n        const isOutOfBounds = MapReferee_1.default.checkIfPlayerOutOfBounds(ballContactObj.playerPosition);\r\n        const ballPositionYardLine = DistanceCalculator_1.DistanceConverter.toYardLine(adjustedCatchPosition.x);\r\n        const ballPositionYardLineStr = MessageFormatter_1.default.formatYardAndHalfStr(ballPositionYardLine, adjustedCatchPosition.x);\r\n        if (isOutOfBounds) {\r\n            Chat_1.default.send(`${Icons_1.default.DoNotEnter} Caught out of bounds ${ballPositionYardLineStr}`);\r\n            return this._endPlayAndSetNewDown({ newLosX: adjustedCatchPosition.x });\r\n        }\r\n        Chat_1.default.send(`${Icons_1.default.Football} Ball Caught`);\r\n        this.setBallCarrier(player);\r\n    }\r\n    _getFromYardAndHalfStr() {\r\n        const fromYard = DistanceCalculator_1.DistanceConverter.toYardLine(this._ballPositionOnSet.x);\r\n        return MessageFormatter_1.default.formatYardAndHalfStr(fromYard, this._ballPositionOnSet.x);\r\n    }\r\n    _checkIfOffenseOffsidesOnKick(playerWhoKicked) {\r\n        var _a;\r\n        const team = Room_1.default.game.defenseTeamId;\r\n        const twoYardsInFrontOfLOS = new DistanceCalculator_1.default()\r\n            .addByTeam(Room_1.default.game.down.getLOS().x, map_1.MAP_POINTS.YARD * 2, team)\r\n            .calculate();\r\n        const offensePlayers = Room_1.default.game.players.getDefense();\r\n        const offsidesPlayer = (_a = offensePlayers.find((player) => {\r\n            if (player.id === playerWhoKicked.id)\r\n                return false;\r\n            const { position } = (0, haxUtils_1.getPlayerDiscProperties)(player.id);\r\n            const isOnside = MapReferee_1.default.checkIfBehind(position.x, twoYardsInFrontOfLOS, team);\r\n            return isOnside === false;\r\n        })) !== null && _a !== void 0 ? _a : null;\r\n        return {\r\n            isOffsides: Boolean(offsidesPlayer),\r\n            offsidesPlayer,\r\n        };\r\n    }\r\n    _handleOffensePenalty(player, penaltyName) {\r\n        if (this.stateExists(\"puntKicked\")) {\r\n            Room_1.default.game.swapOffenseAndUpdatePlayers();\r\n        }\r\n        this._handlePenalty(penaltyName, player);\r\n    }\r\n    _setPlayerWhoCalledPuntInPosition() {\r\n        const tenYardsBehindBall = new DistanceCalculator_1.default()\r\n            .subtractByTeam(Room_1.default.game.down.getSnapPosition().x, map_1.MAP_POINTS.YARD * 10, Room_1.default.game.offenseTeamId)\r\n            .calculate();\r\n        __1.default.setPlayerDiscProperties(this._playerWhoCalledPunt.id, {\r\n            x: tenYardsBehindBall,\r\n            y: 0,\r\n        });\r\n        return this;\r\n    }\r\n    _setPlayersInPosition() {\r\n        this._setPlayerWhoCalledPuntInPosition()\r\n            ._setOffenseInPosition()\r\n            ._setDefenseInPosition();\r\n    }\r\n    _setOffenseInPosition() {\r\n        const offensePlayersNoKicker = Room_1.default.game.players\r\n            .getOffense()\r\n            .filter((player) => player.id !== this._playerWhoCalledPunt.id);\r\n        const fifteenYardsBehindBall = new DistanceCalculator_1.default()\r\n            .subtractByTeam(Room_1.default.game.down.getSnapPosition().x, map_1.MAP_POINTS.YARD * 15, Room_1.default.game.offenseTeamId)\r\n            .calculate();\r\n        offensePlayersNoKicker.forEach((player) => {\r\n            __1.default.setPlayerDiscProperties(player.id, { x: fifteenYardsBehindBall });\r\n        });\r\n        return this;\r\n    }\r\n    _setDefenseInPosition() {\r\n        const defensePlayers = Room_1.default.game.players.getDefense();\r\n        const defenseEndzone = MapReferee_1.default.getTeamEndzone(Room_1.default.game.defenseTeamId);\r\n        const twoYardsInFrontOfEndzone = new DistanceCalculator_1.default()\r\n            .subtractByTeam(defenseEndzone, map_1.MAP_POINTS.YARD * 2, Room_1.default.game.defenseTeamId)\r\n            .calculate();\r\n        defensePlayers.forEach((player) => {\r\n            __1.default.setPlayerDiscProperties(player.id, {\r\n                x: twoYardsInFrontOfEndzone,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n    _createInvisibleWallForDefense() {\r\n        const defensePlayers = Room_1.default.game.players.getDefense();\r\n        defensePlayers.forEach((player) => {\r\n            const cf = __1.default.CollisionFlags;\r\n            const cfTeam = Room_1.default.game.defenseTeamId === types_1.TEAMS.RED ? cf.red : cf.blue;\r\n            __1.default.setPlayerDiscProperties(player.id, { cGroup: cfTeam | cf.c0 });\r\n        });\r\n        return this;\r\n    }\r\n    _releaseInvisibleWallForDefense() {\r\n        const defensePlayers = Room_1.default.game.players.getDefense();\r\n        defensePlayers.forEach((player) => {\r\n            const cf = __1.default.CollisionFlags;\r\n            const cfTeam = Room_1.default.game.defenseTeamId === types_1.TEAMS.RED ? cf.red : cf.blue;\r\n            __1.default.setPlayerDiscProperties(player.id, { cGroup: cfTeam });\r\n        });\r\n        return this;\r\n    }\r\n}\r\nexports[\"default\"] = Punt;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/plays/Punt.ts?");

/***/ }),

/***/ "./src/room/plays/Snap.ts":
/*!********************************!*\
  !*** ./src/room/plays/Snap.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Ball_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Ball */ \"./src/room/roomStructures/Ball.ts\"));\r\nconst GameReferee_1 = __importDefault(__webpack_require__(/*! ../structures/GameReferee */ \"./src/room/structures/GameReferee.ts\"));\r\nconst MapReferee_1 = __importDefault(__webpack_require__(/*! ../structures/MapReferee */ \"./src/room/structures/MapReferee.ts\"));\r\nconst PreSetCalculators_1 = __importDefault(__webpack_require__(/*! ../structures/PreSetCalculators */ \"./src/room/structures/PreSetCalculators.ts\"));\r\nconst Icons_1 = __importDefault(__webpack_require__(/*! ../utils/Icons */ \"./src/room/utils/Icons.ts\"));\r\nconst MapSectionFinder_1 = __importDefault(__webpack_require__(/*! ../utils/MapSectionFinder */ \"./src/room/utils/MapSectionFinder.ts\"));\r\nconst Snap_events_1 = __importDefault(__webpack_require__(/*! ./play_events/Snap.events */ \"./src/room/plays/play_events/Snap.events.ts\"));\r\nconst GameCommandHandler_1 = __webpack_require__(/*! ../commands/GameCommandHandler */ \"./src/room/commands/GameCommandHandler.ts\");\r\nconst PenaltyDataGetter_1 = __importDefault(__webpack_require__(/*! ../structures/PenaltyDataGetter */ \"./src/room/structures/PenaltyDataGetter.ts\"));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nconst SnapCrowdChecker_1 = __importDefault(__webpack_require__(/*! ../structures/SnapCrowdChecker */ \"./src/room/structures/SnapCrowdChecker.ts\"));\r\nconst DistanceCalculator_1 = __importDefault(__webpack_require__(/*! ../structures/DistanceCalculator */ \"./src/room/structures/DistanceCalculator.ts\"));\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nconst __1 = __importDefault(__webpack_require__(/*! .. */ \"./src/room/index.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst colors_1 = __importDefault(__webpack_require__(/*! ../utils/colors */ \"./src/room/utils/colors.ts\"));\r\nclass Snap extends Snap_events_1.default {\r\n    constructor(time, quarterback) {\r\n        super(time);\r\n        this._blitzClockTime = 0;\r\n        this._ballMoveBlitzClockTime = 0;\r\n        this.BLITZ_TIME_SECONDS = 12;\r\n        this.BALL_MOVE_BLITZ_TIME_SECONDS = 3;\r\n        this.crowdChecker = new SnapCrowdChecker_1.default();\r\n        this.MAX_DRAG_DISTANCE = 10;\r\n        this._quarterback = quarterback;\r\n        this._ballCarrier = quarterback;\r\n    }\r\n    validateBeforePlayBegins(player) {\r\n        if (Room_1.default.game.canStartSnapPlay === false)\r\n            throw new GameCommandHandler_1.GameCommandError(\"Please wait a second before snapping the ball\", true);\r\n        if (Room_1.default.game.getTightEnd() === (player === null || player === void 0 ? void 0 : player.id))\r\n            throw new GameCommandHandler_1.GameCommandError(\"You cannot snap the ball as a Tight End\", true);\r\n        Room_1.default.game.updateStaticPlayers();\r\n        Room_1.default.game.players.savePlayerPositions();\r\n        const { valid, penaltyName, player: penaltiedPlayer, penaltyData, } = new SnapValidator(player).validate();\r\n        if (!valid) {\r\n            this._handlePenalty(penaltyName, penaltiedPlayer, penaltyData);\r\n            throw new GameCommandHandler_1.GameCommandError(\"Penalty\", false);\r\n        }\r\n    }\r\n    prepare() {\r\n        this.crowdChecker.setOffenseTeam(Room_1.default.game.offenseTeamId);\r\n        this.crowdChecker.setCrowdBoxArea(Room_1.default.game.down.getLOS().x);\r\n        const isCurvePass = Room_1.default.game.stateExists(\"curvePass\");\r\n        const isTwoPointAttempt = Room_1.default.game.stateExists(\"twoPointAttempt\");\r\n        this._setStartingPosition(Room_1.default.game.down.getLOS());\r\n        this.setBallPositionOnSet(Ball_1.default.getPosition());\r\n        Room_1.default.game.down.moveFieldMarkers();\r\n        this._getAllOffsideOffenseAndMove();\r\n        this._getAllOffsideDefenseAndMove();\r\n        this._startBlitzClock();\r\n        if (isTwoPointAttempt) {\r\n            this.setState(\"twoPointAttempt\");\r\n        }\r\n        if (isCurvePass)\r\n            this.setState(\"curvePass\");\r\n    }\r\n    run() {\r\n        Room_1.default.game.down.setMostRecentQuarterback(this._quarterback);\r\n        this._setLivePlay(true);\r\n        Ball_1.default.release();\r\n        this.setState(\"ballSnapped\");\r\n        Chat_1.default.sendMessageMaybeWithClock(`${Icons_1.default.GreenCircle} Ball is Hiked`, this.time);\r\n    }\r\n    cleanUp() {\r\n        this._stopBlitzClock();\r\n        this._stopBallMoveBlitzClock();\r\n    }\r\n    getQuarterback() {\r\n        return this._quarterback;\r\n    }\r\n    findCrowderAndHandle() {\r\n        const fieldedPlayersNoQb = Room_1.default.game.players\r\n            .getFielded()\r\n            .filter((player) => player.id !== this._quarterback.id);\r\n        const { isCrowding, crowdingData, crowder } = this.crowdChecker.checkPlayersInCrowdBox(fieldedPlayersNoQb, Room_1.default.game.getTime());\r\n        if (isCrowding) {\r\n            if (crowdingData.wasAlone)\r\n                return this._handlePenalty(\"crowdAbuse\", crowder);\r\n            return this._handlePenalty(\"crowding\", crowder);\r\n        }\r\n        return null;\r\n    }\r\n    _handlePenalty(penaltyName, player, penaltyData = {}) {\r\n        const _super = Object.create(null, {\r\n            _handlePenalty: { get: () => super._handlePenalty }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.stateExists(\"twoPointAttempt\") ||\r\n                Room_1.default.game.stateExists(\"twoPointAttempt\")) {\r\n                (0, haxUtils_1.quickPause)();\r\n                const losX = Room_1.default.game.down.getLOS().x;\r\n                const isInDefenseRedzone = MapReferee_1.default.checkIfInRedzone(losX) === Room_1.default.game.defenseTeamId;\r\n                const { penaltyMessage } = new PenaltyDataGetter_1.default().getData(penaltyName, player, isInDefenseRedzone, losX, Room_1.default.game.offenseTeamId, penaltyData);\r\n                Chat_1.default.send(`${Icons_1.default.YellowSquare} ${penaltyMessage}`);\r\n                if (player.team === Room_1.default.game.offenseTeamId)\r\n                    return this._handleFailedTwoPointConversion();\r\n                return this._handleTwoPointTouchdown(null);\r\n            }\r\n            if (penaltyName === \"crowding\" || penaltyName === \"crowdAbuse\") {\r\n                this._setLivePlay(false);\r\n                Chat_1.default.sendWarning(\"You cannot stand inside the red box for more than 3 seconds without an offensive player being present.\", { id: player.id, color: colors_1.default.LightRed });\r\n                this.crowdChecker.drawCrowdBoxLines();\r\n                setTimeout(this.crowdChecker.eraseCrowdBoxLines.bind(this.crowdChecker), 2000);\r\n            }\r\n            _super._handlePenalty.call(this, penaltyName, player, penaltyData);\r\n        });\r\n    }\r\n    endPlay(endPlayData) {\r\n        if (this.stateExists(\"twoPointAttempt\")) {\r\n            this._setLivePlay(false);\r\n            return this._handleFailedTwoPointConversion();\r\n        }\r\n        super.endPlay(endPlayData);\r\n    }\r\n    _handleSafety() {\r\n        if (this.stateExists(\"twoPointAttempt\")) {\r\n            this._setLivePlay(false);\r\n            Chat_1.default.send(`${Icons_1.default.Loudspeaker} Conversion safety!`);\r\n            Room_1.default.game.addScore(Room_1.default.game.defenseTeamId, 1);\r\n            return this._handleFailedTwoPointConversion();\r\n        }\r\n        super._handleSafety();\r\n    }\r\n    handleAutoTouchdown() {\r\n        Chat_1.default.send(`${Icons_1.default.Fire} Automatic Touchdown! - 3/3 Penalties`, {\r\n            sound: 2,\r\n        });\r\n        this.allowForTwoPointAttempt();\r\n        this.scorePlay(7, Room_1.default.game.offenseTeamId, Room_1.default.game.defenseTeamId);\r\n    }\r\n    handleTouchdown(position) {\r\n        if (this.stateExists(\"interceptionAttempt\") &&\r\n            this.stateExists(\"ballIntercepted\") === false)\r\n            return;\r\n        if (this.stateExistsUnsafe(\"twoPointAttempt\"))\r\n            return this._handleTwoPointTouchdown(position);\r\n        return this._handleRegularTouchdown(position);\r\n    }\r\n    handleIllegalCrossOffense(player) {\r\n        this._handlePenalty(\"illegalLosCross\", player);\r\n    }\r\n    handleIllegalBlitz(player) {\r\n        const pushingPlayer = this._checkIfPlayerWasPushedToIllegalBlitz(player);\r\n        if (pushingPlayer)\r\n            return this._handlePenalty(\"illegalPush\", pushingPlayer);\r\n        this._handlePenalty(\"illegalBlitz\", player, {\r\n            time: this._blitzClockTime,\r\n        });\r\n    }\r\n    handleBallInFrontOfLOS() {\r\n        this._handlePenalty(\"illegalPass\", this._quarterback);\r\n    }\r\n    handleDefenseLineBlitz() {\r\n        this.setState(\"lineBlitzed\");\r\n        if (this._ballCarrier)\r\n            __1.default.setPlayerAvatar(this._ballCarrier.id, Icons_1.default.Football);\r\n    }\r\n    _updateStatsIfNotTwoPoint(playerId, statsQuery) {\r\n        if (this.stateExists(\"twoPointAttempt\"))\r\n            return;\r\n        Room_1.default.game.stats.updatePlayerStat(playerId, statsQuery);\r\n    }\r\n    _startBlitzClock() {\r\n        this._blitzClock = setInterval(this._blitzTimerInterval.bind(this), 1000);\r\n    }\r\n    _checkIfPlayerWasPushedToIllegalBlitz(offsidePlayer) {\r\n        const offsidePlayerPosition = (0, haxUtils_1.getPlayerDiscProperties)(offsidePlayer.id).position;\r\n        const offensePlayersSortedByDistanceToOffsidePlayer = Room_1.default.game.players\r\n            .getOffense()\r\n            .map((player) => {\r\n            const discProps = (0, haxUtils_1.getPlayerDiscProperties)(player.id);\r\n            return Object.assign(Object.assign({ player: player }, discProps), { distanceToOffsidePlayer: new DistanceCalculator_1.default()\r\n                    .calcDifference3D(discProps.position, offsidePlayerPosition)\r\n                    .calculate() });\r\n        })\r\n            .sort((a, b) => b.distanceToOffsidePlayer - a.distanceToOffsidePlayer);\r\n        const defensivePlayerTouchingOffsidePlayer = offensePlayersSortedByDistanceToOffsidePlayer.find((player) => {\r\n            const { distanceToOffsidePlayer, radius, position } = player;\r\n            const isTouching = distanceToOffsidePlayer < radius * 2 + 2;\r\n            const isInFront = MapReferee_1.default.checkIfInFront(position.x, offsidePlayerPosition.x, Room_1.default.game.offenseTeamId);\r\n            return isTouching && isInFront;\r\n        });\r\n        return defensivePlayerTouchingOffsidePlayer\r\n            ? defensivePlayerTouchingOffsidePlayer.player\r\n            : null;\r\n    }\r\n    _blitzTimerInterval() {\r\n        this._blitzClockTime++;\r\n        if (this._blitzClockTime >= this.BLITZ_TIME_SECONDS) {\r\n            if (this.stateExists(\"canBlitz\") === false)\r\n                this.setState(\"canBlitz\");\r\n            return this._stopBlitzClock();\r\n        }\r\n    }\r\n    _stopBlitzClock() {\r\n        if (this._blitzClock === null)\r\n            return;\r\n        clearInterval(this._blitzClock);\r\n    }\r\n    _startBallMoveBlitzClock() {\r\n        this._ballMoveBlitzClock = setInterval(this._ballMoveBlitzTimerInterval.bind(this), 1000);\r\n    }\r\n    _ballMoveBlitzTimerInterval() {\r\n        this._ballMoveBlitzClockTime++;\r\n        if (this._ballMoveBlitzClockTime >= this.BALL_MOVE_BLITZ_TIME_SECONDS) {\r\n            this._stopBallMoveBlitzClock();\r\n            const passAlreadyDead = this.stateExists(\"lineBlitzed\") ||\r\n                this.stateExists(\"ballPassed\") ||\r\n                this.stateExists(\"ballRan\");\r\n            if (passAlreadyDead)\r\n                return;\r\n            this.setState(\"canBlitz\");\r\n            Chat_1.default.send(`${Icons_1.default.Bell} Can Blitz`, { sound: 2 });\r\n        }\r\n    }\r\n    _stopBallMoveBlitzClock() {\r\n        if (this._ballMoveBlitzClock === null)\r\n            return;\r\n        clearInterval(this._ballMoveBlitzClock);\r\n    }\r\n    _getStatInfo(endPosition) {\r\n        const losX = Room_1.default.game.down.getLOS().x;\r\n        const mapSection = new MapSectionFinder_1.default().getSectionName(endPosition, losX, Room_1.default.game.offenseTeamId);\r\n        const quarterback = this.getQuarterback();\r\n        return {\r\n            quarterback,\r\n            mapSection,\r\n        };\r\n    }\r\n    _handleCatch(ballContactObj) {\r\n        const { player, playerPosition } = ballContactObj;\r\n        const { mapSection, quarterback } = this._getStatInfo(playerPosition);\r\n        this._updateStatsIfNotTwoPoint(quarterback.id, {\r\n            passAttempts: { [mapSection]: 1 },\r\n        });\r\n        if (this.stateExists(\"curvePass\")) {\r\n            this._updateStatsIfNotTwoPoint(this.getQuarterback().id, {\r\n                curvedPassAttempts: 1,\r\n            });\r\n        }\r\n        const isOutOfBounds = MapReferee_1.default.checkIfPlayerOutOfBounds(playerPosition);\r\n        if (isOutOfBounds) {\r\n            Chat_1.default.send(`${Icons_1.default.DoNotEnter} Pass Incomplete, caught out of bounds`);\r\n            Room_1.default.game.setLastPlayEndPosition(ballContactObj.playerPosition);\r\n            return this.endPlay({});\r\n        }\r\n        const adjustedPlayerPosition = PreSetCalculators_1.default.adjustRawEndPosition(playerPosition, player.team);\r\n        this.setState(\"catchPosition\", adjustedPlayerPosition);\r\n        const nearestDefender = MapReferee_1.default.getNearestPlayerToPosition(Room_1.default.game.players.getDefense(), adjustedPlayerPosition);\r\n        if (nearestDefender) {\r\n            this.setState(\"nearestDefenderToCatch\", nearestDefender.player);\r\n        }\r\n        this._updateStatsIfNotTwoPoint(quarterback.id, {\r\n            passCompletions: { [mapSection]: 1 },\r\n        });\r\n        if (this.stateExists(\"curvePass\")) {\r\n            this._updateStatsIfNotTwoPoint(this.getQuarterback().id, {\r\n                curvedPassCompletions: 1,\r\n            });\r\n        }\r\n        this.setState(\"ballCaught\");\r\n        Chat_1.default.send(`${Icons_1.default.Football} Pass caught!`);\r\n        this.setBallCarrier(player);\r\n    }\r\n    _handleRun(playerContactObj) {\r\n        const { player } = playerContactObj;\r\n        Chat_1.default.send(`${Icons_1.default.Running} Ball Ran!`);\r\n        this._makeOffenseBouncy();\r\n        this.setBallCarrier(player).setState(\"ballRan\");\r\n    }\r\n    _handleIllegalTouch(ballContactObj) {\r\n        this._handlePenalty(\"illegalTouch\", ballContactObj.player);\r\n    }\r\n    _getAllOffsideOffenseAndMove() {\r\n        const offsidePlayers = MapReferee_1.default.findAllTeamPlayerOffside(Room_1.default.game.players.getOffense(), Room_1.default.game.offenseTeamId, Room_1.default.game.down.getLOS().x);\r\n        const fifteenYardsBehindLosX = new DistanceCalculator_1.default()\r\n            .subtractByTeam(Room_1.default.game.down.getLOS().x, map_1.MAP_POINTS.YARD * 15, Room_1.default.game.offenseTeamId)\r\n            .calculate();\r\n        offsidePlayers.forEach((player) => {\r\n            Chat_1.default.send(`⚠️ You were offside (in front of the blue line), you have been moved 15 yards back.`, { id: player.id });\r\n            const isTightEnd = Room_1.default.game.checkIfPlayerIsTightEnd(player.id);\r\n            if (isTightEnd) {\r\n                const tightEndPosition = __1.default.getPlayerDiscProperties(player.id);\r\n                return Room_1.default.game.down.setTightEndPosition(player.id, {\r\n                    x: fifteenYardsBehindLosX,\r\n                    y: tightEndPosition.y,\r\n                });\r\n            }\r\n            __1.default.setPlayerDiscProperties(player.id, {\r\n                x: fifteenYardsBehindLosX,\r\n                xspeed: 0,\r\n                yspeed: 0,\r\n            });\r\n        });\r\n    }\r\n    _getAllOffsideDefenseAndMove() {\r\n        const offsidePlayers = MapReferee_1.default.findAllTeamPlayerOffside(Room_1.default.game.players.getDefense(), Room_1.default.game.defenseTeamId, Room_1.default.game.down.getLOS().x);\r\n        const fifteenYardsBehindLosX = new DistanceCalculator_1.default()\r\n            .subtractByTeam(Room_1.default.game.down.getLOS().x, map_1.MAP_POINTS.YARD * 15, Room_1.default.game.defenseTeamId)\r\n            .calculate();\r\n        offsidePlayers.forEach((player) => {\r\n            Chat_1.default.send(`⚠️ You were offside (in front of the blue line), you have been moved 15 yards back.`, { id: player.id });\r\n            __1.default.setPlayerDiscProperties(player.id, {\r\n                x: fifteenYardsBehindLosX,\r\n                xspeed: 0,\r\n                yspeed: 0,\r\n            });\r\n        });\r\n    }\r\n    _handleCurvePass(ballContactObj) {\r\n        const ballPosition = Ball_1.default.getPosition();\r\n        const { playerPosition } = ballContactObj;\r\n        const playerIsTouchingBottomOfBall = playerPosition.y > ballPosition.y;\r\n        const CURVE_SHARPNESS = 0.09;\r\n        if (playerIsTouchingBottomOfBall)\r\n            return Ball_1.default.setGravity({ y: CURVE_SHARPNESS });\r\n        return Ball_1.default.setGravity({ y: -CURVE_SHARPNESS });\r\n    }\r\n    _handleBallContactQuarterback(ballContactObj) {\r\n        const { type } = ballContactObj;\r\n        const qbContactAfterPass = this.stateExists(\"ballPassed\");\r\n        if (qbContactAfterPass)\r\n            return;\r\n        const qbTouchedBall = type === \"touch\";\r\n        if (qbTouchedBall)\r\n            return;\r\n        this.setState(\"ballPassed\");\r\n        this._updateQBTimeAndDistanceMovedStat();\r\n        this.setBallCarrier(null);\r\n        if (this.stateExists(\"curvePass\")) {\r\n            this._handleCurvePass(ballContactObj);\r\n        }\r\n    }\r\n    _handleBallContactDuringInterception(ballContactObj) {\r\n        const interceptingPlayer = this.getState(\"interceptingPlayer\");\r\n        if (interceptingPlayer.id !== ballContactObj.player.id)\r\n            return this.handleUnsuccessfulInterception();\r\n        const intKicked = this.stateExists(\"interceptionAttemptKicked\");\r\n        if (intKicked)\r\n            return this.handleUnsuccessfulInterception();\r\n        if (ballContactObj.type === \"kick\")\r\n            return this._handleInterceptionKick(ballContactObj);\r\n    }\r\n    _handleInterceptionKick(ballContactObj) {\r\n        this.setState(\"interceptionAttemptKicked\");\r\n        Ball_1.default.setProperties({ damping: 0.992 });\r\n        this.setState(\"interceptionPlayerKickPosition\", ballContactObj.playerPosition);\r\n        Room_1.default.game.swapOffenseAndUpdatePlayers();\r\n        const adjustedPlayerKickPosition = PreSetCalculators_1.default.adjustRawEndPosition(ballContactObj.playerPosition, Room_1.default.game.offenseTeamId);\r\n        this._setStartingPosition({\r\n            x: adjustedPlayerKickPosition.x,\r\n            y: adjustedPlayerKickPosition.y,\r\n        });\r\n        this.setBallCarrier(ballContactObj.player, false);\r\n        setTimeout(() => {\r\n            if (this.stateExists(\"interceptionRuling\"))\r\n                return;\r\n            const { xspeed } = Ball_1.default.getSpeed();\r\n            const ballPosition = Ball_1.default.getPosition();\r\n            const ballPositionOnFirstTouch = this.getState(\"interceptionBallPositionFirstTouch\");\r\n            const isHeadedTowardsInt = MapReferee_1.default.checkIfBallIsHeadedInIntTrajectory(xspeed, ballPositionOnFirstTouch, ballPosition);\r\n            if (isHeadedTowardsInt)\r\n                return this.handleUnsuccessfulInterception();\r\n        }, 3000);\r\n    }\r\n    _handleInterceptionAttempt(ballContactObj) {\r\n        const isOutOfBoundsOnAttempt = MapReferee_1.default.checkIfPlayerOutOfBounds(ballContactObj.playerPosition);\r\n        if (isOutOfBoundsOnAttempt)\r\n            return this.handleUnsuccessfulInterception();\r\n        this.setState(\"interceptionAttempt\");\r\n        this.setState(\"interceptingPlayer\", ballContactObj.player);\r\n        this.setState(\"interceptionBallPositionFirstTouch\", Ball_1.default.getPosition());\r\n        if (ballContactObj.type === \"kick\")\r\n            return this._handleInterceptionKick(ballContactObj);\r\n    }\r\n    handleUnsuccessfulInterception() {\r\n        this.setState(\"interceptionRuling\");\r\n        if (this.stateExists(\"interceptionAttemptKicked\")) {\r\n            Room_1.default.game.swapOffenseAndUpdatePlayers();\r\n        }\r\n        return this.endPlay({});\r\n    }\r\n    _handleRunTackle(playerContactObj) {\r\n        const isFirstTackle = this.stateExists(\"runFirstTackler\") === false;\r\n        if (isFirstTackle) {\r\n            this.setState(\"runFirstTackler\", playerContactObj.player);\r\n            Chat_1.default.send(\"First tackle\");\r\n            setTimeout(() => {\r\n                this.setState(\"canSecondTackle\");\r\n            }, 500);\r\n            return;\r\n        }\r\n        const isSamePlayedWhoInitiallyTackled = this.getState(\"runFirstTackler\").id === playerContactObj.player.id;\r\n        if (this.stateExists(\"canSecondTackle\") === false &&\r\n            isSamePlayedWhoInitiallyTackled)\r\n            return;\r\n        return this._handleTackle(playerContactObj);\r\n    }\r\n    _handleRunTackleStats(playerContactObj) {\r\n        const { netYards } = this._getPlayDataOffense(playerContactObj.ballCarrierPosition);\r\n        this._updateStatsIfNotTwoPoint(playerContactObj.player.id, {\r\n            tackles: 0.5,\r\n        });\r\n        const firstTackler = this.getState(\"runFirstTackler\");\r\n        this._updateStatsIfNotTwoPoint(firstTackler.id, {\r\n            tackles: 0.5,\r\n        });\r\n        this._updateStatsIfNotTwoPoint(this._ballCarrier.id, {\r\n            rushingAttempts: 1,\r\n            rushingYards: netYards,\r\n        });\r\n    }\r\n    _handleSuccessfulInterception() {\r\n        Chat_1.default.send(`${Icons_1.default.Target} Pass Intercepted!`);\r\n        const interceptingPlayer = this.getState(\"interceptingPlayer\");\r\n        this._updateStatsIfNotTwoPoint(interceptingPlayer.id, {\r\n            interceptionsReceived: 1,\r\n        });\r\n        this._updateStatsIfNotTwoPoint(this._quarterback.id, {\r\n            interceptionsThrown: 1,\r\n        });\r\n        this.setState(\"interceptionRuling\");\r\n        this.setState(\"ballIntercepted\");\r\n        const endPositionExists = this.stateExists(\"interceptionPlayerEndPosition\");\r\n        if (!endPositionExists)\r\n            return __1.default.setPlayerAvatar(interceptingPlayer.id, Icons_1.default.Football);\r\n        const rawEndPosition = this.getState(\"interceptionPlayerEndPosition\");\r\n        const { endPosition: adjustedEndPosition } = this._getPlayDataOffense(rawEndPosition);\r\n        const { isSafety, isTouchback } = GameReferee_1.default.checkIfSafetyOrTouchbackPlayer(this.getState(\"interceptionPlayerKickPosition\"), rawEndPosition, Room_1.default.game.offenseTeamId);\r\n        if (isSafety)\r\n            return this._handleSafety();\r\n        if (isTouchback)\r\n            return this._handleTouchback();\r\n        return this.endPlay({ newLosX: adjustedEndPosition.x, setNewDown: true });\r\n    }\r\n    _handleInterceptionBallCarrierOutOfBounds(ballCarrierPosition) {\r\n        var _a;\r\n        if (this.stateExists(\"interceptionRuling\")) {\r\n            const { endPosition, yardAndHalfStr } = this._getPlayDataOffense(ballCarrierPosition);\r\n            Chat_1.default.send(`${(_a = this._ballCarrier) === null || _a === void 0 ? void 0 : _a.name.trim()} stepped out of bounds ${yardAndHalfStr}`);\r\n            const { isSafety, isTouchback } = GameReferee_1.default.checkIfSafetyOrTouchbackPlayer(this.getState(\"interceptionPlayerKickPosition\"), ballCarrierPosition, Room_1.default.game.offenseTeamId);\r\n            if (isSafety)\r\n                return this._handleSafety();\r\n            if (isTouchback)\r\n                return this._handleTouchback();\r\n            return this.endPlay({\r\n                newLosX: endPosition.x,\r\n                setNewDown: true,\r\n            });\r\n        }\r\n        this.setState(\"interceptionPlayerEndPosition\", ballCarrierPosition);\r\n    }\r\n    _handleTackle(playerContact) {\r\n        const { endPosition, netYards, yardAndHalfStr, netYardsStr, yardsAfterCatch, yardsPassed, } = this._getPlayDataOffense(playerContact.ballCarrierPosition);\r\n        const isSack = GameReferee_1.default.checkIfSack(playerContact.ballCarrierPosition, Room_1.default.game.down.getLOS().x, Room_1.default.game.offenseTeamId) &&\r\n            this.stateExists(\"ballRan\") === false &&\r\n            this.stateExists(\"ballCaught\") === false;\r\n        if (isSack && this.stateExists(\"ballIntercepted\") === false) {\r\n            Chat_1.default.send(`${Icons_1.default.HandFingersSpread} ${playerContact.player.name.trim()} with the SACK!`);\r\n            this._updateStatsIfNotTwoPoint(playerContact.player.id, {\r\n                sacks: 1,\r\n            });\r\n            this._updateStatsIfNotTwoPoint(playerContact.player.id, {\r\n                qbSacks: 1,\r\n            });\r\n        }\r\n        else {\r\n            Chat_1.default.send(`${Icons_1.default.HandFingersSpread} Tackle ${yardAndHalfStr} | ${netYardsStr}`);\r\n        }\r\n        if (this.stateExists(\"ballRan\")) {\r\n            this._handleRunTackleStats(playerContact);\r\n        }\r\n        else {\r\n            this._updateStatsIfNotTwoPoint(playerContact.player.id, {\r\n                tackles: 1,\r\n            });\r\n        }\r\n        if (this._ballCarrier.id === this._quarterback.id) {\r\n            this._updateStatsIfNotTwoPoint(this._ballCarrier.id, {\r\n                rushingAttempts: 1,\r\n                rushingYards: netYards,\r\n            });\r\n        }\r\n        if (this.stateExists(\"ballCaught\")) {\r\n            const { mapSection } = this._getStatInfo(this.getState(\"catchPosition\"));\r\n            this._updateStatsIfNotTwoPoint(this._ballCarrier.id, {\r\n                receptions: { [mapSection]: 1 },\r\n                receivingYards: { [mapSection]: netYards },\r\n                receivingYardsAfterCatch: { [mapSection]: yardsAfterCatch },\r\n            });\r\n            if (this.stateExists(\"nearestDefenderToCatch\")) {\r\n                const nearestDefenderToCatch = this.getState(\"nearestDefenderToCatch\");\r\n                this._updateStatsIfNotTwoPoint(nearestDefenderToCatch.id, {\r\n                    yardsAllowed: { [mapSection]: netYards },\r\n                });\r\n            }\r\n            this._updateStatsIfNotTwoPoint(this._quarterback.id, {\r\n                passYards: { [mapSection]: netYards },\r\n                passYardsDistance: { [mapSection]: yardsPassed },\r\n            });\r\n        }\r\n        const startingPosition = this.stateExists(\"catchPosition\")\r\n            ? this.getState(\"catchPosition\")\r\n            : this._startingPosition;\r\n        if (this.stateExists(\"ballIntercepted\")) {\r\n            const { isSafety, isTouchback } = GameReferee_1.default.checkIfSafetyOrTouchbackPlayer(this.getState(\"interceptionBallPositionFirstTouch\"), playerContact.ballCarrierPosition, Room_1.default.game.offenseTeamId);\r\n            if (isSafety)\r\n                return this._handleSafety();\r\n            if (isTouchback)\r\n                return this._handleTouchback();\r\n        }\r\n        else {\r\n            const { isSafety } = GameReferee_1.default.checkIfSafetyOrTouchbackPlayer(startingPosition, playerContact.ballCarrierPosition, Room_1.default.game.offenseTeamId);\r\n            if (isSafety)\r\n                return this._handleSafety();\r\n        }\r\n        this.endPlay({\r\n            newLosX: endPosition.x,\r\n            netYards,\r\n            setNewDown: this.stateExists(\"ballIntercepted\"),\r\n        });\r\n    }\r\n    _handleInterceptionTackle(playerContactObj) {\r\n        if (this.stateExists(\"interceptionRuling\"))\r\n            return this._handleTackle(playerContactObj);\r\n        this.setState(\"interceptionPlayerEndPosition\", playerContactObj.playerPosition);\r\n    }\r\n    _handleTwoPointTouchdown(endPosition) {\r\n        Chat_1.default.send(`${Icons_1.default.Fire} Two point conversion!`, {\r\n            sound: 2,\r\n        });\r\n        Room_1.default.game.setState(\"twoPointAttempt\");\r\n        this.scorePlay(1, Room_1.default.game.offenseTeamId, Room_1.default.game.defenseTeamId);\r\n    }\r\n    _handleFailedTwoPointConversion() {\r\n        Chat_1.default.send(`${Icons_1.default.X} Failed Two Point Conversion`);\r\n        this.scorePlay(-1, Room_1.default.game.offenseTeamId, Room_1.default.game.defenseTeamId);\r\n    }\r\n    _makeOffenseBouncy() {\r\n        const offensePlayers = Room_1.default.game.players.getOffense();\r\n        offensePlayers.forEach((player) => {\r\n            __1.default.setPlayerDiscProperties(player.id, {\r\n                bCoeff: 0.99,\r\n                invMass: 0.55,\r\n            });\r\n        });\r\n    }\r\n    _updateQBTimeAndDistanceMovedStat() {\r\n        const { position } = (0, haxUtils_1.getPlayerDiscProperties)(this._quarterback.id);\r\n        const initialPosition = Room_1.default.game.down.getSnapPosition();\r\n        const distanceMovedBeforePassUnRounded = new DistanceCalculator_1.default()\r\n            .calcDifference3D(position, initialPosition)\r\n            .calculate();\r\n        const distanceMovedBeforePass = (0, utils_1.round)(distanceMovedBeforePassUnRounded - map_1.MAP_POINTS.PLAYER_RADIUS, 1);\r\n        const timeBeforePass = (0, utils_1.round)(Room_1.default.game.getTime() - this.time, 1);\r\n        this._updateStatsIfNotTwoPoint(this._quarterback.id, {\r\n            distanceMovedBeforePassArr: [distanceMovedBeforePass],\r\n            timeToPassArr: [timeBeforePass],\r\n        });\r\n    }\r\n    _handleRegularTouchdown(endPosition) {\r\n        var _a, _b, _c, _d;\r\n        const { netYards, yardsPassed, yardsAfterCatch } = this._getPlayDataOffense(endPosition);\r\n        if (this.stateExistsUnsafe(\"ballRan\") ||\r\n            ((_a = this._ballCarrier) === null || _a === void 0 ? void 0 : _a.id) === this._quarterback.id) {\r\n            this._updateStatsIfNotTwoPoint((_b = this._ballCarrier) === null || _b === void 0 ? void 0 : _b.id, {\r\n                rushingAttempts: 1,\r\n                rushingYards: netYards,\r\n                touchdownsRushed: 1,\r\n            });\r\n        }\r\n        if (this.stateExistsUnsafe(\"ballCaught\")) {\r\n            const catchPosition = this.getState(\"catchPosition\");\r\n            const { mapSection } = this._getStatInfo(catchPosition);\r\n            this._updateStatsIfNotTwoPoint((_c = this._ballCarrier) === null || _c === void 0 ? void 0 : _c.id, {\r\n                receptions: { [mapSection]: 1 },\r\n                receivingYards: { [mapSection]: netYards },\r\n                receivingYardsAfterCatch: { [mapSection]: yardsAfterCatch },\r\n                touchdownsReceived: 1,\r\n            });\r\n            if (this.stateExists(\"nearestDefenderToCatch\")) {\r\n                const nearestDefenerToCatch = this.getState(\"nearestDefenderToCatch\");\r\n                this._updateStatsIfNotTwoPoint(nearestDefenerToCatch.id, {\r\n                    yardsAllowed: { [mapSection]: netYards },\r\n                });\r\n            }\r\n            this._updateStatsIfNotTwoPoint((_d = this._quarterback) === null || _d === void 0 ? void 0 : _d.id, {\r\n                passYards: { [mapSection]: netYards },\r\n                passYardsDistance: { [mapSection]: yardsPassed },\r\n                touchdownsThrown: 1,\r\n            });\r\n        }\r\n        super.handleTouchdown(endPosition);\r\n    }\r\n}\r\nexports[\"default\"] = Snap;\r\nclass SnapValidatorPenalty {\r\n    constructor(penaltyName, player, penaltyData = {}) {\r\n        this.penaltyName = penaltyName;\r\n        this.player = player;\r\n        this.penaltyData = penaltyData;\r\n    }\r\n}\r\nclass SnapValidator {\r\n    constructor(player) {\r\n        this._player = player;\r\n        this._playerPosition = (0, haxUtils_1.getPlayerDiscProperties)(this._player.id).position;\r\n    }\r\n    _checkSnapOutOfBounds() {\r\n        const isOutOfBounds = MapReferee_1.default.checkIfPlayerOutOfBounds(this._playerPosition);\r\n        if (isOutOfBounds)\r\n            throw new SnapValidatorPenalty(\"snapOutOfBounds\", this._player);\r\n    }\r\n    _checkSnapWithinHashes() {\r\n        const isWithinHash = MapReferee_1.default.checkIfWithinHash(this._playerPosition, map_1.MAP_POINTS.PLAYER_RADIUS);\r\n        if (!isWithinHash)\r\n            throw new SnapValidatorPenalty(\"snapOutOfHashes\", this._player);\r\n    }\r\n    _checkQBOnside() {\r\n        const qbIsOffside = MapReferee_1.default.findTeamPlayerOffside([this._player], Room_1.default.game.offenseTeamId, Room_1.default.game.down.getLOS().x);\r\n        if (qbIsOffside)\r\n            throw new SnapValidatorPenalty(\"offsidesOffense\", this._player);\r\n    }\r\n    validate() {\r\n        try {\r\n            this._checkSnapWithinHashes();\r\n            this._checkSnapOutOfBounds();\r\n            this._checkQBOnside();\r\n        }\r\n        catch (e) {\r\n            if (e instanceof SnapValidatorPenalty) {\r\n                const { penaltyName, player, penaltyData } = e;\r\n                return {\r\n                    valid: false,\r\n                    penaltyName: penaltyName,\r\n                    player: player,\r\n                    penaltyData: penaltyData,\r\n                };\r\n            }\r\n            console.log(e);\r\n        }\r\n        return {\r\n            valid: true,\r\n        };\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/plays/Snap.ts?");

/***/ }),

/***/ "./src/room/plays/play_events/FieldGoal.events.ts":
/*!********************************************************!*\
  !*** ./src/room/plays/play_events/FieldGoal.events.ts ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst GameReferee_1 = __importDefault(__webpack_require__(/*! ../../structures/GameReferee */ \"./src/room/structures/GameReferee.ts\"));\r\nconst MapReferee_1 = __importDefault(__webpack_require__(/*! ../../structures/MapReferee */ \"./src/room/structures/MapReferee.ts\"));\r\nconst Icons_1 = __importDefault(__webpack_require__(/*! ../../utils/Icons */ \"./src/room/utils/Icons.ts\"));\r\nconst BasePlay_1 = __importDefault(__webpack_require__(/*! ../BasePlay */ \"./src/room/plays/BasePlay.ts\"));\r\nclass FieldGoalEvents extends BasePlay_1.default {\r\n    onBallContact(ballContactObj) {\r\n        if (this.stateExists(\"ballRan\") || this.stateExists(\"fieldGoalBlitzed\"))\r\n            return;\r\n        super.onBallContact(ballContactObj);\r\n    }\r\n    onBallOutOfBounds(ballPosition) {\r\n        this.handleUnsuccessfulFg();\r\n    }\r\n    onBallCarrierOutOfBounds(ballCarrierPosition) {\r\n        var _a;\r\n        const { endPosition, netYards, yardAndHalfStr, isTouchdown } = this._getPlayDataOffense(ballCarrierPosition);\r\n        if (isTouchdown)\r\n            return this.handleTouchdown(ballCarrierPosition);\r\n        Chat_1.default.send(`${Icons_1.default.Pushpin} ${this.getBallCarrier().name.trim()} went out of bounds ${yardAndHalfStr}`);\r\n        const { isSafety, isTouchback } = GameReferee_1.default.checkIfSafetyOrTouchbackPlayer(this._startingPosition, endPosition, Room_1.default.game.offenseTeamId);\r\n        Room_1.default.game.stats.updatePlayerStat((_a = this._ballCarrier) === null || _a === void 0 ? void 0 : _a.id, {\r\n            rushingAttempts: 1,\r\n            rushingYards: netYards,\r\n        });\r\n        if (isSafety)\r\n            return this._handleSafety();\r\n        if (isTouchback)\r\n            return this._handleTouchback();\r\n        this.endPlay({ newLosX: endPosition.x, netYards });\r\n    }\r\n    onBallCarrierContactOffense(playerContact) {\r\n        const { player, playerPosition, ballCarrierPosition } = playerContact;\r\n        const isBehindKicker = MapReferee_1.default.checkIfBehind(playerPosition.x, ballCarrierPosition.x, player.team);\r\n        if (isBehindKicker)\r\n            return this._handleRun(playerContact);\r\n        if (this.stateExists(\"fieldGoalKicked\"))\r\n            return;\r\n        this._handlePenalty(\"illegalRun\", player);\r\n    }\r\n    onBallCarrierContactDefense(playerContact) {\r\n        if (this.stateExists(\"ballRan\"))\r\n            return this._handleRunTackle(playerContact);\r\n        this._handleTackle(playerContact);\r\n    }\r\n    onKickDrag() {\r\n        this._handlePenalty(\"fgDrag\", this._kicker);\r\n    }\r\n    _onBallContactDefense(ballContactObj) {\r\n        if (this.stateExists(\"fieldGoalKicked\"))\r\n            return;\r\n        this.setState(\"fieldGoalBlitzed\");\r\n    }\r\n    _onBallContactOffense(ballContactObj) {\r\n        const { player } = ballContactObj;\r\n        if (player.id === this._kicker.id)\r\n            return this._handleBallContactKicker(ballContactObj);\r\n    }\r\n}\r\nexports[\"default\"] = FieldGoalEvents;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/plays/play_events/FieldGoal.events.ts?");

/***/ }),

/***/ "./src/room/plays/play_events/KickOff.events.ts":
/*!******************************************************!*\
  !*** ./src/room/plays/play_events/KickOff.events.ts ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Ball_1 = __importDefault(__webpack_require__(/*! ../../roomStructures/Ball */ \"./src/room/roomStructures/Ball.ts\"));\r\nconst GameReferee_1 = __importDefault(__webpack_require__(/*! ../../structures/GameReferee */ \"./src/room/structures/GameReferee.ts\"));\r\nconst MapReferee_1 = __importDefault(__webpack_require__(/*! ../../structures/MapReferee */ \"./src/room/structures/MapReferee.ts\"));\r\nconst Icons_1 = __importDefault(__webpack_require__(/*! ../../utils/Icons */ \"./src/room/utils/Icons.ts\"));\r\nconst BasePlay_1 = __importDefault(__webpack_require__(/*! ../BasePlay */ \"./src/room/plays/BasePlay.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nclass KickOffEvents extends BasePlay_1.default {\r\n    onBallCarrierContactDefense(playerContact) {\r\n        const { endPosition, netYards, yardAndHalfStr, netYardsStr } = this._getPlayDataOffense(playerContact.ballCarrierPosition);\r\n        Chat_1.default.send(`${Icons_1.default.HandFingersSpread} Tackle ${yardAndHalfStr} | ${netYardsStr}`);\r\n        Room_1.default.game.stats.updatePlayerStat(this._ballCarrier.id, {\r\n            specReceptions: 1,\r\n            specReceivingYards: netYards,\r\n        });\r\n        Room_1.default.game.stats.updatePlayerStat(playerContact.player.id, {\r\n            specTackles: 1,\r\n        });\r\n        const { isSafety, isTouchback } = GameReferee_1.default.checkIfSafetyOrTouchbackPlayer(this._startingPosition, endPosition, Room_1.default.game.offenseTeamId);\r\n        if (isSafety)\r\n            return super._handleSafety();\r\n        if (isTouchback)\r\n            return super._handleTouchback();\r\n        this.endPlay({\r\n            newLosX: endPosition.x,\r\n            netYards,\r\n        });\r\n    }\r\n    onBallCarrierContactOffense(playerContact) {\r\n    }\r\n    onBallCarrierOutOfBounds(ballCarrierPosition) {\r\n        const { endPosition, yardAndHalfStr, netYards, netYardsStr, isTouchdown } = this._getPlayDataOffense(ballCarrierPosition);\r\n        if (isTouchdown)\r\n            return this.handleTouchdown(ballCarrierPosition);\r\n        Chat_1.default.send(`${this.getBallCarrier().name.trim()} went out of bounds ${yardAndHalfStr} | ${netYardsStr}`);\r\n        Room_1.default.game.stats.updatePlayerStat(this._ballCarrier.id, {\r\n            specReceptions: 1,\r\n            specReceivingYards: netYards,\r\n        });\r\n        const { isSafety, isTouchback } = GameReferee_1.default.checkIfSafetyOrTouchbackPlayer(this._startingPosition, endPosition, Room_1.default.game.offenseTeamId);\r\n        if (isSafety)\r\n            return super._handleSafety();\r\n        if (isTouchback)\r\n            return super._handleTouchback();\r\n        this.endPlay({ newLosX: endPosition.x });\r\n    }\r\n    onBallContact(ballContactObj) {\r\n        if (this.stateExists(\"kickOffCaught\"))\r\n            return;\r\n        super.onBallContact(ballContactObj);\r\n    }\r\n    onBallOutOfBounds(ballPosition) {\r\n        const isTouchback = GameReferee_1.default.checkIfTouchbackBall(ballPosition, Room_1.default.game.offenseTeamId);\r\n        if (isTouchback)\r\n            return this._handleTouchback();\r\n        this._handleBallOutOfBounds(ballPosition);\r\n    }\r\n    onKickDrag(player) {\r\n        const fieldedPlayers = Room_1.default.game.players.getFielded();\r\n        const { player: playerClosestToBall } = MapReferee_1.default.getNearestPlayerToPosition(fieldedPlayers, Ball_1.default.getPosition());\r\n        if (this.stateExists(\"kickOffKicked\") === false) {\r\n            Room_1.default.game.swapOffenseAndUpdatePlayers();\r\n        }\r\n        this._handleOffensePenalty(playerClosestToBall, \"drag\");\r\n    }\r\n    _onBallContactDefense(ballContactObj) {\r\n        const { yardAndHalfStr, endPosition } = this._getPlayDataOffense(ballContactObj.playerPosition);\r\n        Chat_1.default.send(`${Icons_1.default.Pushpin} Ball downed by defense ${yardAndHalfStr}`);\r\n        const { isTouchback } = GameReferee_1.default.checkIfSafetyOrTouchbackPlayer(endPosition, endPosition, Room_1.default.game.offenseTeamId);\r\n        if (isTouchback)\r\n            return this._handleTouchback();\r\n        this.endPlay({ newLosX: endPosition.x });\r\n    }\r\n    _onBallContactOffense(ballContactObj) {\r\n        if (this.stateExists(\"kickOffKicked\") === false) {\r\n            if (ballContactObj.type === \"kick\") {\r\n                this.setState(\"kickOffKicked\");\r\n                this.setState(\"KickOffKicker\", ballContactObj.player);\r\n                const { isOffsides, offsidesPlayer } = this._checkIfOffenseOffsidesOnKick();\r\n                Room_1.default.game.swapOffenseAndUpdatePlayers();\r\n                if (isOffsides)\r\n                    return this._handleOffensePenalty(offsidesPlayer, \"offsidesOffense\");\r\n            }\r\n            return;\r\n        }\r\n        this._handleCatch(ballContactObj);\r\n    }\r\n}\r\nexports[\"default\"] = KickOffEvents;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/plays/play_events/KickOff.events.ts?");

/***/ }),

/***/ "./src/room/plays/play_events/OnsideKick.events.ts":
/*!*********************************************************!*\
  !*** ./src/room/plays/play_events/OnsideKick.events.ts ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst GameReferee_1 = __importDefault(__webpack_require__(/*! ../../structures/GameReferee */ \"./src/room/structures/GameReferee.ts\"));\r\nconst Icons_1 = __importDefault(__webpack_require__(/*! ../../utils/Icons */ \"./src/room/utils/Icons.ts\"));\r\nconst BasePlay_1 = __importDefault(__webpack_require__(/*! ../BasePlay */ \"./src/room/plays/BasePlay.ts\"));\r\nclass OnsideKickEvents extends BasePlay_1.default {\r\n    onBallCarrierContactOffense(playerContact) {\r\n    }\r\n    onBallCarrierContactDefense(playerContact) {\r\n        const { endPosition, netYards, yardAndHalfStr, netYardsStr } = this._getPlayDataOffense(playerContact.ballCarrierPosition);\r\n        Chat_1.default.send(`${Icons_1.default.HandFingersSpread} Tackle ${yardAndHalfStr} | ${netYardsStr}`);\r\n        Room_1.default.game.stats.updatePlayerStat(this._ballCarrier.id, {\r\n            specReceptions: 1,\r\n            specReceivingYards: netYards,\r\n        });\r\n        Room_1.default.game.stats.updatePlayerStat(playerContact.player.id, {\r\n            specTackles: 1,\r\n        });\r\n        const { isSafety } = GameReferee_1.default.checkIfSafetyOrTouchbackPlayer(this._startingPosition, endPosition, Room_1.default.game.offenseTeamId);\r\n        if (isSafety)\r\n            return super._handleSafety();\r\n        this.endPlay({\r\n            newLosX: endPosition.x,\r\n            netYards,\r\n        });\r\n    }\r\n    onBallCarrierOutOfBounds(ballCarrierPosition) {\r\n        if (this.stateExists(\"onsideKickKicked\") === false) {\r\n            return this._handleUnsuccessfulOnsideKick(\"Kicker went out of bounds\");\r\n        }\r\n        const { endPosition, yardAndHalfStr, netYards, netYardsStr } = this._getPlayDataOffense(ballCarrierPosition);\r\n        Chat_1.default.send(`${this.getBallCarrier().name.trim()} went out of bounds ${yardAndHalfStr} | ${netYardsStr}`);\r\n        Room_1.default.game.stats.updatePlayerStat(this._ballCarrier.id, {\r\n            specReceptions: 1,\r\n            specReceivingYards: netYards,\r\n        });\r\n        const { isSafety } = GameReferee_1.default.checkIfSafetyOrTouchbackPlayer(this._startingPosition, endPosition, Room_1.default.game.offenseTeamId);\r\n        if (isSafety)\r\n            return super._handleSafety();\r\n        this.endPlay({ newLosX: endPosition.x });\r\n    }\r\n    onBallContact(ballContactObj) {\r\n        if (this.stateExists(\"onsideKickCaught\"))\r\n            return;\r\n        super.onBallContact(ballContactObj);\r\n    }\r\n    onBallOutOfBounds(ballPosition) {\r\n        this._handleUnsuccessfulOnsideKick(\"Kick went out of bounds\");\r\n    }\r\n    onKickDrag(player) {\r\n        this._handlePenalty(\"onsideKickDrag\", this._kicker);\r\n        this._handleUnsuccessfulOnsideKick(null);\r\n    }\r\n    _onBallContactDefense(ballContactObj) {\r\n        if (ballContactObj.player.id === this._kicker.id)\r\n            return this._handleBallContactKicker(ballContactObj);\r\n        return this._handleUnsuccessfulOnsideKick(\"Illegaly touched by kicking team\");\r\n    }\r\n    _onBallContactOffense(ballContactObj) {\r\n        if (ballContactObj.player.id === this._kicker.id)\r\n            return this._handleBallContactKicker(ballContactObj);\r\n        if (this.stateExists(\"onsideKickKicked\") === false) {\r\n            return this._handleUnsuccessfulOnsideKick(\"Illegaly touched by kicking team\");\r\n        }\r\n        this._handleCatch(ballContactObj);\r\n    }\r\n}\r\nexports[\"default\"] = OnsideKickEvents;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/plays/play_events/OnsideKick.events.ts?");

/***/ }),

/***/ "./src/room/plays/play_events/Punt.events.ts":
/*!***************************************************!*\
  !*** ./src/room/plays/play_events/Punt.events.ts ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Ball_1 = __importDefault(__webpack_require__(/*! ../../roomStructures/Ball */ \"./src/room/roomStructures/Ball.ts\"));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst DistanceCalculator_1 = __webpack_require__(/*! ../../structures/DistanceCalculator */ \"./src/room/structures/DistanceCalculator.ts\");\r\nconst GameReferee_1 = __importDefault(__webpack_require__(/*! ../../structures/GameReferee */ \"./src/room/structures/GameReferee.ts\"));\r\nconst MapReferee_1 = __importDefault(__webpack_require__(/*! ../../structures/MapReferee */ \"./src/room/structures/MapReferee.ts\"));\r\nconst MessageFormatter_1 = __importDefault(__webpack_require__(/*! ../../structures/MessageFormatter */ \"./src/room/structures/MessageFormatter.ts\"));\r\nconst PreSetCalculators_1 = __importDefault(__webpack_require__(/*! ../../structures/PreSetCalculators */ \"./src/room/structures/PreSetCalculators.ts\"));\r\nconst Icons_1 = __importDefault(__webpack_require__(/*! ../../utils/Icons */ \"./src/room/utils/Icons.ts\"));\r\nconst BasePlay_1 = __importDefault(__webpack_require__(/*! ../BasePlay */ \"./src/room/plays/BasePlay.ts\"));\r\nclass PuntEvents extends BasePlay_1.default {\r\n    onBallContact(ballContactObj) {\r\n        if (this.stateExists(\"puntCaught\"))\r\n            return;\r\n        super.onBallContact(ballContactObj);\r\n    }\r\n    onBallOutOfBounds(ballPosition) {\r\n        const adjustedBallPositionForTeam = PreSetCalculators_1.default.adjustBallPositionOnOutOfBounds(ballPosition, Room_1.default.game.offenseTeamId);\r\n        const ballPositionYardLine = DistanceCalculator_1.DistanceConverter.toYardLine(adjustedBallPositionForTeam.x);\r\n        const ballPositionYardLineStr = MessageFormatter_1.default.formatYardAndHalfStr(ballPositionYardLine, adjustedBallPositionForTeam.x);\r\n        Chat_1.default.send(`${Icons_1.default.Pushpin} Ball went out of bounds ${ballPositionYardLineStr}`);\r\n        const isTouchback = GameReferee_1.default.checkIfTouchbackBall(ballPosition, Room_1.default.game.offenseTeamId);\r\n        if (isTouchback)\r\n            return this._handleTouchback();\r\n        this._endPlayAndSetNewDown({ newLosX: adjustedBallPositionForTeam.x });\r\n    }\r\n    onBallCarrierOutOfBounds(ballCarrierPosition) {\r\n        const { endPosition, yardAndHalfStr, netYards, netYardsStr, isTouchdown } = this._getPlayDataOffense(ballCarrierPosition);\r\n        if (isTouchdown)\r\n            return this.handleTouchdown(ballCarrierPosition);\r\n        Chat_1.default.send(`${this.getBallCarrier().name.trim()} went out of bounds ${yardAndHalfStr} | ${netYardsStr}`);\r\n        Room_1.default.game.stats.updatePlayerStat(this._ballCarrier.id, {\r\n            specReceptions: 1,\r\n            specReceivingYards: netYards,\r\n        });\r\n        const { isSafety, isTouchback } = GameReferee_1.default.checkIfSafetyOrTouchbackPlayer(this._startingPosition, endPosition, Room_1.default.game.offenseTeamId);\r\n        if (isSafety)\r\n            return super._handleSafety();\r\n        if (isTouchback)\r\n            return super._handleTouchback();\r\n        this._endPlayAndSetNewDown({ newLosX: endPosition.x });\r\n    }\r\n    onBallCarrierContactOffense(playerContact) {\r\n    }\r\n    onBallCarrierContactDefense(playerContact) {\r\n        const { endPosition, netYards, yardAndHalfStr, netYardsStr } = this._getPlayDataOffense(playerContact.ballCarrierPosition);\r\n        Chat_1.default.send(`${Icons_1.default.HandFingersSpread} Tackle ${yardAndHalfStr} | ${netYardsStr}`);\r\n        Room_1.default.game.stats.updatePlayerStat(this._ballCarrier.id, {\r\n            specReceptions: 1,\r\n            specReceivingYards: netYards,\r\n        });\r\n        Room_1.default.game.stats.updatePlayerStat(playerContact.player.id, {\r\n            specTackles: 1,\r\n        });\r\n        const { isSafety, isTouchback } = GameReferee_1.default.checkIfSafetyOrTouchbackPlayer(this._startingPosition, endPosition, Room_1.default.game.offenseTeamId);\r\n        if (isSafety)\r\n            return super._handleSafety();\r\n        if (isTouchback)\r\n            return super._handleTouchback();\r\n        this._endPlayAndSetNewDown({\r\n            newLosX: endPosition.x,\r\n            netYards,\r\n        });\r\n    }\r\n    onKickDrag(player) {\r\n        const fieldedPlayers = Room_1.default.game.players.getFielded();\r\n        const { player: playerClosestToBall } = MapReferee_1.default.getNearestPlayerToPosition(fieldedPlayers, Ball_1.default.getPosition());\r\n        this._handleOffensePenalty(playerClosestToBall, \"puntDrag\");\r\n    }\r\n    _onBallContactOffense(ballContactObj) {\r\n        const { player } = ballContactObj;\r\n        if (this.stateExists(\"puntKicked\") === false) {\r\n            if (ballContactObj.type === \"kick\") {\r\n                this.setState(\"puntKicked\");\r\n                this.setState(\"puntKicker\", player);\r\n                this._releaseInvisibleWallForDefense();\r\n                Room_1.default.game.swapOffenseAndUpdatePlayers();\r\n                const { isOffsides, offsidesPlayer } = this._checkIfOffenseOffsidesOnKick(player);\r\n                if (isOffsides)\r\n                    return this._handleOffensePenalty(offsidesPlayer, \"puntOffsidesOffense\");\r\n            }\r\n            return;\r\n        }\r\n        this._handleCatch(ballContactObj);\r\n    }\r\n    _onBallContactDefense(ballContactObj) {\r\n        const { yardAndHalfStr, endPosition } = this._getPlayDataOffense(ballContactObj.playerPosition);\r\n        Chat_1.default.send(`${Icons_1.default.Pushpin} Ball downed by defense ${yardAndHalfStr}`);\r\n        const { isTouchback } = GameReferee_1.default.checkIfSafetyOrTouchbackPlayer(this._startingPosition, endPosition, Room_1.default.game.offenseTeamId);\r\n        if (isTouchback)\r\n            return this._handleTouchback();\r\n        this._endPlayAndSetNewDown({ newLosX: endPosition.x });\r\n    }\r\n}\r\nexports[\"default\"] = PuntEvents;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/plays/play_events/Punt.events.ts?");

/***/ }),

/***/ "./src/room/plays/play_events/Snap.events.ts":
/*!***************************************************!*\
  !*** ./src/room/plays/play_events/Snap.events.ts ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Ball_1 = __importDefault(__webpack_require__(/*! ../../roomStructures/Ball */ \"./src/room/roomStructures/Ball.ts\"));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst GameReferee_1 = __importDefault(__webpack_require__(/*! ../../structures/GameReferee */ \"./src/room/structures/GameReferee.ts\"));\r\nconst MapReferee_1 = __importDefault(__webpack_require__(/*! ../../structures/MapReferee */ \"./src/room/structures/MapReferee.ts\"));\r\nconst Icons_1 = __importDefault(__webpack_require__(/*! ../../utils/Icons */ \"./src/room/utils/Icons.ts\"));\r\nconst BasePlay_1 = __importDefault(__webpack_require__(/*! ../BasePlay */ \"./src/room/plays/BasePlay.ts\"));\r\nclass SnapEvents extends BasePlay_1.default {\r\n    onBallContact(ballContactObj) {\r\n        if (this.stateExists(\"ballCaught\") ||\r\n            this.stateExists(\"ballRan\") ||\r\n            this.stateExists(\"ballBlitzed\") ||\r\n            this.stateExists(\"interceptionRuling\"))\r\n            return;\r\n        if (this.stateExists(\"interceptionAttempt\"))\r\n            return this._handleBallContactDuringInterception(ballContactObj);\r\n        super.onBallContact(ballContactObj);\r\n    }\r\n    onBallOutOfBounds(ballPosition) {\r\n        if (this.stateExists(\"interceptionAttempt\")) {\r\n            const isSuccessfulInt = GameReferee_1.default.checkIfInterceptionSuccessful(ballPosition);\r\n            if (isSuccessfulInt)\r\n                return this._handleSuccessfulInterception();\r\n            return this.handleUnsuccessfulInterception();\r\n        }\r\n        const { mapSection } = this._getStatInfo(ballPosition);\r\n        this._updateStatsIfNotTwoPoint(this.getQuarterback().id, {\r\n            passAttempts: {\r\n                [mapSection]: 1,\r\n            },\r\n        });\r\n        if (this.stateExists(\"curvePass\")) {\r\n            this._updateStatsIfNotTwoPoint(this.getQuarterback().id, {\r\n                curvedPassAttempts: 1,\r\n            });\r\n        }\r\n        Chat_1.default.send(`${Icons_1.default.DoNotEnter} Incomplete - Pass out of bounds!`);\r\n        return this.endPlay({});\r\n    }\r\n    onBallCarrierOutOfBounds(ballCarrierPosition) {\r\n        var _a, _b, _c;\r\n        if (this.stateExists(\"interceptionAttempt\"))\r\n            return this._handleInterceptionBallCarrierOutOfBounds(ballCarrierPosition);\r\n        const startPosition = this.stateExists(\"catchPosition\")\r\n            ? this.getState(\"catchPosition\")\r\n            : this._startingPosition;\r\n        const { endPosition, netYards, yardAndHalfStr, netYardsStr, yardsPassed, yardsAfterCatch, isTouchdown, } = this._getPlayDataOffense(ballCarrierPosition);\r\n        if (isTouchdown)\r\n            return this.handleTouchdown(ballCarrierPosition);\r\n        Chat_1.default.send(`${Icons_1.default.Pushpin} ${this.getBallCarrier().name.trim()} stepped out of bounds ${yardAndHalfStr} | ${netYardsStr}`);\r\n        const { isSafety } = GameReferee_1.default.checkIfSafetyOrTouchbackPlayer(startPosition, endPosition, Room_1.default.game.offenseTeamId);\r\n        if (this.getQuarterback().id === ((_a = this._ballCarrier) === null || _a === void 0 ? void 0 : _a.id) ||\r\n            this.stateExists(\"ballRan\")) {\r\n            this._updateStatsIfNotTwoPoint((_b = this._ballCarrier) === null || _b === void 0 ? void 0 : _b.id, {\r\n                rushingAttempts: 1,\r\n                rushingYards: netYards,\r\n            });\r\n        }\r\n        else {\r\n            const catchPosition = this.getState(\"catchPosition\");\r\n            const { mapSection } = this._getStatInfo(catchPosition);\r\n            this._updateStatsIfNotTwoPoint((_c = this._ballCarrier) === null || _c === void 0 ? void 0 : _c.id, {\r\n                receptions: { [mapSection]: 1 },\r\n                receivingYards: { [mapSection]: netYards },\r\n                receivingYardsAfterCatch: { [mapSection]: yardsAfterCatch },\r\n            });\r\n            if (this.stateExists(\"nearestDefenderToCatch\")) {\r\n                const nearestDefenerToCatch = this.getState(\"nearestDefenderToCatch\");\r\n                this._updateStatsIfNotTwoPoint(nearestDefenerToCatch.id, {\r\n                    yardsAllowed: { [mapSection]: netYards },\r\n                });\r\n            }\r\n            this._updateStatsIfNotTwoPoint(this.getQuarterback().id, {\r\n                passYards: { [mapSection]: netYards },\r\n                passYardsDistance: { [mapSection]: yardsPassed },\r\n            });\r\n        }\r\n        if (isSafety)\r\n            return this._handleSafety();\r\n        this.endPlay({ newLosX: endPosition.x, netYards });\r\n    }\r\n    onBallCarrierContactOffense(playerContact) {\r\n        const { player, playerPosition, ballCarrierPosition } = playerContact;\r\n        const isBehindQuarterBack = MapReferee_1.default.checkIfBehind(playerPosition.x, ballCarrierPosition.x, player.team);\r\n        if (isBehindQuarterBack)\r\n            return this._handleRun(playerContact);\r\n        this._handlePenalty(\"illegalRun\", player);\r\n    }\r\n    onBallCarrierContactDefense(playerContact) {\r\n        if (this.stateExists(\"interceptingPlayer\"))\r\n            return this._handleInterceptionTackle(playerContact);\r\n        if (this.stateExists(\"ballRan\"))\r\n            return this._handleRunTackle(playerContact);\r\n        this._handleTackle(playerContact);\r\n    }\r\n    onKickDrag(player) {\r\n        this.setState(\"ballDragged\");\r\n        this._startBallMoveBlitzClock();\r\n    }\r\n    _onBallContactDefense(ballContactObj) {\r\n        if (this.stateExists(\"curvePass\"))\r\n            Ball_1.default.setGravity({ y: 0 });\r\n        if (!this.stateExists(\"ballPassed\"))\r\n            return this.setState(\"ballBlitzed\");\r\n        const { mapSection } = this._getStatInfo(ballContactObj.playerPosition);\r\n        this._updateStatsIfNotTwoPoint(ballContactObj.player.id, {\r\n            passDeflections: { [mapSection]: 1 },\r\n        });\r\n        this._updateStatsIfNotTwoPoint(this.getQuarterback().id, {\r\n            passAttempts: { [mapSection]: 1 },\r\n        });\r\n        if (this.stateExists(\"curvePass\")) {\r\n            this._updateStatsIfNotTwoPoint(this.getQuarterback().id, {\r\n                curvedPassAttempts: 1,\r\n            });\r\n        }\r\n        Room_1.default.game.setLastPlayEndPosition(ballContactObj.playerPosition);\r\n        Chat_1.default.send(`${Icons_1.default.DoNotEnter} Incomplete - Pass Deflected`);\r\n        this.setState(\"ballDeflected\");\r\n        if (this.stateExists(\"twoPointAttempt\"))\r\n            return this._handleFailedTwoPointConversion();\r\n        this._handleInterceptionAttempt(ballContactObj);\r\n    }\r\n    _onBallContactOffense(ballContactObj) {\r\n        if (this.stateExists(\"curvePass\"))\r\n            Ball_1.default.setGravity({ y: 0 });\r\n        if (this.stateExists(\"ballDeflected\"))\r\n            return this._handleBallContactDuringInterception(ballContactObj);\r\n        const { player } = ballContactObj;\r\n        const { id } = player;\r\n        const isQBContact = id === this.getQuarterback().id;\r\n        if (isQBContact)\r\n            return this._handleBallContactQuarterback(ballContactObj);\r\n        const touchButNoQbPass = this.stateExists(\"ballPassed\") === false;\r\n        if (touchButNoQbPass)\r\n            return this._handleIllegalTouch(ballContactObj);\r\n        this._handleCatch(ballContactObj);\r\n    }\r\n}\r\nexports[\"default\"] = SnapEvents;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/plays/play_events/Snap.events.ts?");

/***/ }),

/***/ "./src/room/room.config.ts":
/*!*********************************!*\
  !*** ./src/room/room.config.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DEBUG_MODE = void 0;\r\nconst roomConfig = {\r\n    roomName: \"🏈 HAXFOOTBALL 🏈\",\r\n    maxPlayers: 16,\r\n    noPlayer: true,\r\n    public: true,\r\n    token: \"thr1.AAAAAGOyKXbpCN6ICqn8fw.FyoJE1-T5ns\",\r\n};\r\nexports.DEBUG_MODE = false;\r\nexports[\"default\"] = roomConfig;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/room.config.ts?");

/***/ }),

/***/ "./src/room/roomStructures/Ball.ts":
/*!*****************************************!*\
  !*** ./src/room/roomStructures/Ball.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nconst __1 = __importDefault(__webpack_require__(/*! .. */ \"./src/room/index.ts\"));\r\nconst types_1 = __webpack_require__(/*! ../utils/types */ \"./src/room/utils/types.ts\");\r\nclass Ball {\r\n    constructor() {\r\n        this.IMMOVABLE_INV_MASS = 0.00001;\r\n    }\r\n    getPosition() {\r\n        return __1.default.getBallPosition();\r\n    }\r\n    getSpeed() {\r\n        const { xspeed, yspeed } = __1.default.getDiscProperties(map_1.DISC_IDS.BALL);\r\n        return {\r\n            xspeed,\r\n            yspeed,\r\n        };\r\n    }\r\n    setPosition(position) {\r\n        const { x, y = 0 } = position;\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.BALL, {\r\n            x: x,\r\n            y: y,\r\n            xspeed: 0,\r\n            yspeed: 0,\r\n            ygravity: 0,\r\n        });\r\n        return this;\r\n    }\r\n    suppress() {\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.BALL, {\r\n            invMass: this.IMMOVABLE_INV_MASS,\r\n            xspeed: 0,\r\n            yspeed: 0,\r\n        });\r\n        return this;\r\n    }\r\n    release() {\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.BALL, {\r\n            invMass: 1,\r\n            xspeed: 0,\r\n            yspeed: 0,\r\n        });\r\n        return this;\r\n    }\r\n    makeImmovableButKeepSpeed() {\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.BALL, {\r\n            invMass: this.IMMOVABLE_INV_MASS,\r\n        });\r\n        return this;\r\n    }\r\n    score(teamEndzoneToScore) {\r\n        const x = teamEndzoneToScore === types_1.TEAMS.BLUE\r\n            ? map_1.MAP_POINTS.BLUE_SCORE_LINE\r\n            : map_1.MAP_POINTS.RED_SCORE_LINE;\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.BALL, {\r\n            x: x,\r\n            y: -200,\r\n            xspeed: 0,\r\n            yspeed: 0,\r\n            ygravity: 0.015,\r\n            invMass: this.IMMOVABLE_INV_MASS,\r\n        });\r\n    }\r\n    setGravity({ x, y }) {\r\n        if (typeof x === \"number\") {\r\n            __1.default.setDiscProperties(map_1.DISC_IDS.BALL, {\r\n                xgravity: x,\r\n            });\r\n        }\r\n        if (typeof y === \"number\") {\r\n            __1.default.setDiscProperties(map_1.DISC_IDS.BALL, {\r\n                ygravity: y,\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n    setProperties(properties) {\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.BALL, properties);\r\n    }\r\n    removeGravity() {\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.BALL, {\r\n            invMass: 1,\r\n            xspeed: 0,\r\n            ygravity: 0,\r\n        });\r\n        return this;\r\n    }\r\n}\r\nexports[\"default\"] = new Ball();\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/roomStructures/Ball.ts?");

/***/ }),

/***/ "./src/room/roomStructures/Chat.ts":
/*!*****************************************!*\
  !*** ./src/room/roomStructures/Chat.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MESSAGE_STYLE = void 0;\r\nconst __1 = __importDefault(__webpack_require__(/*! .. */ \"./src/room/index.ts\"));\r\nconst MessageFormatter_1 = __importDefault(__webpack_require__(/*! ../structures/MessageFormatter */ \"./src/room/structures/MessageFormatter.ts\"));\r\nconst colors_1 = __importDefault(__webpack_require__(/*! ../utils/colors */ \"./src/room/utils/colors.ts\"));\r\nconst Icons_1 = __importDefault(__webpack_require__(/*! ../utils/Icons */ \"./src/room/utils/Icons.ts\"));\r\nexports.MESSAGE_STYLE = {\r\n    Bold: \"bold\",\r\n    Italic: \"italic\",\r\n    Small: \"small\",\r\n    Small_bold: \"small-bold\",\r\n    Small_italic: \"small-italic\",\r\n};\r\nclass Chat {\r\n    constructor() {\r\n        this.PREFIX = {\r\n            TEAMCHAT: \"t\",\r\n            COMMAND: \"!\",\r\n        };\r\n        this.silenced = false;\r\n    }\r\n    _getAutoSizedStyle(message, originalStyle) {\r\n        const AUTO_SIZE_MAX_STR_LENGTH = 100;\r\n        return message.length >= AUTO_SIZE_MAX_STR_LENGTH\r\n            ? exports.MESSAGE_STYLE.Small\r\n            : originalStyle;\r\n    }\r\n    _sendMessage(message, msgOptions) {\r\n        const { icon = \"\", info = \"\", id = null, color = null, style = null, sound = null, autoSize = true, } = msgOptions;\r\n        const messageStr = [icon, info, message]\r\n            .map((str) => (str.length > 0 ? str + \" \" : str))\r\n            .join(\"\")\r\n            .trim();\r\n        const adjustedStyle = style === null && autoSize\r\n            ? this._getAutoSizedStyle(message, style)\r\n            : style;\r\n        __1.default.sendAnnouncement(messageStr, id, color, adjustedStyle, sound);\r\n    }\r\n    send(msg, msgOptions = {}) {\r\n        this._sendMessage(msg, msgOptions);\r\n    }\r\n    sendMessageMaybeWithClock(message, time) {\r\n        const msgMaybeWithTime = MessageFormatter_1.default.formatMessageMaybeWithClock(message, time);\r\n        this._sendMessage(msgMaybeWithTime, {});\r\n    }\r\n    sendSuccess(message, options = {}) {\r\n        options.icon = Icons_1.default.GreenCheck;\r\n        options.color = colors_1.default.Lime;\r\n        this._sendMessage(message, options);\r\n    }\r\n    sendAnnouncement(message, options = {}) {\r\n        options.color = colors_1.default.Orange;\r\n        this._sendMessage(message, options);\r\n    }\r\n    sendNotification(message, options = {}) {\r\n        options.icon = Icons_1.default.Bell;\r\n        options.sound = 2;\r\n        this._sendMessage(message, options);\r\n    }\r\n    sendWarning(message, options = {}) {\r\n        options.icon = Icons_1.default.OrangeTriangle;\r\n        options.sound = 2;\r\n        this._sendMessage(message, options);\r\n    }\r\n    sendError(message, options = {}) {\r\n        options.icon = Icons_1.default.Exclamation;\r\n        options.color = colors_1.default.LightRed;\r\n        this._sendMessage(message, options);\r\n    }\r\n    sendBotError(message, options = {}) {\r\n        options.icon = Icons_1.default.Construction;\r\n        options.color = colors_1.default.Yellow;\r\n        this._sendMessage(message, options);\r\n    }\r\n}\r\nexports[\"default\"] = new Chat();\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/roomStructures/Chat.ts?");

/***/ }),

/***/ "./src/room/roomStructures/ChatHandler.ts":
/*!************************************************!*\
  !*** ./src/room/roomStructures/ChatHandler.ts ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ./Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst GameCommandHandler_1 = __importStar(__webpack_require__(/*! ../commands/GameCommandHandler */ \"./src/room/commands/GameCommandHandler.ts\"));\r\nconst GameCommands_1 = __importDefault(__webpack_require__(/*! ../commands/GameCommands */ \"./src/room/commands/GameCommands.ts\"));\r\nconst CommandHandler_1 = __importStar(__webpack_require__(/*! ../commands/CommandHandler */ \"./src/room/commands/CommandHandler.ts\"));\r\nconst CommandMessage_1 = __importDefault(__webpack_require__(/*! ../classes/CommandMessage */ \"./src/room/classes/CommandMessage.ts\"));\r\nconst colors_1 = __importDefault(__webpack_require__(/*! ../utils/colors */ \"./src/room/utils/colors.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ./Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst types_1 = __webpack_require__(/*! ../utils/types */ \"./src/room/utils/types.ts\");\r\nclass ChatHandler {\r\n    static handleOffensiveMessage(chatObj) {\r\n        return false;\r\n    }\r\n    static maybeHandleTeamChat(chatObj) {\r\n        if (chatObj.author.team === types_1.TEAMS.SPECTATORS)\r\n            return false;\r\n        const teamPlayers = chatObj.author.team === types_1.TEAMS.RED\r\n            ? Room_1.default.players.getRed()\r\n            : Room_1.default.players.getBlue();\r\n        const teamColor = chatObj.author.team === types_1.TEAMS.RED\r\n            ? colors_1.default.HaxballRed\r\n            : colors_1.default.HaxballBlue;\r\n        const msg = chatObj.content.substring(Chat_1.default.PREFIX.TEAMCHAT.length).trim();\r\n        const msgFormatted = `${chatObj.author.shortName}: ${msg}`;\r\n        teamPlayers.forEach((player) => {\r\n            Chat_1.default.send(msgFormatted, { color: teamColor, id: player.id });\r\n        });\r\n        return false;\r\n    }\r\n    static handlePlayerMuted(chatObj) {\r\n        chatObj.reply(\"You are muted\");\r\n        return false;\r\n    }\r\n    static handleChatSilenced(chatObj) {\r\n        chatObj.reply(\"The chat is silenced\");\r\n        return false;\r\n    }\r\n    static maybeHandleCommand(chatObj) {\r\n        const cmdMessage = new CommandMessage_1.default(chatObj.content, chatObj.author);\r\n        const cmdHandler = new CommandHandler_1.default(cmdMessage);\r\n        try {\r\n            const commandExists = cmdHandler.loadCommand();\r\n            if (!commandExists)\r\n                throw new CommandHandler_1.CommandError(`Command ${cmdMessage.commandName} does not exist`);\r\n            cmdHandler.validateAndRun();\r\n        }\r\n        catch (error) {\r\n            const isCommandError = error instanceof CommandHandler_1.CommandError;\r\n            if (isCommandError) {\r\n                const commandError = error;\r\n                chatObj.replyError(commandError.errorMsg);\r\n            }\r\n            else {\r\n                Chat_1.default.sendBotError(error.message);\r\n            }\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n    static handleGameCommand(chatObj) {\r\n        const gameCommand = GameCommands_1.default.get(chatObj.content.toLowerCase());\r\n        try {\r\n            new GameCommandHandler_1.default(chatObj, gameCommand).validateAndRun();\r\n        }\r\n        catch (error) {\r\n            const isGameCommandError = error instanceof GameCommandHandler_1.GameCommandError;\r\n            if (isGameCommandError) {\r\n                const gameError = error;\r\n                if (gameError.sendToPlayer) {\r\n                    chatObj.replyError(gameError.message);\r\n                }\r\n            }\r\n            else {\r\n                Chat_1.default.sendBotError(error.message);\r\n            }\r\n            return false;\r\n        }\r\n        return gameCommand.showCommand;\r\n    }\r\n}\r\nexports[\"default\"] = ChatHandler;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/roomStructures/ChatHandler.ts?");

/***/ }),

/***/ "./src/room/roomStructures/Greeter.ts":
/*!********************************************!*\
  !*** ./src/room/roomStructures/Greeter.ts ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ./Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst colors_1 = __importDefault(__webpack_require__(/*! ../utils/colors */ \"./src/room/utils/colors.ts\"));\r\nclass Greeter {\r\n    static greetPlayer(player) {\r\n        Chat_1.default.send(`!rules for rules, !stats for stats`, {\r\n            id: player.id,\r\n            color: colors_1.default.LightBlue,\r\n        });\r\n    }\r\n}\r\nexports[\"default\"] = Greeter;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/roomStructures/Greeter.ts?");

/***/ }),

/***/ "./src/room/roomStructures/Marquee.ts":
/*!********************************************!*\
  !*** ./src/room/roomStructures/Marquee.ts ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ./Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nconst ANNOUNCEMENTS = [\r\n    {\r\n        text: `!stats or !stats [name] to view your stats or that of another player`,\r\n        weight: 0.3,\r\n    },\r\n    {\r\n        text: `Join the HFL Discord discord.gg/VdrD2p7`,\r\n        weight: 0.3,\r\n    },\r\n];\r\nclass Marquee {\r\n    static run() {\r\n        const TWO_MINUTES_IN_MS = 140000;\r\n        setInterval(() => __awaiter(this, void 0, void 0, function* () {\r\n            const announcementObj = (0, utils_1.randFromArrayWeighted)(ANNOUNCEMENTS);\r\n            const announcementText = announcementObj.text;\r\n            Chat_1.default.send(announcementText, { sound: 0 });\r\n        }), TWO_MINUTES_IN_MS);\r\n    }\r\n}\r\nexports[\"default\"] = Marquee;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/roomStructures/Marquee.ts?");

/***/ }),

/***/ "./src/room/roomStructures/PlayerRecorder.ts":
/*!***************************************************!*\
  !*** ./src/room/roomStructures/PlayerRecorder.ts ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst __1 = __importDefault(__webpack_require__(/*! .. */ \"./src/room/index.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ./Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst Collection_1 = __importDefault(__webpack_require__(/*! ../utils/Collection */ \"./src/room/utils/Collection.ts\"));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nconst types_1 = __webpack_require__(/*! ../utils/types */ \"./src/room/utils/types.ts\");\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nconst getLastKeyInMap = (map) => [...map][map.size - 1] ? [...map][map.size - 1][0] : null;\r\nclass PlayerRecorder {\r\n    constructor() {\r\n        this.records = new Collection_1.default();\r\n        this._playersStatic = {\r\n            fielded: [],\r\n            offense: [],\r\n            defense: [],\r\n        };\r\n        this.playerPositionsMap = new Map();\r\n    }\r\n    savePlayerPositions() {\r\n        this._playersStatic.fielded.forEach((player) => {\r\n            const { position } = (0, haxUtils_1.getPlayerDiscProperties)(player.id);\r\n            this.playerPositionsMap.set(player.id, {\r\n                team: player.team,\r\n                position: position,\r\n            });\r\n        });\r\n    }\r\n    updateStaticPlayerList(offensiveTeam) {\r\n        const players = __1.default.getPlayerList();\r\n        const fielded = players.filter((player) => player.team !== 0);\r\n        const [offense, defense] = (0, utils_1.partition)(fielded, (player) => player.team === offensiveTeam);\r\n        this._playersStatic = {\r\n            fielded: fielded,\r\n            offense: offense,\r\n            defense: defense,\r\n        };\r\n    }\r\n    getFielded() {\r\n        return this._playersStatic.fielded;\r\n    }\r\n    getDefense() {\r\n        return this._playersStatic.defense;\r\n    }\r\n    getOffense() {\r\n        return this._playersStatic.offense;\r\n    }\r\n    getOffenseDefense() {\r\n        return {\r\n            offense: this._playersStatic.offense,\r\n            defense: this._playersStatic.defense,\r\n        };\r\n    }\r\n    handlePlayerTeamChange(player, time) {\r\n        const { playerRecord, hasPlayerRecord } = this._getPlayerRecordSubIn(player.id);\r\n        if (hasPlayerRecord === false)\r\n            return this.subIn(player, time);\r\n        if (player.team === types_1.TEAMS.SPECTATORS)\r\n            return this.subOut(player, time, {});\r\n        const isSwappingTeams = playerRecord.substitutions.length !== 0 &&\r\n            playerRecord.substitutions[playerRecord.substitutions.length - 1]\r\n                .toTeam !== types_1.TEAMS.SPECTATORS;\r\n        if (isSwappingTeams) {\r\n            this.subOut(player, time, {});\r\n            return this.subIn(player, time);\r\n        }\r\n        return this.subIn(player, time);\r\n    }\r\n    getPlayerRecordByPlayerId(playerId) {\r\n        return this.records.findOne({\r\n            ids: [playerId],\r\n        });\r\n    }\r\n    subIn(player, time) {\r\n        var _a;\r\n        const { playerRecord, hasPlayerRecord, playerProfile } = this._getPlayerRecordSubIn(player.id);\r\n        if (hasPlayerRecord) {\r\n            const lastSubstitution = playerRecord.substitutions[playerRecord.substitutions.length - 1];\r\n            if ((lastSubstitution === null || lastSubstitution === void 0 ? void 0 : lastSubstitution.type) === \"IN\")\r\n                throw Error(`Player ${playerProfile.name} was attempted to be subbed in but is already on the field`);\r\n            playerRecord.substitutions.push({\r\n                time,\r\n                type: \"IN\",\r\n                fromTeam: playerRecord.team,\r\n                toTeam: player.team,\r\n            });\r\n            playerRecord.team = player.team;\r\n            playerRecord.ids = [...playerRecord.ids, player.id];\r\n            playerRecord.name = player.name;\r\n            return playerRecord.recordId;\r\n        }\r\n        const lastIdInRecord = (_a = getLastKeyInMap(this.records)) !== null && _a !== void 0 ? _a : 0;\r\n        const newRecordId = lastIdInRecord + 1;\r\n        this.records.set(newRecordId, {\r\n            auth: playerProfile.auth,\r\n            recordId: newRecordId,\r\n            ids: [playerProfile.id],\r\n            name: playerProfile.name,\r\n            ip: playerProfile.ip,\r\n            team: player.team,\r\n            substitutions: [\r\n                { time, type: \"IN\", fromTeam: types_1.TEAMS.SPECTATORS, toTeam: player.team },\r\n            ],\r\n            wasAtEndOfGame: false,\r\n        });\r\n        return newRecordId;\r\n    }\r\n    subOut(player, time, subOutOptions) {\r\n        const playerRecord = this._getPlayerRecordSubOut(player.id);\r\n        const { isAtGameEnd = false, wasLeave = false } = subOutOptions;\r\n        if (playerRecord.substitutions.length === 0)\r\n            throw Error(`Player ${playerRecord.name} was subbed out, but did not have a record of being subbed in`);\r\n        playerRecord.substitutions.push({\r\n            time,\r\n            type: \"OUT\",\r\n            fromTeam: playerRecord.team,\r\n            toTeam: types_1.TEAMS.SPECTATORS,\r\n            wasLeave,\r\n        });\r\n        if (isAtGameEnd) {\r\n            playerRecord.wasAtEndOfGame = true;\r\n        }\r\n        return playerRecord.recordId;\r\n    }\r\n    _getPlayerRecordSubOut(playerId) {\r\n        const playerRecord = this.records.findOne({ ids: [playerId] });\r\n        if (!playerRecord)\r\n            throw Error(`No player record found with ID ${playerId}`);\r\n        return playerRecord;\r\n    }\r\n    _getPlayerRecordSubIn(playerId) {\r\n        const playerProfile = Room_1.default.players.playerCollection.get(playerId);\r\n        if (!playerProfile)\r\n            throw Error(`No player profile found for id ${playerId}`);\r\n        const playerRecord = this.records.findOne({ auth: playerProfile.auth });\r\n        const hasPlayerRecord = Boolean(playerRecord);\r\n        return { playerRecord, hasPlayerRecord, playerProfile };\r\n    }\r\n}\r\nexports[\"default\"] = PlayerRecorder;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/roomStructures/PlayerRecorder.ts?");

/***/ }),

/***/ "./src/room/roomStructures/Players/Mutes.ts":
/*!**************************************************!*\
  !*** ./src/room/roomStructures/Players/Mutes.ts ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Collection_1 = __importDefault(__webpack_require__(/*! ../../utils/Collection */ \"./src/room/utils/Collection.ts\"));\r\nclass MuteManager {\r\n    constructor() {\r\n        this.mutedCollection = new Collection_1.default();\r\n    }\r\n    addMute(playerBeingMuted) {\r\n        const mutedInfo = {\r\n            name: playerBeingMuted.name,\r\n            auth: playerBeingMuted.auth,\r\n            id: playerBeingMuted.id,\r\n        };\r\n        this.mutedCollection.set(playerBeingMuted.auth, mutedInfo);\r\n    }\r\n    removeMute(auth) {\r\n        this.mutedCollection.delete(auth);\r\n    }\r\n}\r\nexports[\"default\"] = MuteManager;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/roomStructures/Players/Mutes.ts?");

/***/ }),

/***/ "./src/room/roomStructures/Players/Players.ts":
/*!****************************************************!*\
  !*** ./src/room/roomStructures/Players/Players.ts ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst __1 = __importDefault(__webpack_require__(/*! ../.. */ \"./src/room/index.ts\"));\r\nconst Player_1 = __importDefault(__webpack_require__(/*! ../../classes/Player */ \"./src/room/classes/Player.ts\"));\r\nconst Collection_1 = __importDefault(__webpack_require__(/*! ../../utils/Collection */ \"./src/room/utils/Collection.ts\"));\r\nconst types_1 = __webpack_require__(/*! ../../utils/types */ \"./src/room/utils/types.ts\");\r\nconst Mutes_1 = __importDefault(__webpack_require__(/*! ./Mutes */ \"./src/room/roomStructures/Players/Mutes.ts\"));\r\nclass PlayerManager {\r\n    constructor() {\r\n        this.playerCollection = new Collection_1.default();\r\n        this.muted = new Mutes_1.default();\r\n    }\r\n    findOne(searchQuery) {\r\n        return this.playerCollection.findOne(searchQuery);\r\n    }\r\n    find(searchQuery) {\r\n        return this.playerCollection.find(searchQuery);\r\n    }\r\n    getByName(name) {\r\n        const players = this.getPlayable();\r\n        const playersExactName = players.find((player) => player.lowerName === name);\r\n        if (playersExactName)\r\n            return playersExactName;\r\n        const playersMatchingName = players.filter((player) => player.lowerName.startsWith(name));\r\n        if (playersMatchingName.length > 1)\r\n            return -1;\r\n        if (playersMatchingName.length === 0)\r\n            return null;\r\n        return playersMatchingName[0];\r\n    }\r\n    createAndAdd(player) {\r\n        const playerProfile = this._createPlayer(player);\r\n        this.playerCollection.set(player.id, playerProfile);\r\n        return playerProfile;\r\n    }\r\n    delete(player) {\r\n        const playerProfile = this.playerCollection.get(player.id);\r\n        if (!playerProfile)\r\n            return null;\r\n        this.playerCollection.delete(player.id);\r\n        return playerProfile;\r\n    }\r\n    getPlayable() {\r\n        return this._sortByOrderInPlayerList(this.playerCollection.find({ canPlay: true, isAFK: false }));\r\n    }\r\n    getPlayableSpecs() {\r\n        return this._sortByOrderInPlayerList(this.playerCollection.find({\r\n            canPlay: true,\r\n            team: types_1.TEAMS.SPECTATORS,\r\n            isAFK: false,\r\n        }));\r\n    }\r\n    getRed() {\r\n        return this._sortByOrderInPlayerList(this.playerCollection.find({ team: types_1.TEAMS.RED }));\r\n    }\r\n    getBlue() {\r\n        return this._sortByOrderInPlayerList(this.playerCollection.find({ team: types_1.TEAMS.BLUE }));\r\n    }\r\n    getFielded() {\r\n        return this._sortByOrderInPlayerList(this.playerCollection\r\n            .find()\r\n            .filter((player) => player.team !== types_1.TEAMS.SPECTATORS));\r\n    }\r\n    _createPlayer(player) {\r\n        return new Player_1.default(player);\r\n    }\r\n    _sortByOrderInPlayerList(playerArr) {\r\n        const clientPlayerList = __1.default.getPlayerList();\r\n        const idToPositionMap = clientPlayerList.reduce((acc, currPlayer) => {\r\n            acc[currPlayer.id] = clientPlayerList.findIndex((player) => player.id === currPlayer.id);\r\n            return acc;\r\n        }, {});\r\n        return playerArr.sort((a, b) => {\r\n            return idToPositionMap[a.id] - idToPositionMap[b.id];\r\n        });\r\n    }\r\n}\r\nexports[\"default\"] = PlayerManager;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/roomStructures/Players/Players.ts?");

/***/ }),

/***/ "./src/room/roomStructures/Room.ts":
/*!*****************************************!*\
  !*** ./src/room/roomStructures/Room.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst Game_1 = __importDefault(__webpack_require__(/*! ../classes/Game */ \"./src/room/classes/Game.ts\"));\r\nconst Kickoff_1 = __importDefault(__webpack_require__(/*! ../plays/Kickoff */ \"./src/room/plays/Kickoff.ts\"));\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nconst Marquee_1 = __importDefault(__webpack_require__(/*! ./Marquee */ \"./src/room/roomStructures/Marquee.ts\"));\r\nconst Players_1 = __importDefault(__webpack_require__(/*! ./Players/Players */ \"./src/room/roomStructures/Players/Players.ts\"));\r\nclass RoomManager {\r\n    constructor() {\r\n        this.sessionId = (0, utils_1.getRandomChars)(4).toLowerCase();\r\n        this.roomId = 1;\r\n        this.players = new Players_1.default();\r\n        this._game = null;\r\n        this._isBotOn = true;\r\n        this._playerTestingId = 1;\r\n    }\r\n    onRoomLoad() {\r\n        Marquee_1.default.run();\r\n        console.log(`Admin Code: ${this.sessionId}`);\r\n    }\r\n    get game() {\r\n        return this._game;\r\n    }\r\n    get isBotOn() {\r\n        return this._isBotOn;\r\n    }\r\n    turnBotOff() {\r\n        this._isBotOn = false;\r\n    }\r\n    turnBotOn() {\r\n        this._isBotOn = true;\r\n    }\r\n    getPlayerTestingId() {\r\n        return this._playerTestingId;\r\n    }\r\n    setPlayerTestingId(id) {\r\n        this._playerTestingId = id;\r\n    }\r\n    getPlay() {\r\n        if (!this.game.play)\r\n            throw new Error(\"Game Error: Play is not defined\");\r\n        return this.game.play;\r\n    }\r\n    startNewGame() {\r\n        this._game = new Game_1.default();\r\n        const fieldedPlayers = this.players.getFielded();\r\n        this._game.players.updateStaticPlayerList(this.game.offenseTeamId);\r\n        fieldedPlayers.forEach((player) => {\r\n            const recordId = this._game.players.subIn(player.playerObject, 0);\r\n            this._game.stats.maybeCreateStatProfile(recordId);\r\n        });\r\n        this.game.setPlay(new Kickoff_1.default(0), null);\r\n    }\r\n}\r\nexports[\"default\"] = new RoomManager();\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/roomStructures/Room.ts?");

/***/ }),

/***/ "./src/room/structures/DistanceCalculator.ts":
/*!***************************************************!*\
  !*** ./src/room/structures/DistanceCalculator.ts ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DistanceConverter = void 0;\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nconst types_1 = __webpack_require__(/*! ../utils/types */ \"./src/room/utils/types.ts\");\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nconst MapReferee_1 = __importDefault(__webpack_require__(/*! ./MapReferee */ \"./src/room/structures/MapReferee.ts\"));\r\nclass DistanceConverter {\r\n    static toYardLine(distance) {\r\n        return (map_1.MAP_POINTS.HALF_FIELD - Math.abs(distance)) / map_1.MAP_POINTS.YARD;\r\n    }\r\n    static toYard(distance) {\r\n        return distance / map_1.MAP_POINTS.YARD;\r\n    }\r\n    static yardToDistance(yard) {\r\n        return yard * map_1.MAP_POINTS.YARD;\r\n    }\r\n}\r\nexports.DistanceConverter = DistanceConverter;\r\nclass DistanceCalculator {\r\n    constructor(initialCalculation = 0) {\r\n        this._calculation = initialCalculation;\r\n    }\r\n    calcDifference2D(p1, p2) {\r\n        this._calculation = Math.abs(p1 - p2);\r\n        return this;\r\n    }\r\n    calcDifference3D(p1, p2) {\r\n        const d1 = p1.x - p2.x;\r\n        const d2 = p1.y - p2.y;\r\n        this._calculation = Math.hypot(d1, d2);\r\n        return this;\r\n    }\r\n    calcNetDifferenceByTeam(p1, p2, teamId) {\r\n        const difference = p1 - p2;\r\n        if (teamId === types_1.TEAMS.RED) {\r\n            if (difference > 0) {\r\n                this._calculation = -difference;\r\n            }\r\n            if (difference < 0) {\r\n                this._calculation = Math.abs(difference);\r\n            }\r\n        }\r\n        else {\r\n            this._calculation = difference;\r\n        }\r\n        return this;\r\n    }\r\n    subtractByTeam(p1, p2, teamId) {\r\n        this._calculation = teamId === types_1.TEAMS.RED ? p1 - p2 : p1 + p2;\r\n        return this;\r\n    }\r\n    addByTeam(p1, p2, teamId) {\r\n        this._calculation = teamId === types_1.TEAMS.RED ? p1 + p2 : p1 - p2;\r\n        return this;\r\n    }\r\n    constrainToEndzonePoints() {\r\n        const constrained = (0, utils_1.limitNumberWithinRange)(this._calculation, map_1.MAP_POINTS.RED_GOAL_LINE, map_1.MAP_POINTS.BLUE_GOAL_LINE);\r\n        this._calculation = constrained;\r\n        return this;\r\n    }\r\n    roundUpToYardIfBetweenTeamEndzoneAndOneYard(teamId) {\r\n        const teamsEndzone = MapReferee_1.default.getTeamEndzone(teamId);\r\n        const oneYardLinePoint = new DistanceCalculator()\r\n            .addByTeam(teamsEndzone, map_1.MAP_POINTS.YARD, teamId)\r\n            .calculate();\r\n        const isBehindOneYardLine = MapReferee_1.default.checkIfBehind(this._calculation, oneYardLinePoint, teamId);\r\n        const isInFrontOfEnzone = MapReferee_1.default.checkIfInFront(this._calculation, teamsEndzone, teamId);\r\n        const isBetweenZeroAndOneYardLine = isBehindOneYardLine && isInFrontOfEnzone;\r\n        if (isBetweenZeroAndOneYardLine) {\r\n            this._calculation = oneYardLinePoint;\r\n        }\r\n        return this;\r\n    }\r\n    roundToYardByTeam(teamId) {\r\n        const { YARD } = map_1.MAP_POINTS;\r\n        this._calculation =\r\n            teamId === types_1.TEAMS.RED\r\n                ? YARD * Math.floor(this._calculation / YARD)\r\n                : YARD * Math.ceil(this._calculation / YARD);\r\n        return this;\r\n    }\r\n    calculate() {\r\n        return this._calculation;\r\n    }\r\n    calculateAndConvert() {\r\n        return {\r\n            distance: this._calculation,\r\n            yards: DistanceConverter.toYard(this._calculation),\r\n            yardLine: DistanceConverter.toYardLine(this._calculation),\r\n        };\r\n    }\r\n}\r\nexports[\"default\"] = DistanceCalculator;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/structures/DistanceCalculator.ts?");

/***/ }),

/***/ "./src/room/structures/DownAndDistanceFormatter.ts":
/*!*********************************************************!*\
  !*** ./src/room/structures/DownAndDistanceFormatter.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nconst types_1 = __webpack_require__(/*! ../utils/types */ \"./src/room/utils/types.ts\");\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nclass DownAndDistanceFormatter {\r\n    constructor() {\r\n        this.formatPositionToMapHalf = (x) => {\r\n            if (x > map_1.MAP_POINTS.KICKOFF)\r\n                return \"BLUE \";\r\n            if (x < map_1.MAP_POINTS.KICKOFF)\r\n                return \"RED \";\r\n            return \"\";\r\n        };\r\n        this.formatPositionToMapHalfInt = (x) => {\r\n            if (x > map_1.MAP_POINTS.KICKOFF)\r\n                return types_1.TEAMS.BLUE;\r\n            return types_1.TEAMS.RED;\r\n        };\r\n    }\r\n    formatRedZonePenalties(currentRedZonePenalties) {\r\n        if (currentRedZonePenalties === 0)\r\n            return \"\";\r\n        return ` [${currentRedZonePenalties}/3]`;\r\n    }\r\n    formatDown(currentDown) {\r\n        return (0, utils_1.toOrdinalSuffix)(currentDown);\r\n    }\r\n    formatYardsToGain(lineToGainPoint, lineToGainYards) {\r\n        if (lineToGainPoint <= map_1.MAP_POINTS.RED_GOAL_LINE ||\r\n            lineToGainPoint >= map_1.MAP_POINTS.BLUE_GOAL_LINE)\r\n            return \"GOAL\";\r\n        return lineToGainYards;\r\n    }\r\n}\r\nexports[\"default\"] = new DownAndDistanceFormatter();\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/structures/DownAndDistanceFormatter.ts?");

/***/ }),

/***/ "./src/room/structures/GameReferee.ts":
/*!********************************************!*\
  !*** ./src/room/structures/GameReferee.ts ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nconst types_1 = __webpack_require__(/*! ../utils/types */ \"./src/room/utils/types.ts\");\r\nconst MapReferee_1 = __importDefault(__webpack_require__(/*! ./MapReferee */ \"./src/room/structures/MapReferee.ts\"));\r\nconst PreSetCalculators_1 = __importDefault(__webpack_require__(/*! ./PreSetCalculators */ \"./src/room/structures/PreSetCalculators.ts\"));\r\nclass GameReferee {\r\n    static checkIfSafetyBall(ballPosition, team) {\r\n        return MapReferee_1.default.getEndZonePositionIsIn(ballPosition) === team;\r\n    }\r\n    static checkIfSack(qbPosition, losX, offenseTeamId) {\r\n        return MapReferee_1.default.checkIfBehind(qbPosition.x, losX, offenseTeamId);\r\n    }\r\n    static checkIfTouchbackBall(adjustedBallPosition, teamId) {\r\n        const endZone = MapReferee_1.default.getEndZonePositionIsIn(adjustedBallPosition);\r\n        return endZone === teamId;\r\n    }\r\n    static checkIfTouchdown(rawPlayerPosition, teamId) {\r\n        const adjustedPlayerPosition = PreSetCalculators_1.default.adjustPlayerPositionFront(rawPlayerPosition, teamId);\r\n        const endZone = MapReferee_1.default.getEndZonePositionIsIn(adjustedPlayerPosition);\r\n        return Boolean(endZone) && endZone !== teamId;\r\n    }\r\n    static checkIfFieldGoalSuccessful(ballPosition, offenseTeamId) {\r\n        const { x, y } = ballPosition;\r\n        const { RED_FIELD_GOAL_LINE, BLUE_FIELD_GOAL_LINE, TOP_FG_POST, BOTTOM_FG_POST, } = map_1.MAP_POINTS;\r\n        const passesFgLine = offenseTeamId === types_1.TEAMS.RED\r\n            ? x > BLUE_FIELD_GOAL_LINE\r\n            : x < RED_FIELD_GOAL_LINE;\r\n        const betweenFGPosts = MapReferee_1.default.checkIfBetweenY(y, TOP_FG_POST, BOTTOM_FG_POST);\r\n        return passesFgLine && betweenFGPosts;\r\n    }\r\n    static checkIfInterceptionWithinTime(intTime, timeNow) {\r\n        const INTERCEPTION_TIME_LIMIT = 5;\r\n        const differenceBetweenIntTimeAndTimeNow = intTime - timeNow;\r\n        return differenceBetweenIntTimeAndTimeNow < INTERCEPTION_TIME_LIMIT;\r\n    }\r\n    static checkIfInterceptionSuccessful(ballPosition) {\r\n        const isBehindRedFG = MapReferee_1.default.checkIfBallBetweenFGPosts(ballPosition, types_1.TEAMS.RED);\r\n        const isBehindBlueFG = MapReferee_1.default.checkIfBallBetweenFGPosts(ballPosition, types_1.TEAMS.BLUE);\r\n        return isBehindRedFG || isBehindBlueFG;\r\n    }\r\n}\r\nexports[\"default\"] = GameReferee;\r\nGameReferee.checkIfSafetyOrTouchbackPlayer = (startPosition, endPosition, teamId) => {\r\n    const playEndedInEndzone = MapReferee_1.default.getEndZonePositionIsIn({\r\n        x: endPosition.x,\r\n        y: endPosition.y,\r\n    });\r\n    const playEndedInOwnEndzone = playEndedInEndzone && playEndedInEndzone === teamId;\r\n    if (!playEndedInOwnEndzone)\r\n        return {\r\n            isSafety: false,\r\n            isTouchback: false,\r\n        };\r\n    const startPositionInsideEndzone = Boolean(MapReferee_1.default.getEndZonePositionIsIn(startPosition));\r\n    if (startPositionInsideEndzone)\r\n        return {\r\n            isSafety: false,\r\n            isTouchback: true,\r\n        };\r\n    return {\r\n        isSafety: true,\r\n        isTouchback: false,\r\n    };\r\n};\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/structures/GameReferee.ts?");

/***/ }),

/***/ "./src/room/structures/MapReferee.ts":
/*!*******************************************!*\
  !*** ./src/room/structures/MapReferee.ts ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nconst types_1 = __webpack_require__(/*! ../utils/types */ \"./src/room/utils/types.ts\");\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nconst DistanceCalculator_1 = __importDefault(__webpack_require__(/*! ./DistanceCalculator */ \"./src/room/structures/DistanceCalculator.ts\"));\r\nconst PreSetCalculators_1 = __importDefault(__webpack_require__(/*! ./PreSetCalculators */ \"./src/room/structures/PreSetCalculators.ts\"));\r\nclass MapReferee {\r\n    constructor() {\r\n        this.getEndZonePositionIsIn = (position) => {\r\n            const { RED_GOAL_LINE, BLUE_GOAL_LINE } = map_1.MAP_POINTS;\r\n            if (position.x <= RED_GOAL_LINE)\r\n                return 1;\r\n            if (position.x >= BLUE_GOAL_LINE)\r\n                return 2;\r\n            return null;\r\n        };\r\n        this.checkIfBallOutOfBounds = (ballPosition) => {\r\n            const isOutOfBounds = this._checkIfOutOfBounds(ballPosition, map_1.MAP_POINTS.BALL_RADIUS);\r\n            return isOutOfBounds ? ballPosition : null;\r\n        };\r\n        this.getOpposingTeamEndzone = (teamId) => {\r\n            return teamId === types_1.TEAMS.RED\r\n                ? map_1.MAP_POINTS.BLUE_GOAL_LINE\r\n                : map_1.MAP_POINTS.RED_GOAL_LINE;\r\n        };\r\n    }\r\n    _checkIfOutOfBounds(objectToCheck, objectRadius) {\r\n        const { x, y } = objectToCheck;\r\n        const { topSideLine, botSideLine, redSideLine, blueSideLine } = PreSetCalculators_1.default.adjustMapCoordinatesForRadius(objectRadius);\r\n        return (y < topSideLine || y > botSideLine || x < redSideLine || x > blueSideLine);\r\n    }\r\n    findTeamPlayerOffside(players, team, losX) {\r\n        const offsidePlayer = players.find((player) => {\r\n            const { position } = (0, haxUtils_1.getPlayerDiscProperties)(player.id);\r\n            const { x } = PreSetCalculators_1.default.adjustPlayerPositionFront(position, team);\r\n            const isOnside = this.checkIfBehind(x, losX, team);\r\n            return !isOnside;\r\n        });\r\n        return offsidePlayer;\r\n    }\r\n    findTeamPlayerOffsideNoAdjust(players, team, pointToBeBehind) {\r\n        const offsidePlayer = players.find((player) => {\r\n            const { position: { x }, } = (0, haxUtils_1.getPlayerDiscProperties)(player.id);\r\n            const isOnside = this.checkIfBehind(x, pointToBeBehind, team);\r\n            return !isOnside;\r\n        });\r\n        return offsidePlayer;\r\n    }\r\n    findAllTeamPlayerOffside(players, team, pointToBeBehind) {\r\n        const offsidePlayers = players.filter((player) => {\r\n            const { position: { x }, } = (0, haxUtils_1.getPlayerDiscProperties)(player.id);\r\n            const adjustedX = new DistanceCalculator_1.default()\r\n                .addByTeam(x, map_1.MAP_POINTS.PLAYER_RADIUS, team)\r\n                .calculate();\r\n            const isOnside = this.checkIfBehind(adjustedX, pointToBeBehind, team);\r\n            return isOnside === false;\r\n        });\r\n        return offsidePlayers;\r\n    }\r\n    checkIfPlayerOutOfBounds(position) {\r\n        const isOutOfBounds = this._checkIfOutOfBounds(position, map_1.MAP_POINTS.PLAYER_RADIUS);\r\n        return isOutOfBounds ? position : null;\r\n    }\r\n    checkIfBallInFrontOfLOS(ballPosition, losX, offenseTeamId) {\r\n        const isInFront = this.checkIfInFront(ballPosition.x, losX, offenseTeamId);\r\n        return isInFront;\r\n    }\r\n    checkIfBallDragged(ballPositionOnSet, ballPosition, maxDragDistance) {\r\n        const dragAmount = new DistanceCalculator_1.default()\r\n            .calcDifference3D(ballPositionOnSet, ballPosition)\r\n            .calculate();\r\n        return dragAmount > maxDragDistance;\r\n    }\r\n    checkIfInRedzone(x) {\r\n        if (x >= map_1.MAP_POINTS.BLUE_REDZONE)\r\n            return types_1.TEAMS.BLUE;\r\n        if (x <= map_1.MAP_POINTS.RED_REDZONE)\r\n            return types_1.TEAMS.RED;\r\n        return null;\r\n    }\r\n    checkIfBehind(x1, x2, team) {\r\n        return team === types_1.TEAMS.RED ? x1 <= x2 : x1 >= x2;\r\n    }\r\n    checkIfInFront(x1, x2, team) {\r\n        return team === types_1.TEAMS.RED ? x1 >= x2 : x1 <= x2;\r\n    }\r\n    checkIfBallBetweenFGPosts(position, endzoneTeamId) {\r\n        const { topFG, botFG, redFG, blueFG } = PreSetCalculators_1.default.adjustMapCoordinatesForRadius(map_1.MAP_POINTS.BALL_RADIUS);\r\n        const satisfiesXAxis = endzoneTeamId === 1\r\n            ? this.checkIfBehind(position.x, redFG, 1)\r\n            : this.checkIfBehind(position.x, blueFG, 2);\r\n        const satisfiesYAxis = this.checkIfBetweenY(position.y, topFG, botFG);\r\n        return satisfiesXAxis && satisfiesYAxis;\r\n    }\r\n    checkIfBetweenY(yToCheck, yTop, yBottom) {\r\n        return yToCheck >= yTop && yToCheck <= yBottom;\r\n    }\r\n    checkIfWithinHash(position, radius) {\r\n        const { y } = position;\r\n        const { topHash, botHash } = PreSetCalculators_1.default.adjustMapCoordinatesForRadius(radius);\r\n        return y > topHash && y < botHash;\r\n    }\r\n    checkIfBallIsHeadedInIntTrajectory(ballXSpeed, ballPositionOnFirstTouch, ballPosition) {\r\n        const { TOP_FG_POST, BOTTOM_FG_POST, RED_SIDELINE, BLUE_SIDELINE } = map_1.MAP_POINTS;\r\n        const sideLineBallIsApproaching = ballXSpeed < 0 ? RED_SIDELINE : BLUE_SIDELINE;\r\n        const positionBallWillMeetTeamSideLine = (0, utils_1.extrapolateLine)(ballPositionOnFirstTouch, ballPosition, sideLineBallIsApproaching);\r\n        const willBeAGoodInt = this.checkIfBetweenY(positionBallWillMeetTeamSideLine.y, TOP_FG_POST, BOTTOM_FG_POST);\r\n        if (willBeAGoodInt)\r\n            return false;\r\n        return true;\r\n    }\r\n    checkIfBallIsMoving(BallSpeed) {\r\n        const BALL_DEAD_SPEED = 0.05;\r\n        const { xspeed } = BallSpeed;\r\n        return Math.abs(xspeed) > BALL_DEAD_SPEED;\r\n    }\r\n    getTeamEndzone(teamId) {\r\n        return teamId === types_1.TEAMS.RED\r\n            ? map_1.MAP_POINTS.RED_GOAL_LINE\r\n            : map_1.MAP_POINTS.BLUE_GOAL_LINE;\r\n    }\r\n    getClosestPositionToOtherPosition(positionArray, positionToCheck) {\r\n        return positionArray.reduce((prev, currPosition, index) => {\r\n            const distanceToPositionToCheck = new DistanceCalculator_1.default()\r\n                .calcDifference3D(currPosition, positionToCheck)\r\n                .calculate();\r\n            if (prev.distanceToPosition === null ||\r\n                distanceToPositionToCheck < prev.distanceToPosition)\r\n                return {\r\n                    index,\r\n                    distanceToPosition: distanceToPositionToCheck,\r\n                };\r\n            return prev;\r\n        }, {\r\n            index: -1,\r\n            distanceToPosition: null,\r\n        });\r\n    }\r\n    getNearestPlayerToPosition(players, position) {\r\n        const playerPositionsMapped = players\r\n            .map((player) => {\r\n            const { position } = (0, haxUtils_1.getPlayerDiscProperties)(player.id);\r\n            if (!position)\r\n                return null;\r\n            return position;\r\n        })\r\n            .filter((el) => el !== null);\r\n        if (playerPositionsMapped.length === 0)\r\n            return null;\r\n        const { index, distanceToPosition } = this.getClosestPositionToOtherPosition(playerPositionsMapped, position);\r\n        return { player: players[index], distanceToPosition };\r\n    }\r\n    getIntendedTargetStr(players, position, quarterbackId) {\r\n        const INTENDED_TARGET_TOLERANCE = map_1.MAP_POINTS.YARD * 3;\r\n        players = players.filter((player) => player.id !== quarterbackId);\r\n        const positionData = this.getNearestPlayerToPosition(players, position);\r\n        if (positionData === null || positionData.distanceToPosition === null)\r\n            return \"\";\r\n        const { player, distanceToPosition } = positionData;\r\n        if (player)\r\n            if (distanceToPosition > INTENDED_TARGET_TOLERANCE)\r\n                return \"\";\r\n        return `intended for ${player.name.trim()} `;\r\n    }\r\n    getMapHalfFromPoint(x) {\r\n        if (x > map_1.MAP_POINTS.KICKOFF)\r\n            return types_1.TEAMS.BLUE;\r\n        if (x < map_1.MAP_POINTS.KICKOFF)\r\n            return types_1.TEAMS.RED;\r\n        return 0;\r\n    }\r\n}\r\nexports[\"default\"] = new MapReferee();\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/structures/MapReferee.ts?");

/***/ }),

/***/ "./src/room/structures/MessageFormatter.ts":
/*!*************************************************!*\
  !*** ./src/room/structures/MessageFormatter.ts ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nconst DownAndDistanceFormatter_1 = __importDefault(__webpack_require__(/*! ./DownAndDistanceFormatter */ \"./src/room/structures/DownAndDistanceFormatter.ts\"));\r\nclass MessageFormatter {\r\n    static formatYardAndHalfStr(yard, x) {\r\n        const halfStr = DownAndDistanceFormatter_1.default.formatPositionToMapHalf(x);\r\n        return yard <= 0 ? `in the endzone` : `at the ${halfStr}${yard}`;\r\n    }\r\n    static formatNetYardsMessage(netYards) {\r\n        const yardMessage = (0, utils_1.plural)(netYards, \"yard\", \"yards\");\r\n        if (netYards > 0)\r\n            return `+${yardMessage}`;\r\n        if (netYards < 0)\r\n            return `-${yardMessage}`;\r\n        return `no gain`;\r\n    }\r\n    static formatNetYardsMessageFull(netYards) {\r\n        const yardMessage = (0, utils_1.plural)(Math.abs(netYards), \"yard\", \"yards\");\r\n        if (netYards > 0)\r\n            return `for a gain of ${yardMessage}`;\r\n        if (netYards < 0)\r\n            return `for a loss of ${yardMessage}`;\r\n        return \"for no gain\";\r\n    }\r\n    static formatMessageMaybeWithClock(message, time) {\r\n        const WARNING_TIME = 720;\r\n        return `${message} ${time >= WARNING_TIME ? (0, haxUtils_1.toClock)(time) : \"\"}`;\r\n    }\r\n    static formatMapSectionName(mapSection) {\r\n        const newNameMap = {\r\n            cornerBottom: \"bottom corner\",\r\n            cornerTop: \"top corner\",\r\n            deep: \"deep\",\r\n            middle: \"middle\",\r\n            backwards: \"backwards\",\r\n        };\r\n        return newNameMap[mapSection];\r\n    }\r\n}\r\nexports[\"default\"] = MessageFormatter;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/structures/MessageFormatter.ts?");

/***/ }),

/***/ "./src/room/structures/PenaltyDataGetter.ts":
/*!**************************************************!*\
  !*** ./src/room/structures/PenaltyDataGetter.ts ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nconst DistanceCalculator_1 = __importStar(__webpack_require__(/*! ./DistanceCalculator */ \"./src/room/structures/DistanceCalculator.ts\"));\r\nconst MapReferee_1 = __importDefault(__webpack_require__(/*! ./MapReferee */ \"./src/room/structures/MapReferee.ts\"));\r\nclass PenaltyDataGetter {\r\n    _getPenalty(penaltyName, player, penaltyData) {\r\n        const { time: timeNotAdjusted = 1 } = penaltyData;\r\n        const time = timeNotAdjusted === 0 ? 1 : timeNotAdjusted;\r\n        const playerName = (0, utils_1.truncateName)(player.name);\r\n        const PENALTIES = {\r\n            snapOutOfHashes: {\r\n                fullName: \"Illegal Snap, Out Of Hashes\",\r\n                message: `Illegal Snap, Out Of Hashes by ${playerName}, automatic loss of down`,\r\n                netYards: 0,\r\n                addDown: true,\r\n            },\r\n            snapOutOfBounds: {\r\n                fullName: \"Illegal Snap, Out of Bounds\",\r\n                message: `Illegal Snap, Out of Bounds, automatic loss of down`,\r\n                netYards: 0,\r\n                addDown: true,\r\n            },\r\n            offsidesOffense: {\r\n                fullName: \"Offsides Offense\",\r\n                message: `Offsides Offense ${playerName}, 10 yard penalty, repeat the down`,\r\n                netYards: -10,\r\n                addDown: false,\r\n            },\r\n            offsidesDefense: {\r\n                fullName: \"Offsides Defense\",\r\n                message: `Offsides Defense ${playerName}, 10 yard penalty, repeat the down`,\r\n                netYards: 10,\r\n                addDown: false,\r\n            },\r\n            snapDrag: {\r\n                fullName: \"Quarterback Drag\",\r\n                message: `Quarterback Drag, automatic loss of down`,\r\n                netYards: 0,\r\n                addDown: true,\r\n            },\r\n            crowding: {\r\n                fullName: \"Crowding\",\r\n                message: `Crowding ${playerName}, 15 yard penalty, repeat the down`,\r\n                netYards: 15,\r\n                addDown: false,\r\n                delay: true,\r\n            },\r\n            crowdAbuse: {\r\n                fullName: \"Crowd Abuse\",\r\n                message: `Crowd Abuse ${playerName}, 20 yard penalty, repeat the down`,\r\n                netYards: 20,\r\n                addDown: false,\r\n                delay: true,\r\n            },\r\n            illegalPass: {\r\n                fullName: \"Illegal Pass In Front Of Line Of Scrimmage\",\r\n                message: `Illegal Pass In Front Of Line Of Scrimmage, automatic loss of down`,\r\n                netYards: 0,\r\n                addDown: true,\r\n            },\r\n            fgDrag: {\r\n                fullName: \"Field Goal Kick Drag\",\r\n                message: `Field Goal Kick Drag, automatic loss of down`,\r\n                netYards: 0,\r\n                addDown: true,\r\n            },\r\n            puntDrag: {\r\n                fullName: \"Punt Kick Drag\",\r\n                message: `Punt Kick Drag, 10 yard penalty, repeat the down`,\r\n                netYards: -10,\r\n                addDown: false,\r\n            },\r\n            puntOffsidesOffense: {\r\n                fullName: \"Punt Offsides Offense\",\r\n                message: `Offsides Offense, 10 yard penalty, repeat the down`,\r\n                netYards: -10,\r\n                addDown: false,\r\n            },\r\n            illegalTouch: {\r\n                fullName: \"Illegal Touching Of The Ball\",\r\n                message: `Illegal Touching Of The Ball by ${playerName}, automatic loss of down`,\r\n                netYards: 0,\r\n                addDown: true,\r\n            },\r\n            illegalRun: {\r\n                fullName: \"Illegal Run\",\r\n                message: `Illegal Run by ${playerName}, automatic loss of down`,\r\n                netYards: 0,\r\n                addDown: true,\r\n            },\r\n            illegalLosCross: {\r\n                fullName: \"Illegal Line Of Scrimmage Cross\",\r\n                message: `${playerName} illegally crossed the line of scrimmage, automatic loss of down`,\r\n                netYards: 0,\r\n                addDown: true,\r\n            },\r\n            illegalBlitz: {\r\n                fullName: \"Illegal blitz\",\r\n                message: `Illegal blitz by ${playerName} at ${(0, utils_1.plural)(Math.round(time), \"second\", \"seconds\")}, 10 yard penalty, repeat the down`,\r\n                netYards: 10,\r\n                addDown: false,\r\n            },\r\n            illegalPush: {\r\n                fullName: \"Illegal Push\",\r\n                message: `Illegal Pushing by ${playerName} , 10 yard penalty, repeat the down`,\r\n                netYards: -10,\r\n                addDown: false,\r\n            },\r\n            onsideKickDrag: {\r\n                fullName: \"Onside Kick Drag\",\r\n                message: `Onside Kick Drag, automatic receiving team 40 yard line`,\r\n                netYards: 0,\r\n                addDown: false,\r\n                hasOwnHandler: true,\r\n            },\r\n            kickOffDrag: {\r\n                fullName: \"Kickoff Drag\",\r\n                message: `Kickoff Drag, automatic receiving team 40 yard line`,\r\n                netYards: 0,\r\n                addDown: false,\r\n                hasOwnHandler: true,\r\n            },\r\n            kickOffDragSafety: {\r\n                fullName: \"Safety Punt Drag\",\r\n                message: `Punt Drag after a safety, automatic defense 40 yard line`,\r\n                netYards: 0,\r\n                addDown: false,\r\n                hasOwnHandler: true,\r\n            },\r\n            kickOffOutOfBounds: {\r\n                fullName: \"Kickoff kicked out of bounds\",\r\n                message: `Kickoff kicked out of bounds, automatic offense 40 yard line`,\r\n                netYards: 0,\r\n                addDown: false,\r\n                hasOwnHandler: true,\r\n            },\r\n            kickOffOffsides: {\r\n                fullName: \"Kickoff Offsides Offense\",\r\n                message: `Offsides Offense ${playerName}, automatic offense 40 yard line`,\r\n                netYards: 0,\r\n                addDown: false,\r\n                hasOwnHandler: true,\r\n            },\r\n            kickOffOffsidesSafety: {\r\n                fullName: \"Safety Punt Offsides Offense\",\r\n                message: `Offsides Offense ${playerName} after a safety, automatic defense 40 yard line`,\r\n                netYards: 0,\r\n                addDown: false,\r\n                hasOwnHandler: true,\r\n            },\r\n        };\r\n        return PENALTIES[penaltyName];\r\n    }\r\n    _maybeConstrainNewEndLosXToOneYardLine(losX) {\r\n        const endZoneLosXIsIn = MapReferee_1.default.getEndZonePositionIsIn({\r\n            x: losX,\r\n            y: 0,\r\n        });\r\n        if (endZoneLosXIsIn === null)\r\n            return losX;\r\n        const teamsEndzone = MapReferee_1.default.getTeamEndzone(endZoneLosXIsIn);\r\n        const teamsEndZoneOneYardLine = new DistanceCalculator_1.default()\r\n            .addByTeam(teamsEndzone, map_1.MAP_POINTS.YARD * 1, endZoneLosXIsIn)\r\n            .calculate();\r\n        return teamsEndZoneOneYardLine;\r\n    }\r\n    getData(penaltyName, player, isInDefenseRedzone, losX, offenseTeamId, penaltyData) {\r\n        const { netYards, addDown, hasOwnHandler = false, message, fullName, delay, } = this._getPenalty(penaltyName, player, penaltyData);\r\n        const isRedZonePenaltyOnDefense = isInDefenseRedzone && netYards > 0;\r\n        const losYardLine = DistanceCalculator_1.DistanceConverter.toYardLine(losX);\r\n        const adjustedNetYards = isRedZonePenaltyOnDefense\r\n            ? Math.floor(losYardLine / 2)\r\n            : netYards;\r\n        const newEndLosX = new DistanceCalculator_1.default()\r\n            .addByTeam(losX, adjustedNetYards * map_1.MAP_POINTS.YARD, offenseTeamId)\r\n            .calculate();\r\n        const constrainedLosXInCaseEndsInEndzone = this._maybeConstrainNewEndLosXToOneYardLine(newEndLosX);\r\n        const offenseEndzone = MapReferee_1.default.getTeamEndzone(offenseTeamId);\r\n        const offenseOneYardLine = new DistanceCalculator_1.default()\r\n            .addByTeam(offenseEndzone, map_1.MAP_POINTS.YARD * 1, offenseTeamId)\r\n            .calculate();\r\n        const addDownBecausePenaltyAtOwnOneYard = constrainedLosXInCaseEndsInEndzone === offenseOneYardLine;\r\n        return {\r\n            penaltyYards: adjustedNetYards,\r\n            isRedZonePenaltyOnDefense,\r\n            newEndLosX: constrainedLosXInCaseEndsInEndzone,\r\n            addDown: addDown || addDownBecausePenaltyAtOwnOneYard,\r\n            hasOwnHandler,\r\n            penaltyMessage: message,\r\n            fullName,\r\n            delay,\r\n        };\r\n    }\r\n}\r\nexports[\"default\"] = PenaltyDataGetter;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/structures/PenaltyDataGetter.ts?");

/***/ }),

/***/ "./src/room/structures/PlayerStatManager.ts":
/*!**************************************************!*\
  !*** ./src/room/structures/PlayerStatManager.ts ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst PlayerStats_1 = __importStar(__webpack_require__(/*! ../classes/PlayerStats */ \"./src/room/classes/PlayerStats.ts\"));\r\nconst room_config_1 = __webpack_require__(/*! ../room.config */ \"./src/room/room.config.ts\");\r\nconst Chat_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Chat */ \"./src/room/roomStructures/Chat.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst Collection_1 = __importDefault(__webpack_require__(/*! ../utils/Collection */ \"./src/room/utils/Collection.ts\"));\r\nclass PlayerStatManager {\r\n    constructor() {\r\n        this.statsCollection = new Collection_1.default();\r\n    }\r\n    maybeCreateStatProfile(recordId) {\r\n        const hasStatProfile = this.statsCollection.has(recordId);\r\n        if (hasStatProfile)\r\n            return;\r\n        const playerStats = new PlayerStats_1.default(recordId);\r\n        this.statsCollection.set(recordId, playerStats);\r\n    }\r\n    updatePlayerStat(playerId, statQuery) {\r\n        var _a;\r\n        const playerRecord = Room_1.default.game.players.getPlayerRecordByPlayerId(playerId);\r\n        if (!playerRecord)\r\n            throw Error(\"Error finding player record\");\r\n        (_a = this.statsCollection.get(playerRecord.recordId)) === null || _a === void 0 ? void 0 : _a.updateStats(statQuery);\r\n        if (room_config_1.DEBUG_MODE)\r\n            Chat_1.default.send(`STAT UPDATE: ${JSON.stringify(statQuery)}`, {\r\n                color: 0xffef5c,\r\n            });\r\n    }\r\n    getMVP() {\r\n        const POINT_PER_STAT_MAP = {\r\n            receptions: 3,\r\n            receivingYards: 0.5,\r\n            rushingYards: 2,\r\n            touchdownsReceived: 7,\r\n            touchdownsRushed: 7,\r\n            passAttempts: -1,\r\n            passCompletions: 2,\r\n            passYards: 0.25,\r\n            touchdownsThrown: 4,\r\n            interceptionsThrown: -10,\r\n            qbSacks: -4,\r\n            passDeflections: 3,\r\n            tackles: 3,\r\n            yardsAllowed: -1,\r\n            sacks: 6,\r\n            forcedFumbles: 0,\r\n            interceptionsReceived: 12,\r\n            penalties: -5,\r\n        };\r\n        const playersStatsWithPoints = this.statsCollection\r\n            .find()\r\n            .map((statsObj) => {\r\n            const statsPoints = Object.entries(statsObj).reduce((acc, keyAndValueArr) => {\r\n                const [statName, keyValue] = keyAndValueArr;\r\n                const statValue = keyValue instanceof PlayerStats_1.EMPTY_MAP_SECTION_STAT\r\n                    ? keyValue.all\r\n                    : keyValue;\r\n                if (statName in POINT_PER_STAT_MAP === false)\r\n                    return acc;\r\n                const statPointValue = POINT_PER_STAT_MAP[statName];\r\n                acc[statName] = statValue * statPointValue;\r\n                return acc;\r\n            }, {});\r\n            return { recordId: statsObj.recordId, statsPoints };\r\n        });\r\n        const eachPlayersPoints = playersStatsWithPoints.map((playerStatObj) => {\r\n            const pointTotal = Object.values(playerStatObj.statsPoints).reduce((a, b) => a + b);\r\n            return {\r\n                recordId: playerStatObj.recordId,\r\n                pointTotal,\r\n            };\r\n        });\r\n        const playerWithMostPoints = eachPlayersPoints.reduce((prev, current) => prev.pointTotal > current.pointTotal ? prev : current, { recordId: 0, pointTotal: 0 });\r\n        if (playerWithMostPoints.pointTotal === 0)\r\n            return null;\r\n        return {\r\n            recordId: playerWithMostPoints.recordId,\r\n            pointTotal: playerWithMostPoints.pointTotal,\r\n        };\r\n    }\r\n}\r\nexports[\"default\"] = PlayerStatManager;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/structures/PlayerStatManager.ts?");

/***/ }),

/***/ "./src/room/structures/PreSetCalculators.ts":
/*!**************************************************!*\
  !*** ./src/room/structures/PreSetCalculators.ts ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nconst types_1 = __webpack_require__(/*! ../utils/types */ \"./src/room/utils/types.ts\");\r\nconst DistanceCalculator_1 = __importStar(__webpack_require__(/*! ./DistanceCalculator */ \"./src/room/structures/DistanceCalculator.ts\"));\r\nclass PreSetCalculators {\r\n    static adjustPlayerPositionFront(position, teamId) {\r\n        const xPositionFront = new DistanceCalculator_1.default()\r\n            .addByTeam(position.x, map_1.MAP_POINTS.PLAYER_RADIUS, teamId)\r\n            .calculate();\r\n        return {\r\n            x: xPositionFront,\r\n            y: position.y,\r\n        };\r\n    }\r\n    static adjustBallPositionOnOutOfBounds(rawEndPosition, teamId) {\r\n        const xPositionFront = new DistanceCalculator_1.default()\r\n            .addByTeam(rawEndPosition.x, map_1.MAP_POINTS.BALL_RADIUS, teamId)\r\n            .roundUpToYardIfBetweenTeamEndzoneAndOneYard(teamId)\r\n            .roundToYardByTeam(teamId)\r\n            .constrainToEndzonePoints()\r\n            .calculate();\r\n        return {\r\n            x: xPositionFront,\r\n            y: rawEndPosition.y,\r\n        };\r\n    }\r\n    static getNetYardsAndAdjustedEndPosition(alreadyAdjustedStartingPosition, rawEndPosition, offenseTeamId) {\r\n        const adjustedEndPosition = this.adjustRawEndPosition(rawEndPosition, offenseTeamId);\r\n        const { distance: adjustedEndPositionX, yardLine } = new DistanceCalculator_1.default(adjustedEndPosition.x).calculateAndConvert();\r\n        const { yards: netYards } = new DistanceCalculator_1.default()\r\n            .calcNetDifferenceByTeam(alreadyAdjustedStartingPosition.x, adjustedEndPositionX, offenseTeamId)\r\n            .calculateAndConvert();\r\n        return {\r\n            netYards,\r\n            yardLine,\r\n            adjustedEndPositionX,\r\n        };\r\n    }\r\n    static adjustRawEndPosition(rawEndPosition, teamId) {\r\n        const xPositionFront = new DistanceCalculator_1.default()\r\n            .addByTeam(rawEndPosition.x, map_1.MAP_POINTS.PLAYER_RADIUS, teamId)\r\n            .roundUpToYardIfBetweenTeamEndzoneAndOneYard(teamId)\r\n            .roundToYardByTeam(teamId)\r\n            .constrainToEndzonePoints()\r\n            .calculate();\r\n        return {\r\n            x: xPositionFront,\r\n            y: rawEndPosition.y,\r\n        };\r\n    }\r\n    static getPositionOfTeamYard(yard, team) {\r\n        const MIDFIELD_YARD = 50;\r\n        const yardToDistance = DistanceCalculator_1.DistanceConverter.yardToDistance(MIDFIELD_YARD - yard);\r\n        return team === types_1.TEAMS.BLUE ? yardToDistance : -yardToDistance;\r\n    }\r\n}\r\nexports[\"default\"] = PreSetCalculators;\r\nPreSetCalculators.adjustMapCoordinatesForRadius = (objectRadius) => {\r\n    const { TOP_SIDELINE, BOT_SIDELINE, RED_SIDELINE, BLUE_SIDELINE, TOP_HASH, BOT_HASH, RED_FIELD_GOAL_LINE, BLUE_FIELD_GOAL_LINE, TOP_FG_POST, BOTTOM_FG_POST, } = map_1.MAP_POINTS;\r\n    return {\r\n        topSideLine: TOP_SIDELINE + objectRadius,\r\n        botSideLine: BOT_SIDELINE - objectRadius,\r\n        redSideLine: RED_SIDELINE + objectRadius,\r\n        blueSideLine: BLUE_SIDELINE - objectRadius,\r\n        topHash: TOP_HASH + objectRadius,\r\n        botHash: BOT_HASH - objectRadius,\r\n        redFG: RED_FIELD_GOAL_LINE + objectRadius,\r\n        blueFG: BLUE_FIELD_GOAL_LINE - objectRadius,\r\n        topFG: TOP_FG_POST + objectRadius,\r\n        botFG: BOTTOM_FG_POST - objectRadius,\r\n    };\r\n};\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/structures/PreSetCalculators.ts?");

/***/ }),

/***/ "./src/room/structures/SnapCrowdChecker.ts":
/*!*************************************************!*\
  !*** ./src/room/structures/SnapCrowdChecker.ts ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst __1 = __importDefault(__webpack_require__(/*! .. */ \"./src/room/index.ts\"));\r\nconst Room_1 = __importDefault(__webpack_require__(/*! ../roomStructures/Room */ \"./src/room/roomStructures/Room.ts\"));\r\nconst haxUtils_1 = __webpack_require__(/*! ../utils/haxUtils */ \"./src/room/utils/haxUtils.ts\");\r\nconst map_1 = __webpack_require__(/*! ../utils/map */ \"./src/room/utils/map.ts\");\r\nconst types_1 = __webpack_require__(/*! ../utils/types */ \"./src/room/utils/types.ts\");\r\nconst utils_1 = __webpack_require__(/*! ../utils/utils */ \"./src/room/utils/utils.ts\");\r\nconst DistanceCalculator_1 = __importStar(__webpack_require__(/*! ./DistanceCalculator */ \"./src/room/structures/DistanceCalculator.ts\"));\r\nconst MapReferee_1 = __importDefault(__webpack_require__(/*! ./MapReferee */ \"./src/room/structures/MapReferee.ts\"));\r\nclass PlayerCrowdData {\r\n    constructor(playerId, playerTeam, timeGotInCrowdBox, wasAlone) {\r\n        this.playerId = playerId;\r\n        this.playerTeam = playerTeam;\r\n        this.timeGotInCrowdBox = timeGotInCrowdBox;\r\n        this.wasAlone = wasAlone;\r\n    }\r\n}\r\nclass SnapCrowdChecker {\r\n    constructor() {\r\n        this.CROWD_BOX_YARDS_FRONT = 6;\r\n        this.CROWD_BOX_YARDS_BEHIND = 6;\r\n        this.MAX_CROWDING_SECONDS = 3;\r\n        this.MAX_CROWD_ABUSE_SECONDS = 2.2;\r\n        this._playersInCrowdBoxList = [];\r\n    }\r\n    checkPlayersInCrowdBox(players, time) {\r\n        const crowder = players.find((player) => {\r\n            const inCrowd = this._checkIfPlayerInCrowdBox(player.id);\r\n            if (inCrowd) {\r\n                const index = this._addToCrowdBoxIfNotAlready(player, time);\r\n                const isCrowding = this._checkIfMeetsCrowdingCriteria(index, time);\r\n                if (isCrowding)\r\n                    return true;\r\n            }\r\n            else {\r\n                this._maybeRemoveFromCrowdBoxList(player.id);\r\n            }\r\n            return false;\r\n        });\r\n        if (crowder) {\r\n            const crowdingData = this._playersInCrowdBoxList.find((crowdData) => crowdData.playerId === crowder.id);\r\n            return {\r\n                isCrowding: true,\r\n                crowder: crowder,\r\n                crowdingData: crowdingData,\r\n            };\r\n        }\r\n        return {\r\n            isCrowding: false,\r\n            crowder: null,\r\n            crowdingData: null,\r\n        };\r\n    }\r\n    setOffenseTeam(offenseTeamId) {\r\n        this._offenseTeamId = offenseTeamId;\r\n    }\r\n    drawCrowdBoxLines() {\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.CROWD_BOX[0], {\r\n            x: this._playCrowdBoxArea.x1,\r\n            y: map_1.MAP_POINTS.TOP_HASH,\r\n        });\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.CROWD_BOX[1], {\r\n            x: this._playCrowdBoxArea.x1,\r\n            y: map_1.MAP_POINTS.BOT_HASH,\r\n        });\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.CROWD_BOX[2], {\r\n            x: this._playCrowdBoxArea.x2,\r\n            y: map_1.MAP_POINTS.BOT_HASH,\r\n        });\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.CROWD_BOX[3], {\r\n            x: this._playCrowdBoxArea.x2,\r\n            y: map_1.MAP_POINTS.TOP_HASH,\r\n        });\r\n    }\r\n    eraseCrowdBoxLines() {\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.CROWD_BOX[0], {\r\n            x: map_1.MAP_POINTS.HIDDEN,\r\n            y: map_1.MAP_POINTS.TOP_HASH,\r\n        });\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.CROWD_BOX[1], {\r\n            x: map_1.MAP_POINTS.HIDDEN,\r\n            y: map_1.MAP_POINTS.BOT_HASH,\r\n        });\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.CROWD_BOX[2], {\r\n            x: map_1.MAP_POINTS.HIDDEN,\r\n            y: map_1.MAP_POINTS.TOP_HASH,\r\n        });\r\n        __1.default.setDiscProperties(map_1.DISC_IDS.CROWD_BOX[3], {\r\n            x: map_1.MAP_POINTS.HIDDEN,\r\n            y: map_1.MAP_POINTS.BOT_HASH,\r\n        });\r\n    }\r\n    _determineCrowdBoxFrontYards(losX) {\r\n        const losYardLine = DistanceCalculator_1.DistanceConverter.toYardLine(losX);\r\n        const isNextToEndzone = losYardLine <= this.CROWD_BOX_YARDS_FRONT;\r\n        const teamLosIsIn = MapReferee_1.default.getMapHalfFromPoint(losX);\r\n        const isInDefenseEndzone = teamLosIsIn && teamLosIsIn !== this._offenseTeamId;\r\n        if (isNextToEndzone && isInDefenseEndzone)\r\n            return losYardLine;\r\n        return this.CROWD_BOX_YARDS_FRONT;\r\n    }\r\n    setCrowdBoxArea(losX) {\r\n        const crowdBoxFrontYards = this._determineCrowdBoxFrontYards(losX);\r\n        const crowdBoxFront = new DistanceCalculator_1.default()\r\n            .addByTeam(losX, map_1.MAP_POINTS.YARD * crowdBoxFrontYards, this._offenseTeamId)\r\n            .calculate();\r\n        const crowdBoxBehind = new DistanceCalculator_1.default()\r\n            .subtractByTeam(losX, map_1.MAP_POINTS.YARD * this.CROWD_BOX_YARDS_BEHIND, this._offenseTeamId)\r\n            .calculate();\r\n        if (this._offenseTeamId === types_1.TEAMS.RED) {\r\n            const boxArea = {\r\n                x1: crowdBoxBehind,\r\n                y1: map_1.MAP_POINTS.TOP_HASH,\r\n                x2: crowdBoxFront,\r\n                y2: map_1.MAP_POINTS.BOT_HASH,\r\n            };\r\n            this._playCrowdBoxArea = boxArea;\r\n        }\r\n        else {\r\n            const boxArea = {\r\n                x1: crowdBoxFront,\r\n                y1: map_1.MAP_POINTS.TOP_HASH,\r\n                x2: crowdBoxBehind,\r\n                y2: map_1.MAP_POINTS.BOT_HASH,\r\n            };\r\n            this._playCrowdBoxArea = boxArea;\r\n        }\r\n    }\r\n    _checkIfPlayerInCrowdBox(playerId) {\r\n        const { position } = (0, haxUtils_1.getPlayerDiscProperties)(playerId);\r\n        return (0, utils_1.isInRectangleArea)(this._playCrowdBoxArea, position);\r\n    }\r\n    _addToCrowdBoxIfNotAlready(player, time) {\r\n        const index = this._playersInCrowdBoxList.findIndex((crowdPlayerData) => crowdPlayerData.playerId === player.id);\r\n        if (index !== -1)\r\n            return index;\r\n        const isAlone = this._playersInCrowdBoxList.filter((playerInCrowdBox) => playerInCrowdBox.playerTeam === this._offenseTeamId).length === 0;\r\n        return (this._playersInCrowdBoxList.push(new PlayerCrowdData(player.id, player.team, time, isAlone)) - 1);\r\n    }\r\n    _checkIfMeetsCrowdingCriteria(index, timeNow) {\r\n        const offensivePlayerInCrowd = this._playersInCrowdBoxList.some((player) => player.playerTeam === this._offenseTeamId);\r\n        if (offensivePlayerInCrowd) {\r\n            this._playersInCrowdBoxList.forEach((player) => {\r\n                player.timeGotInCrowdBox = timeNow;\r\n                player.wasAlone = false;\r\n            });\r\n            return false;\r\n        }\r\n        const crowdingData = this._playersInCrowdBoxList[index];\r\n        const differenceInCrowdingTime = timeNow - crowdingData.timeGotInCrowdBox;\r\n        const crowdingSeconds = crowdingData.wasAlone\r\n            ? this.MAX_CROWD_ABUSE_SECONDS\r\n            : this.MAX_CROWDING_SECONDS;\r\n        const isCrowding = differenceInCrowdingTime >= crowdingSeconds &&\r\n            crowdingData.playerTeam !== this._offenseTeamId;\r\n        if (!isCrowding)\r\n            return false;\r\n        const crowdingPlayerPosition = (0, haxUtils_1.getPlayerDiscProperties)(crowdingData.playerId).position;\r\n        const isTouchingOffensivePlayer = Room_1.default.game.players\r\n            .getOffense()\r\n            .some((offensivePlayer) => {\r\n            const { position: offensivePlayerPosition, radius } = (0, haxUtils_1.getPlayerDiscProperties)(offensivePlayer.id);\r\n            const distanceToCrowdingPlayer = new DistanceCalculator_1.default()\r\n                .calcDifference3D(offensivePlayerPosition, crowdingPlayerPosition)\r\n                .calculate();\r\n            return distanceToCrowdingPlayer < radius * 2 + 1;\r\n        });\r\n        if (isTouchingOffensivePlayer) {\r\n            this._playersInCrowdBoxList[index].timeGotInCrowdBox = timeNow;\r\n            this._playersInCrowdBoxList[index].wasAlone = false;\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    _maybeRemoveFromCrowdBoxList(playerId) {\r\n        const index = this._playersInCrowdBoxList.findIndex((player) => player.playerId === playerId);\r\n        if (index === -1)\r\n            return;\r\n        this._playersInCrowdBoxList.splice(index, 1);\r\n    }\r\n}\r\nexports[\"default\"] = SnapCrowdChecker;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/structures/SnapCrowdChecker.ts?");

/***/ }),

/***/ "./src/room/utils/Collection.ts":
/*!**************************************!*\
  !*** ./src/room/utils/Collection.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nclass Collection extends Map {\r\n    _filter(options) {\r\n        const values = this.find();\r\n        return values.filter((dataObj) => {\r\n            return Object.entries(options).every(([key, value]) => {\r\n                let dataKey = dataObj[key];\r\n                let val = value;\r\n                if (Array.isArray(dataKey)) {\r\n                    return val.some((searchValue) => dataKey.includes(searchValue));\r\n                }\r\n                val = typeof value === \"string\" ? value.toLowerCase() : value;\r\n                dataKey = typeof dataKey === \"string\" ? dataKey.toLowerCase() : dataKey;\r\n                return dataKey == val;\r\n            });\r\n        });\r\n    }\r\n    find(options = null) {\r\n        if (options === null)\r\n            return Array.from(this.values());\r\n        return this._filter(options);\r\n    }\r\n    findOne(options) {\r\n        const [firstResult = null] = this._filter(options);\r\n        return firstResult;\r\n    }\r\n}\r\nexports[\"default\"] = Collection;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/utils/Collection.ts?");

/***/ }),

/***/ "./src/room/utils/Icons.ts":
/*!*********************************!*\
  !*** ./src/room/utils/Icons.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst ICONS = {\r\n    Exclamation: String.fromCodePoint(0x2757),\r\n    BarChart: String.fromCodePoint(0x1f4ca),\r\n    Medal1: String.fromCodePoint(0x1f947),\r\n    Medal2: String.fromCodePoint(0x1f948),\r\n    Medal3: String.fromCodePoint(0x1f949),\r\n    SportsMedal: String.fromCodePoint(0x1f3c5),\r\n    Trophy: String.fromCodePoint(0x1f3c6),\r\n    Bell: String.fromCodePoint(0x1f514),\r\n    Clock: String.fromCodePoint(0x1f514),\r\n    DoNotEnter: String.fromCodePoint(0x26d4),\r\n    RedTriangle: String.fromCodePoint(0x1f53a),\r\n    X: String.fromCodePoint(0x274c),\r\n    Football: String.fromCodePoint(0x1f3c8),\r\n    Stop: String.fromCodePoint(0x1f6d1),\r\n    RedSquare: String.fromCodePoint(0x1f7e5),\r\n    YellowSquare: String.fromCodePoint(0x1f7e8),\r\n    SmallBlackSquare: String.fromCodePoint(0x25aa),\r\n    MediumBlackSquare: String.fromCodePoint(0x25fc),\r\n    SmallWhiteSquare: String.fromCodePoint(0x25ab),\r\n    BlackSquare: String.fromCodePoint(0x2b1b),\r\n    BlueSquare: String.fromCodePoint(0x1f7e6),\r\n    GreenSquare: String.fromCodePoint(0x1f7e9),\r\n    BrownSquare: String.fromCodePoint(0x1f7eb),\r\n    RedCircle: String.fromCodePoint(0x1f534),\r\n    OrangeCircle: String.fromCodePoint(0x1f7e0),\r\n    GreenCircle: String.fromCodePoint(0x1f7e2),\r\n    PurpleCircle: String.fromCodePoint(0x1f7e3),\r\n    BlueCircle: String.fromCodePoint(0x1f535),\r\n    BrownCircle: String.fromCodePoint(0x1f7e4),\r\n    WhiteCircle: String.fromCodePoint(0x26aa),\r\n    GreenCheck: String.fromCodePoint(0x2705),\r\n    NoEntry: String.fromCodePoint(0x1f6ab),\r\n    On: String.fromCodePoint(0x1f6ab),\r\n    Construction: String.fromCodePoint(0x1f6a7),\r\n    Star: String.fromCodePoint(0x2b50),\r\n    Fire: String.fromCodePoint(0x1f525),\r\n    Lightning: String.fromCodePoint(0x26a1),\r\n    Lock: String.fromCodePoint(0x1f512),\r\n    Phone: String.fromCodePoint(0x1f4de),\r\n    Police: String.fromCodePoint(0x1f6a8),\r\n    Bot: String.fromCodePoint(0x1f6a8),\r\n    Chess: String.fromCodePoint(0x265f),\r\n    Crown: String.fromCodePoint(0x1f451),\r\n    Warning: String.fromCodePoint(0x26a0),\r\n    ThumbsUp: String.fromCodePoint(0x1f44d),\r\n    HundredPts: String.fromCodePoint(0x1f4af),\r\n    Collision: String.fromCodePoint(0x1f4a5),\r\n    Dizzy: String.fromCodePoint(0x1f4ab),\r\n    Running: String.fromCodePoint(0x1f3c3),\r\n    Target: String.fromCodePoint(0x1f3af),\r\n    Anger: String.fromCodePoint(0x1f4a2),\r\n    Pushpin: String.fromCodePoint(0x1f4cd),\r\n    SpeakingHead: String.fromCodePoint(0x1f5e3),\r\n    Facepalm: String.fromCodePoint(0x1f926),\r\n    OK: String.fromCodePoint(0x1f646),\r\n    HandFingersSpread: String.fromCodePoint(0x1f590),\r\n    Clown: String.fromCodePoint(0x1f921),\r\n    Loudspeaker: String.fromCodePoint(0x1f4e2),\r\n    Mute: String.fromCodePoint(0x1f507),\r\n    OrangeTriangle: String.fromCodePoint(0x1f538),\r\n    LargeBlueDiamond: String.fromCodePoint(0x1f537),\r\n    LargeOrangeDiamond: String.fromCodePoint(0x1f536),\r\n    Frisbee: String.fromCodePoint(0x1f94f),\r\n};\r\nexports[\"default\"] = ICONS;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/utils/Icons.ts?");

/***/ }),

/***/ "./src/room/utils/MapSectionFinder.ts":
/*!********************************************!*\
  !*** ./src/room/utils/MapSectionFinder.ts ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst DistanceCalculator_1 = __importDefault(__webpack_require__(/*! ../structures/DistanceCalculator */ \"./src/room/structures/DistanceCalculator.ts\"));\r\nconst map_1 = __webpack_require__(/*! ./map */ \"./src/room/utils/map.ts\");\r\nconst types_1 = __webpack_require__(/*! ./types */ \"./src/room/utils/types.ts\");\r\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./src/room/utils/utils.ts\");\r\nclass MapSectionFinder {\r\n    constructor() {\r\n        this._mapSectionsList = [\r\n            {\r\n                name: \"cornerTop\",\r\n                getRectangleArea: function (fifteenYardsLeftOfLOS, fifteenYardsRightOfLOS) {\r\n                    const { TOP_SIDELINE, ABOVE_HASH } = map_1.MAP_POINTS;\r\n                    return {\r\n                        x1: fifteenYardsLeftOfLOS,\r\n                        y1: TOP_SIDELINE - 1000,\r\n                        x2: fifteenYardsRightOfLOS,\r\n                        y2: ABOVE_HASH,\r\n                    };\r\n                },\r\n            },\r\n            {\r\n                name: \"cornerBottom\",\r\n                getRectangleArea: function (fifteenYardsLeftOfLOS, fifteenYardsRightOfLOS) {\r\n                    const { BOT_SIDELINE, BELOW_HASH } = map_1.MAP_POINTS;\r\n                    return {\r\n                        x1: fifteenYardsLeftOfLOS,\r\n                        y1: BELOW_HASH,\r\n                        x2: fifteenYardsRightOfLOS,\r\n                        y2: BOT_SIDELINE + 1000,\r\n                    };\r\n                },\r\n            },\r\n            {\r\n                name: \"middle\",\r\n                getRectangleArea: function (fifteenYardsLeftOfLOS, fifteenYardsRightOfLOS) {\r\n                    const { ABOVE_HASH, BELOW_HASH } = map_1.MAP_POINTS;\r\n                    return {\r\n                        x1: fifteenYardsLeftOfLOS,\r\n                        y1: ABOVE_HASH,\r\n                        x2: fifteenYardsRightOfLOS,\r\n                        y2: BELOW_HASH,\r\n                    };\r\n                },\r\n            },\r\n            {\r\n                name: \"deep\",\r\n                getRectangleArea: function (fifteenYardsLeftOfLOS, fifteenYardsRightOfLOS, losX, offenseTeamId) {\r\n                    const { YARD, BOT_SIDELINE, TOP_SIDELINE } = map_1.MAP_POINTS;\r\n                    const unlimitedYardsInFrontOfLOS = new DistanceCalculator_1.default()\r\n                        .addByTeam(losX, YARD * 100, offenseTeamId)\r\n                        .calculate();\r\n                    return {\r\n                        x1: offenseTeamId === types_1.TEAMS.RED\r\n                            ? fifteenYardsLeftOfLOS\r\n                            : unlimitedYardsInFrontOfLOS,\r\n                        y1: TOP_SIDELINE - 1000,\r\n                        x2: offenseTeamId === types_1.TEAMS.RED\r\n                            ? unlimitedYardsInFrontOfLOS\r\n                            : fifteenYardsRightOfLOS,\r\n                        y2: BOT_SIDELINE + 1000,\r\n                    };\r\n                },\r\n            },\r\n        ];\r\n    }\r\n    getSectionName(positionToCheck, losX, offenseTeamId) {\r\n        var _a;\r\n        const { YARD } = map_1.MAP_POINTS;\r\n        const fifteenYardsLeftOfLOS = losX - YARD * 15;\r\n        const fifteenYardsRightOfLOS = losX + YARD * 15;\r\n        const sectionObj = this._mapSectionsList.find((section) => {\r\n            const rectangleArea = section.getRectangleArea(fifteenYardsLeftOfLOS, fifteenYardsRightOfLOS, losX, offenseTeamId);\r\n            return (0, utils_1.isInRectangleArea)(rectangleArea, positionToCheck);\r\n        });\r\n        return (_a = sectionObj === null || sectionObj === void 0 ? void 0 : sectionObj.name) !== null && _a !== void 0 ? _a : \"backwards\";\r\n    }\r\n}\r\nexports[\"default\"] = MapSectionFinder;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/utils/MapSectionFinder.ts?");

/***/ }),

/***/ "./src/room/utils/colors.ts":
/*!**********************************!*\
  !*** ./src/room/utils/colors.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst COLORS = {\r\n    HaxballRed: 0xff5656,\r\n    HaxballBlue: 0x5689e5,\r\n    LightGreen: 0x90ee90,\r\n    Lime: 0x94d82d,\r\n    YellowOrange: 0xfcce03,\r\n    Orange: 0xff922b,\r\n    Gray: 0xaaaaaa,\r\n    Black: 0x000000,\r\n    BlueViolet: 0x8a2be2,\r\n    LightBlue: 0x73d2de,\r\n    LightSeaGree: 0x20b2aa,\r\n    Olive: 0x808000,\r\n    HaxballChatGreen: 0x8ed2ab,\r\n    Gold: 0xffdb72,\r\n    LightRed: 0xfa5252,\r\n    Yellow: 0xffd43b,\r\n    Pink: 0xf783ac,\r\n    White: 0xffffff,\r\n    DarkGreen: 0x30c130,\r\n    LightGreen2: 0xafff87,\r\n    LightRed2: 0xff7b61,\r\n};\r\nexports[\"default\"] = COLORS;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/utils/colors.ts?");

/***/ }),

/***/ "./src/room/utils/haxUtils.ts":
/*!************************************!*\
  !*** ./src/room/utils/haxUtils.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getTeamStringFromId = exports.toClock = exports.flattenPlayer = exports.quickPause = exports.getPlayerDiscProperties = void 0;\r\nconst __1 = __importDefault(__webpack_require__(/*! .. */ \"./src/room/index.ts\"));\r\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./src/room/utils/utils.ts\");\r\nconst getPlayerDiscProperties = (id) => {\r\n    var _a;\r\n    const { xspeed = null, yspeed = 0, x = 0, y = 0, radius = 0, } = (_a = __1.default.getPlayerDiscProperties(id)) !== null && _a !== void 0 ? _a : {};\r\n    if (xspeed === null)\r\n        return null;\r\n    return {\r\n        position: { x, y },\r\n        speed: { x: xspeed, y: yspeed },\r\n        radius,\r\n    };\r\n};\r\nexports.getPlayerDiscProperties = getPlayerDiscProperties;\r\nconst quickPause = () => {\r\n    __1.default.pauseGame(true);\r\n    __1.default.pauseGame(false);\r\n};\r\nexports.quickPause = quickPause;\r\nconst flattenPlayer = ({ id, team, name }) => {\r\n    return {\r\n        id,\r\n        team,\r\n        name,\r\n    };\r\n};\r\nexports.flattenPlayer = flattenPlayer;\r\nconst toClock = (secs) => {\r\n    const seconds = Math.floor(secs);\r\n    return `${Math.floor(seconds / 60)}:${(0, utils_1.leftpad)(seconds % 60)}`;\r\n};\r\nexports.toClock = toClock;\r\nconst getTeamStringFromId = (teamId) => {\r\n    if (teamId === 0)\r\n        return \"Spectators\";\r\n    if (teamId === 1)\r\n        return \"Red\";\r\n    return \"Blue\";\r\n};\r\nexports.getTeamStringFromId = getTeamStringFromId;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/utils/haxUtils.ts?");

/***/ }),

/***/ "./src/room/utils/map.ts":
/*!*******************************!*\
  !*** ./src/room/utils/map.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DISC_IDS = exports.MAP_POINTS = void 0;\r\nconst HFL_MAP = `{\r\n\r\n\t\"name\" : \"2022 HFL Official\",\r\n\r\n\t\"width\" : 1090,\r\n\r\n\t\"height\" : 380,\r\n\r\n\t\"cameraFollow\" : \"player\",\r\n\r\n\t\"spawnDistance\" : 980,\r\n\r\n\t\"bg\" : { \"type\" : \"grass\", \"width\" : 930, \"height\" : 280, \"kickOffRadius\" : 0, \"cornerRadius\" : 0, \"goalLine\" : 0 },\r\n\r\n\t\"vertexes\" : [\r\n\t\t/* 0 */ { \"x\" : 0, \"y\" : 75, \"trait\" : \"kickOffBarrier\" },\r\n\t\t/* 1 */ { \"x\" : 0, \"y\" : -75, \"trait\" : \"kickOffBarrier\" },\r\n\t\t/* 2 */ { \"x\" : 0, \"y\" : -330, \"trait\" : \"kickOffBarrier\" },\r\n\t\t\r\n\t\t/* 3 */ { \"x\" : -775, \"y\" : -280, \"trait\" : \"goalline\" },\r\n\t\t/* 4 */ { \"x\" : -775, \"y\" : 280, \"trait\" : \"goalline\" },\r\n\t\t\r\n\t\t/* 5 */ { \"x\" : -620, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 6 */ { \"x\" : -620, \"y\" : 280, \"trait\" : \"yardline\" },\r\n\t\t/* 7 */ { \"x\" : -310, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 8 */ { \"x\" : -310, \"y\" : 280, \"trait\" : \"yardline\" },\r\n\t\t/* 9 */ { \"x\" : -155, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 10 */ { \"x\" : -155, \"y\" : 280, \"trait\" : \"yardline\" },\r\n\t\t\r\n\t\t/* 11 */ { \"x\" : 0, \"y\" : -280, \"trait\" : \"centerline\" },\r\n\t\t/* 12 */ { \"x\" : 0, \"y\" : 280, \"trait\" : \"centerline\" },\r\n\t\t\r\n\t\t/* 13 */ { \"x\" : 155, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 14 */ { \"x\" : 155, \"y\" : 280, \"trait\" : \"yardline\" },\r\n\t\t/* 15 */ { \"x\" : 310, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 16 */ { \"x\" : 310, \"y\" : 280, \"trait\" : \"yardline\" },\r\n\t\t/* 17 */ { \"x\" : 465, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 18 */ { \"x\" : 465, \"y\" : 280, \"trait\" : \"yardline\" },\r\n\t\t/* 19 */ { \"x\" : 620, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 20 */ { \"x\" : 620, \"y\" : 280, \"trait\" : \"yardline\" },\r\n\t\t\r\n\t\t/* 21 */ { \"x\" : 775, \"y\" : -280, \"trait\" : \"goalline\" },\r\n\t\t/* 22 */ { \"x\" : 775, \"y\" : 280, \"trait\" : \"goalline\" },\r\n\t\t\r\n\t\t/* 23 */ { \"x\" : -1005, \"y\" : 25, \"trait\" : \"goal\" },\r\n\t\t/* 24 */ { \"x\" : -1005, \"y\" : -25, \"trait\" : \"goal\" },\r\n\t\t/* 25 */ { \"x\" : 1005, \"y\" : 25, \"trait\" : \"goal\" },\r\n\t\t/* 26 */ { \"x\" : 1005, \"y\" : -25, \"trait\" : \"goal\" },\r\n\t\t\r\n\t\t/* 27 */ { \"x\" : -775, \"y\" : -375, \"trait\" : \"goalline\" },\r\n\t\t/* 28 */ { \"x\" : -775, \"y\" : 375, \"trait\" : \"goalline\" },\r\n\t\t/* 29 */ { \"x\" : 775, \"y\" : -375, \"trait\" : \"goalline\", \"curve\" : 0 },\r\n\t\t/* 30 */ { \"x\" : 775, \"y\" : 375, \"trait\" : \"goalline\", \"curve\" : 0 },\r\n\t\t\r\n\t\t/* 31 */ { \"x\" : -713, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 32 */ { \"x\" : -713, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 33 */ { \"x\" : -744, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 34 */ { \"x\" : -744, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 35 */ { \"x\" : -744, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 36 */ { \"x\" : -744, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 37 */ { \"x\" : -713, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 38 */ { \"x\" : -713, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 39 */ { \"x\" : 713, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 40 */ { \"x\" : 713, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 41 */ { \"x\" : 62, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 42 */ { \"x\" : 62, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 43 */ { \"x\" : 31, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 44 */ { \"x\" : 31, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 45 */ { \"x\" : -93, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 46 */ { \"x\" : -93, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 47 */ { \"x\" : -124, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 48 */ { \"x\" : -124, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 49 */ { \"x\" : -248, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 50 */ { \"x\" : -248, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 51 */ { \"x\" : -279, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 52 */ { \"x\" : -279, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 53 */ { \"x\" : -403, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 54 */ { \"x\" : -403, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 55 */ { \"x\" : -434, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 56 */ { \"x\" : -434, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 57 */ { \"x\" : -558, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 58 */ { \"x\" : -558, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 59 */ { \"x\" : -589, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 60 */ { \"x\" : -589, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 61 */ { \"x\" : 186, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 62 */ { \"x\" : 186, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 63 */ { \"x\" : 62, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 64 */ { \"x\" : 62, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 65 */ { \"x\" : 31, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 66 */ { \"x\" : 31, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 67 */ { \"x\" : -93, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 68 */ { \"x\" : -93, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 69 */ { \"x\" : -124, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 70 */ { \"x\" : -124, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 71 */ { \"x\" : -248, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 72 */ { \"x\" : -248, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 73 */ { \"x\" : -279, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 74 */ { \"x\" : -279, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 75 */ { \"x\" : -403, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 76 */ { \"x\" : -403, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 77 */ { \"x\" : -434, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 78 */ { \"x\" : -434, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 79 */ { \"x\" : -558, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 80 */ { \"x\" : -558, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 81 */ { \"x\" : -589, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 82 */ { \"x\" : -589, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 83 */ { \"x\" : 186, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 84 */ { \"x\" : 186, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 85 */ { \"x\" : 651, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 86 */ { \"x\" : 651, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 87 */ { \"x\" : 651, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 88 */ { \"x\" : 651, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 89 */ { \"x\" : 682, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 90 */ { \"x\" : 682, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 91 */ { \"x\" : 682, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 92 */ { \"x\" : 682, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 93 */ { \"x\" : 527, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 94 */ { \"x\" : 527, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 95 */ { \"x\" : 527, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 96 */ { \"x\" : 527, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 97 */ { \"x\" : 496, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 98 */ { \"x\" : 496, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 99 */ { \"x\" : 496, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 100 */ { \"x\" : 496, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 101 */ { \"x\" : 372, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 102 */ { \"x\" : 372, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 103 */ { \"x\" : 403, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 104 */ { \"x\" : 403, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 105 */ { \"x\" : 372, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 106 */ { \"x\" : 372, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 107 */ { \"x\" : 341, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 108 */ { \"x\" : 341, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 109 */ { \"x\" : 217, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 110 */ { \"x\" : 217, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 111 */ { \"x\" : 217, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 112 */ { \"x\" : 217, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t\r\n\t\t/* 113 */ { \"x\" : 1005, \"y\" : 25, \"trait\" : \"goal\" },\r\n\t\t/* 114 */ { \"x\" : 1005, \"y\" : -25, \"trait\" : \"goal\" },\r\n\t\t\r\n\t\t/* 115 */ { \"x\" : -682, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 116 */ { \"x\" : -682, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 117 */ { \"x\" : -682, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 118 */ { \"x\" : -682, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 119 */ { \"x\" : -651, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 120 */ { \"x\" : -651, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 121 */ { \"x\" : -651, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 122 */ { \"x\" : -651, \"y\" : -95, \"trait\" : \"yardline\", \"_selected\" : true },\r\n\t\t/* 123 */ { \"x\" : -527, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 124 */ { \"x\" : -527, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 125 */ { \"x\" : -527, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 126 */ { \"x\" : -527, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 127 */ { \"x\" : -496, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 128 */ { \"x\" : -496, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 129 */ { \"x\" : -496, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 130 */ { \"x\" : -496, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 131 */ { \"x\" : -372, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 132 */ { \"x\" : -372, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 133 */ { \"x\" : -372, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 134 */ { \"x\" : -372, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 135 */ { \"x\" : -341, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 136 */ { \"x\" : -341, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 137 */ { \"x\" : -341, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 138 */ { \"x\" : -341, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 139 */ { \"x\" : -217, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 140 */ { \"x\" : -217, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 141 */ { \"x\" : -186, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 142 */ { \"x\" : -186, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 143 */ { \"x\" : -217, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 144 */ { \"x\" : -217, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 145 */ { \"x\" : -186, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 146 */ { \"x\" : -186, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 147 */ { \"x\" : -62, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 148 */ { \"x\" : -62, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 149 */ { \"x\" : -31, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 150 */ { \"x\" : -31, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 151 */ { \"x\" : -62, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 152 */ { \"x\" : -62, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 153 */ { \"x\" : -31, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 154 */ { \"x\" : -31, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 155 */ { \"x\" : 93, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 156 */ { \"x\" : 93, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 157 */ { \"x\" : 93, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 158 */ { \"x\" : 93, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 159 */ { \"x\" : 124, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 160 */ { \"x\" : 124, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 161 */ { \"x\" : 124, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 162 */ { \"x\" : 124, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 163 */ { \"x\" : 248, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 164 */ { \"x\" : 248, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 165 */ { \"x\" : 248, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 166 */ { \"x\" : 248, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 167 */ { \"x\" : 279, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 168 */ { \"x\" : 279, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 169 */ { \"x\" : 279, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 170 */ { \"x\" : 279, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 171 */ { \"x\" : 341, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 172 */ { \"x\" : 341, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 173 */ { \"x\" : 403, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 174 */ { \"x\" : 403, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 175 */ { \"x\" : 434, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 176 */ { \"x\" : 434, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 177 */ { \"x\" : 434, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 178 */ { \"x\" : 434, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 179 */ { \"x\" : 558, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 180 */ { \"x\" : 558, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 181 */ { \"x\" : 558, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 182 */ { \"x\" : 558, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 183 */ { \"x\" : 589, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 184 */ { \"x\" : 589, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 185 */ { \"x\" : 589, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 186 */ { \"x\" : 589, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 187 */ { \"x\" : 713, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 188 */ { \"x\" : 713, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 189 */ { \"x\" : 744, \"y\" : -75, \"trait\" : \"yardline\" },\r\n\t\t/* 190 */ { \"x\" : 744, \"y\" : -95, \"trait\" : \"yardline\" },\r\n\t\t/* 191 */ { \"x\" : 744, \"y\" : 95, \"trait\" : \"yardline\" },\r\n\t\t/* 192 */ { \"x\" : 744, \"y\" : 75, \"trait\" : \"yardline\" },\r\n\t\t/* 193 */ { \"x\" : -465, \"y\" : -280, \"trait\" : \"yardline\", \"color\" : \"c7e6bd\" },\r\n\t\t/* 194 */ { \"x\" : -465, \"y\" : 280, \"trait\" : \"yardline\", \"color\" : \"c7e6bd\" },\r\n\t\t/* 195 */ { \"x\" : 465, \"y\" : 280, \"trait\" : \"yardline\", \"color\" : \"c7e6bd\" },\r\n\t\t/* 196 */ { \"x\" : -697.5, \"y\" : 280, \"trait\" : \"yardline\" },\r\n\t\t/* 197 */ { \"x\" : -697.5, \"y\" : 246, \"trait\" : \"yardline\" },\r\n\t\t/* 198 */ { \"x\" : -542.5, \"y\" : 280, \"trait\" : \"yardline\" },\r\n\t\t/* 199 */ { \"x\" : -542.5, \"y\" : 246, \"trait\" : \"yardline\" },\r\n\t\t/* 200 */ { \"x\" : -387.5, \"y\" : 280, \"trait\" : \"yardline\" },\r\n\t\t/* 201 */ { \"x\" : -387.5, \"y\" : 246, \"trait\" : \"yardline\" },\r\n\t\t/* 202 */ { \"x\" : -232.5, \"y\" : 280, \"trait\" : \"yardline\" },\r\n\t\t/* 203 */ { \"x\" : -232.5, \"y\" : 246, \"trait\" : \"yardline\" },\r\n\t\t/* 204 */ { \"x\" : -77.5, \"y\" : 280, \"trait\" : \"yardline\" },\r\n\t\t/* 205 */ { \"x\" : -77.5, \"y\" : 246, \"trait\" : \"yardline\" },\r\n\t\t/* 206 */ { \"x\" : 77.5, \"y\" : 280, \"trait\" : \"yardline\" },\r\n\t\t/* 207 */ { \"x\" : 77.5, \"y\" : 246, \"trait\" : \"yardline\" },\r\n\t\t/* 208 */ { \"x\" : 232.5, \"y\" : 280, \"trait\" : \"yardline\" },\r\n\t\t/* 209 */ { \"x\" : 232.5, \"y\" : 246, \"trait\" : \"yardline\" },\r\n\t\t/* 210 */ { \"x\" : 387.5, \"y\" : 280, \"trait\" : \"yardline\" },\r\n\t\t/* 211 */ { \"x\" : 387.5, \"y\" : 246, \"trait\" : \"yardline\" },\r\n\t\t/* 212 */ { \"x\" : 387.5, \"y\" : -246, \"trait\" : \"yardline\" },\r\n\t\t/* 213 */ { \"x\" : 387.5, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 214 */ { \"x\" : 232.5, \"y\" : -246, \"trait\" : \"yardline\" },\r\n\t\t/* 215 */ { \"x\" : 232.5, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 216 */ { \"x\" : 77.5, \"y\" : -246, \"trait\" : \"yardline\" },\r\n\t\t/* 217 */ { \"x\" : 77.5, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 218 */ { \"x\" : 542.5, \"y\" : -246, \"trait\" : \"yardline\" },\r\n\t\t/* 219 */ { \"x\" : 542.5, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 220 */ { \"x\" : 697.5, \"y\" : -246, \"trait\" : \"yardline\" },\r\n\t\t/* 221 */ { \"x\" : 697.5, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 222 */ { \"x\" : -77.5, \"y\" : -246, \"trait\" : \"yardline\" },\r\n\t\t/* 223 */ { \"x\" : -77.5, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 224 */ { \"x\" : -232.5, \"y\" : -246, \"trait\" : \"yardline\" },\r\n\t\t/* 225 */ { \"x\" : -232.5, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 226 */ { \"x\" : -387.5, \"y\" : -246, \"trait\" : \"yardline\" },\r\n\t\t/* 227 */ { \"x\" : -387.5, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 228 */ { \"x\" : -542.5, \"y\" : -246, \"trait\" : \"yardline\" },\r\n\t\t/* 229 */ { \"x\" : -542.5, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 230 */ { \"x\" : -697.5, \"y\" : -246, \"trait\" : \"yardline\" },\r\n\t\t/* 231 */ { \"x\" : -697.5, \"y\" : -280, \"trait\" : \"yardline\" },\r\n\t\t/* 232 */ { \"x\" : 540.5, \"y\" : 264, \"trait\" : \"yardline\" },\r\n\t\t/* 233 */ { \"x\" : 540.5, \"y\" : 244, \"trait\" : \"yardline\" },\r\n\t\t/* 234 */ { \"x\" : 697.5, \"y\" : 280, \"trait\" : \"yardline\" },\r\n\t\t/* 235 */ { \"x\" : 697.5, \"y\" : 246, \"trait\" : \"yardline\" }\r\n\r\n\t],\r\n\r\n\t\"segments\" : [\r\n\t\t{ \"v0\" : 1, \"v1\" : 2, \"trait\" : \"kickOffBarrier\" },\r\n\t\t\r\n\t\t{ \"v0\" : 3, \"v1\" : 4, \"trait\" : \"goalline\", \"x\" : -775 },\r\n\t\t\r\n\t\t{ \"v0\" : 5, \"v1\" : 6, \"trait\" : \"yardline\", \"x\" : -620 },\r\n\t\t{ \"v0\" : 7, \"v1\" : 8, \"trait\" : \"yardline\", \"x\" : -310 },\r\n\t\t{ \"v0\" : 9, \"v1\" : 10, \"trait\" : \"yardline\", \"x\" : -155 },\r\n\t\t\r\n\t\t{ \"v0\" : 11, \"v1\" : 12, \"trait\" : \"centerline\" },\r\n\t\t\r\n\t\t{ \"v0\" : 13, \"v1\" : 14, \"trait\" : \"yardline\", \"x\" : 155 },\r\n\t\t{ \"v0\" : 15, \"v1\" : 16, \"trait\" : \"yardline\", \"x\" : 310 },\r\n\t\t{ \"v0\" : 17, \"v1\" : 18, \"trait\" : \"yardline\", \"x\" : 465 },\r\n\t\t{ \"v0\" : 19, \"v1\" : 20, \"trait\" : \"yardline\", \"x\" : 620 },\r\n\t\t\r\n\t\t{ \"v0\" : 21, \"v1\" : 22, \"trait\" : \"goalline\", \"x\" : 775 },\r\n\t\t\r\n\t\t{ \"v0\" : 23, \"v1\" : 24, \"color\" : \"FF0000\", \"trait\" : \"goal\", \"x\" : -1005 },\r\n\t\t{ \"v0\" : 25, \"v1\" : 26, \"color\" : \"0000FF\", \"trait\" : \"goal\", \"x\" : 1005 },\r\n\t\t\r\n\t\t{ \"v0\" : 27, \"v1\" : 28, \"cGroup\" : [\"blueKO\" ], \"trait\" : \"kickOffBarrier\", \"x\" : -775 },\r\n\t\t{ \"v0\" : 29, \"v1\" : 30, \"curve\" : 0, \"cGroup\" : [\"redKO\" ], \"trait\" : \"kickOffBarrier\", \"x\" : 775 },\r\n\t\t\r\n\t\t{ \"v0\" : 31, \"v1\" : 32, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -713 },\r\n\t\t{ \"v0\" : 33, \"v1\" : 34, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -744 },\r\n\t\t{ \"v0\" : 35, \"v1\" : 36, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -744 },\r\n\t\t{ \"v0\" : 37, \"v1\" : 38, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -713 },\r\n\t\t{ \"v0\" : 39, \"v1\" : 40, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 713 },\r\n\t\t{ \"v0\" : 41, \"v1\" : 42, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 62 },\r\n\t\t{ \"v0\" : 43, \"v1\" : 44, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 31 },\r\n\t\t{ \"v0\" : 45, \"v1\" : 46, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -93 },\r\n\t\t{ \"v0\" : 47, \"v1\" : 48, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -124 },\r\n\t\t{ \"v0\" : 49, \"v1\" : 50, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -248 },\r\n\t\t{ \"v0\" : 51, \"v1\" : 52, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -279 },\r\n\t\t{ \"v0\" : 53, \"v1\" : 54, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -403 },\r\n\t\t{ \"v0\" : 55, \"v1\" : 56, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -434 },\r\n\t\t{ \"v0\" : 57, \"v1\" : 58, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -558 },\r\n\t\t{ \"v0\" : 59, \"v1\" : 60, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -589 },\r\n\t\t{ \"v0\" : 61, \"v1\" : 62, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 186 },\r\n\t\t{ \"v0\" : 63, \"v1\" : 64, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 62 },\r\n\t\t{ \"v0\" : 65, \"v1\" : 66, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 31 },\r\n\t\t{ \"v0\" : 67, \"v1\" : 68, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -93 },\r\n\t\t{ \"v0\" : 69, \"v1\" : 70, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -124 },\r\n\t\t{ \"v0\" : 71, \"v1\" : 72, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -248 },\r\n\t\t{ \"v0\" : 73, \"v1\" : 74, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -279 },\r\n\t\t{ \"v0\" : 75, \"v1\" : 76, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -403 },\r\n\t\t{ \"v0\" : 77, \"v1\" : 78, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -434 },\r\n\t\t{ \"v0\" : 79, \"v1\" : 80, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -558 },\r\n\t\t{ \"v0\" : 81, \"v1\" : 82, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -589 },\r\n\t\t{ \"v0\" : 83, \"v1\" : 84, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 186 },\r\n\t\t{ \"v0\" : 85, \"v1\" : 86, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 651 },\r\n\t\t{ \"v0\" : 87, \"v1\" : 88, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 651 },\r\n\t\t{ \"v0\" : 89, \"v1\" : 90, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 682 },\r\n\t\t{ \"v0\" : 91, \"v1\" : 92, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 682 },\r\n\t\t{ \"v0\" : 93, \"v1\" : 94, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 527 },\r\n\t\t{ \"v0\" : 95, \"v1\" : 96, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 527 },\r\n\t\t{ \"v0\" : 97, \"v1\" : 98, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 496 },\r\n\t\t{ \"v0\" : 99, \"v1\" : 100, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 496 },\r\n\t\t{ \"v0\" : 101, \"v1\" : 102, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 372 },\r\n\t\t{ \"v0\" : 103, \"v1\" : 104, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 403 },\r\n\t\t{ \"v0\" : 105, \"v1\" : 106, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 372 },\r\n\t\t{ \"v0\" : 107, \"v1\" : 108, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 341 },\r\n\t\t{ \"v0\" : 109, \"v1\" : 110, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 217 },\r\n\t\t{ \"v0\" : 111, \"v1\" : 112, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 217 },\r\n\t\t{ \"v0\" : 115, \"v1\" : 116, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -682 },\r\n\t\t{ \"v0\" : 117, \"v1\" : 118, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -682 },\r\n\t\t{ \"v0\" : 119, \"v1\" : 120, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -651 },\r\n\t\t{ \"v0\" : 121, \"v1\" : 122, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -651 },\r\n\t\t{ \"v0\" : 123, \"v1\" : 124, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -527 },\r\n\t\t{ \"v0\" : 125, \"v1\" : 126, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -527 },\r\n\t\t{ \"v0\" : 127, \"v1\" : 128, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -496 },\r\n\t\t{ \"v0\" : 129, \"v1\" : 130, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -496 },\r\n\t\t{ \"v0\" : 131, \"v1\" : 132, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -372 },\r\n\t\t{ \"v0\" : 133, \"v1\" : 134, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -372 },\r\n\t\t{ \"v0\" : 135, \"v1\" : 136, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -341 },\r\n\t\t{ \"v0\" : 137, \"v1\" : 138, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -341 },\r\n\t\t{ \"v0\" : 139, \"v1\" : 140, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -217 },\r\n\t\t{ \"v0\" : 141, \"v1\" : 142, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -186 },\r\n\t\t{ \"v0\" : 143, \"v1\" : 144, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -217 },\r\n\t\t{ \"v0\" : 145, \"v1\" : 146, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -186 },\r\n\t\t{ \"v0\" : 147, \"v1\" : 148, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -62 },\r\n\t\t{ \"v0\" : 149, \"v1\" : 150, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -31 },\r\n\t\t{ \"v0\" : 151, \"v1\" : 152, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -62 },\r\n\t\t{ \"v0\" : 153, \"v1\" : 154, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -31 },\r\n\t\t{ \"v0\" : 155, \"v1\" : 156, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 93 },\r\n\t\t{ \"v0\" : 157, \"v1\" : 158, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 93 },\r\n\t\t{ \"v0\" : 159, \"v1\" : 160, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 124 },\r\n\t\t{ \"v0\" : 161, \"v1\" : 162, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 124 },\r\n\t\t{ \"v0\" : 163, \"v1\" : 164, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 248 },\r\n\t\t{ \"v0\" : 165, \"v1\" : 166, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 248 },\r\n\t\t{ \"v0\" : 167, \"v1\" : 168, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 279 },\r\n\t\t{ \"v0\" : 169, \"v1\" : 170, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 279 },\r\n\t\t{ \"v0\" : 171, \"v1\" : 172, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 341 },\r\n\t\t{ \"v0\" : 173, \"v1\" : 174, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 403 },\r\n\t\t{ \"v0\" : 175, \"v1\" : 176, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 434 },\r\n\t\t{ \"v0\" : 177, \"v1\" : 178, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 434 },\r\n\t\t{ \"v0\" : 179, \"v1\" : 180, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 558 },\r\n\t\t{ \"v0\" : 181, \"v1\" : 182, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 558 },\r\n\t\t{ \"v0\" : 183, \"v1\" : 184, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 589 },\r\n\t\t{ \"v0\" : 185, \"v1\" : 186, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 589 },\r\n\t\t{ \"v0\" : 187, \"v1\" : 188, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 713 },\r\n\t\t{ \"v0\" : 189, \"v1\" : 190, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 744 },\r\n\t\t{ \"v0\" : 191, \"v1\" : 192, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 744 },\r\n\t\t{ \"v0\" : 193, \"v1\" : 194, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -465 },\r\n\t\t{ \"v0\" : 196, \"v1\" : 197, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -744 },\r\n\t\t{ \"v0\" : 198, \"v1\" : 199, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -542.5 },\r\n\t\t{ \"v0\" : 200, \"v1\" : 201, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -387.5 },\r\n\t\t{ \"v0\" : 202, \"v1\" : 203, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -232.5 },\r\n\t\t{ \"v0\" : 204, \"v1\" : 205, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -77.5 },\r\n\t\t{ \"v0\" : 206, \"v1\" : 207, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 77.5 },\r\n\t\t{ \"v0\" : 208, \"v1\" : 209, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 232.5 },\r\n\t\t{ \"v0\" : 210, \"v1\" : 211, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 387.5 },\r\n\t\t{ \"v0\" : 212, \"v1\" : 213, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 387.5 },\r\n\t\t{ \"v0\" : 214, \"v1\" : 215, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 232.5 },\r\n\t\t{ \"v0\" : 216, \"v1\" : 217, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 77.5 },\r\n\t\t{ \"v0\" : 218, \"v1\" : 219, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 542.5 },\r\n\t\t{ \"v0\" : 220, \"v1\" : 221, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 697.5 },\r\n\t\t{ \"v0\" : 222, \"v1\" : 223, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -77.5 },\r\n\t\t{ \"v0\" : 224, \"v1\" : 225, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -232.5 },\r\n\t\t{ \"v0\" : 226, \"v1\" : 227, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -387.5 },\r\n\t\t{ \"v0\" : 228, \"v1\" : 229, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -542.5 },\r\n\t\t{ \"v0\" : 230, \"v1\" : 231, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : -697.5 },\r\n\t\t{ \"v0\" : 232, \"v1\" : 233, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 542.5 },\r\n\t\t{ \"v0\" : 234, \"v1\" : 235, \"vis\" : true, \"color\" : \"c7e6bd\", \"trait\" : \"yardline\", \"x\" : 697.5 }\r\n\r\n\t],\r\n\r\n\t\"goals\" : [\r\n\t\t{ \"p0\" : [-1065,0 ], \"p1\" : [-1005,0 ], \"team\" : \"blue\" },\r\n\t\t{ \"p0\" : [1006.9833374023,1.6000061035156 ], \"p1\" : [1063.9833374023,1.6000061035156 ], \"team\" : \"red\" }\r\n\r\n\t],\r\n\r\n\t\"discs\" : [\r\n\t\t{ \"pos\" : [0,280 ], \"trait\" : \"losmarker\" },\r\n\t\t{ \"pos\" : [0,-280 ], \"trait\" : \"losmarker\" },\r\n\t\t\r\n\t\t{ \"pos\" : [10000,280 ], \"trait\" : \"yardtogetmarker\" },\r\n\t\t{ \"pos\" : [10000,-280 ], \"trait\" : \"yardtogetmarker\" },\r\n\t\t\r\n\t\t{ \"pos\" : [930,-60 ], \"trait\" : \"goalPost\" },\r\n\t\t{ \"pos\" : [-930,-60 ], \"trait\" : \"goalPost\" },\r\n\t\t{ \"pos\" : [-930,60 ], \"trait\" : \"goalPost\" },\r\n\t\t{ \"pos\" : [930,60 ], \"trait\" : \"goalPost\" },\r\n\t\t\r\n\t\t{ \"pos\" : [930,280 ], \"trait\" : \"goalmarker\" },\r\n\t\t{ \"pos\" : [775,-280 ], \"trait\" : \"goalmarker\" },\r\n\t\t{ \"pos\" : [-930,280 ], \"trait\" : \"goalmarker\" },\r\n\t\t{ \"pos\" : [-930,-280 ], \"trait\" : \"goalmarker\" },\r\n\t\t{ \"pos\" : [775,280 ], \"trait\" : \"goalmarker\" },\r\n\t\t{ \"pos\" : [930,-280 ], \"trait\" : \"goalmarker\" },\r\n\t\t{ \"pos\" : [-775,280 ], \"trait\" : \"goalmarker\" },\r\n\t\t{ \"pos\" : [-775,-280 ], \"trait\" : \"goalmarker\" },\r\n\r\n\t\t{ \"pos\" : [10000,0 ], \"trait\" : \"teweight1\" },\r\n\t\t{ \"pos\" : [10000,13 ], \"trait\" : \"teweight\" },\r\n\t\t{ \"pos\" : [9987,0 ], \"trait\" : \"teweight\" },\r\n\t\t{ \"pos\" : [10000,-13 ], \"trait\" : \"teweight\" },\r\n\t\t{ \"pos\" : [10013,0 ], \"trait\" : \"teweight\" },\r\n\t\t{ \"pos\" : [9960,280 ], \"trait\" : \"crowdboxmarker\" },\r\n\t\t{ \"pos\" : [9960,-280 ], \"trait\" : \"crowdboxmarker\" },\r\n\t\t{ \"pos\" : [9950,280 ], \"trait\" : \"crowdboxmarker\" },\r\n\t\t{ \"pos\" : [9950,-280 ], \"trait\" : \"crowdboxmarker\" },\r\n\r\n\t],\r\n\r\n\t\"joints\" : [\r\n\t\t{ \"d0\" : 1, \"d1\" : 2, \"trait\" : \"losline\" },\r\n\t\t{ \"d0\" : 3, \"d1\" : 4, \"trait\" : \"yardtogetline\" },\r\n\r\n\t\t{ \"d0\" : 17, \"d1\" : 18, \"trait\" : \"joint\" },\r\n\t\t{ \"d0\" : 17, \"d1\" : 19, \"trait\" : \"joint\" },\r\n\t\t{ \"d0\" : 17, \"d1\" : 20, \"trait\" : \"joint\" },\r\n\t\t{ \"d0\" : 17, \"d1\" : 21, \"trait\" : \"joint\" },\r\n\t\t{ \"d0\" : 18, \"d1\" : 19, \"trait\" : \"joint\" },\r\n\t\t{ \"d0\" : 19, \"d1\" : 20, \"trait\" : \"joint\" },\r\n\t\t{ \"d0\" : 20, \"d1\" : 21, \"trait\" : \"joint\" },\r\n\t\t{ \"d0\" : 21, \"d1\" : 18, \"trait\" : \"joint\" }\r\n\r\n\t\t// { \"d0\" : 22, \"d1\" : 23, \"trait\" : \"crowdboxline\" },\r\n\t\t// { \"d0\" : 23, \"d1\" : 24, \"trait\" : \"crowdboxline\" },\r\n\t\t// { \"d0\" : 24, \"d1\" : 25, \"trait\" : \"crowdboxline\" },\r\n\t\t// { \"d0\" : 25, \"d1\" : 22, \"trait\" : \"crowdboxline\" }\r\n\r\n\t],\r\n\r\n\t\"planes\" : [\r\n\t\t{ \"normal\" : [0,1 ], \"dist\" : -350, \"trait\" : \"ballArea\" },\r\n\t\t{ \"normal\" : [0,-1 ], \"dist\" : -350, \"bCoef\" : 1, \"trait\" : \"ballArea\" },\r\n\t\t{ \"normal\" : [1,0 ], \"dist\" : -1065, \"trait\" : \"ballArea\" },\r\n\t\t{ \"normal\" : [-1,0 ], \"dist\" : -1065, \"trait\" : \"ballArea\" },\r\n\t\t\r\n\t\t{ \"normal\" : [0,1 ], \"dist\" : -375, \"bCoef\" : 0.9 },\r\n\t\t{ \"normal\" : [0,-1 ], \"dist\" : -375, \"bCoef\" : 0.9 },\r\n\t\t{ \"normal\" : [1,0 ], \"dist\" : -1090, \"bCoef\" : 0.9 },\r\n\t\t{ \"normal\" : [-1,0 ], \"dist\" : -1090, \"bCoef\" : 0.9 }\r\n\r\n\t],\r\n\r\n\t\"traits\" : {\r\n\t\t\"ballArea\" : { \"vis\" : false, \"bCoef\" : 1, \"cMask\" : [\"ball\" ] },\r\n\t\t\"endline\" : { \"vis\" : false, \"bCoef\" : 1, \"cMask\" : [\"ball\" ] },\r\n\t\t\"goalPost\" : { \"radius\" : 4, \"invMass\" : 0, \"bCoef\" : 0.5, \"color\" : \"FFFF00\" },\r\n\t\t\"goalNet\" : { \"vis\" : true, \"bCoef\" : 0.1, \"cMask\" : [\"ball\" ] },\r\n\t\t\"kickOffBarrier\" : { \"vis\" : false, \"bCoef\" : 0.1, \"cGroup\" : [\"redKO\",\"blueKO\" ], \"cMask\" : [\"red\",\"blue\",\"c0\" ] },\r\n\t\t\"goalline\" : { \"vis\" : true, \"color\" : \"FFA500\", \"cMask\" : [\"c0\",\"wall\" ] },\r\n\t\t\"yardline\" : { \"vis\" : true, \"color\" : \"c7e6bd\", \"cMask\" : [ ] },\r\n\t\t\"centerline\" : { \"vis\" : true, \"color\" : \"E0E0E0\", \"cMask\" : [ ] },\r\n\t\t\"goalmarker\" : { \"vis\" : true, \"color\" : \"FFA500\", \"cMask\" : [ ], \"radius\" : 3 },\r\n\t\t\"losmarker\" : { \"vis\" : true, \"color\" : \"273d6b\", \"cMask\" : [ ], \"radius\" : 3 },\r\n\t\t\"yardtogetmarker\" : { \"vis\" : true, \"color\" : \"8FE271\", \"cMask\" : [ ], \"radius\" : 3 },\r\n\t\t\"teweight\" : { \"vis\" : false, \"radius\" : 0, \"cMask\" : [\"red\", \"blue\" ], \"invMass\" : 1.2 },\r\n\t\t\"teweight1\" : { \"vis\" : false, \"radius\" : 0, \"cMask\" : [], \"invMass\" : 1.2, \"color\" : \"F2F2F2\" },\r\n\t\t\"losline\" : { \"vis\" : true, \"color\" : \"273d6b\" },\r\n\t\t\"yardtogetline\" : { \"color\" : \"8FE271\" },\r\n\t\t\"crowdboxline\" : { \"color\" : \"ff8164\", \"invMass\" : 0.1 },\r\n\t\t\"crowdboxmarker\" : { \"color\" : \"ff6242\", \"radius\" : 3, \"vis\" : true, \"cMask\" : [ ], \"invMass\" : 0.1 },\r\n\t\t\"goal\" : { \"vis\" : true, \"color\" : \"FFA500\" }\r\n\r\n\t},\r\n\r\n\t\"ballPhysics\" : {\r\n\t\t\"cMask\" : [ \"wall\", \"red\", \"blue\"\r\n\t\t],\r\n\t\t\"cGroup\" : [ \"ball\"\r\n\t\t],\r\n\t\t\"color\" : \"602323\",\r\n\t\t\"radius\" : 6.3\r\n\r\n\t},\r\n\r\n\t\"playerPhysics\" : {\r\n\t\t\"kickStrength\" : 7.6,\r\n        \"kickback\" : 0,\r\n\t\t\"bCoef\" : 0.75,\r\n\t\t\"invMass\" : 0.8,\r\n\t\t\"radius\" : 14,\r\n\r\n\t},\r\n\r\n\t\"redSpawnPoints\" : [\r\n\t\t\r\n\r\n\t],\r\n\r\n\t\"blueSpawnPoints\" : [\r\n\t\t\r\n\r\n\t]\r\n}`;\r\nexports.MAP_POINTS = {\r\n    PLAYER_RADIUS: 14,\r\n    TE_PLAYER_RADIUS: 17,\r\n    BALL_RADIUS: 6.7,\r\n    DEF_DAMPING: 0.99,\r\n    KICKOFF: 0,\r\n    HIDDEN: 10000,\r\n    HALF_FIELD: 775,\r\n    YARD: 15.5,\r\n    TOP_SIDELINE: -280,\r\n    BOT_SIDELINE: 280,\r\n    RED_SIDELINE: -930,\r\n    BLUE_SIDELINE: 930,\r\n    RED_GOAL_LINE: -775,\r\n    BLUE_GOAL_LINE: 775,\r\n    RED_REDZONE: -465,\r\n    BLUE_REDZONE: 465,\r\n    RED_SCORE_LINE: -1040,\r\n    BLUE_SCORE_LINE: 1040,\r\n    RED_FIELD_GOAL_LINE: -930,\r\n    BLUE_FIELD_GOAL_LINE: 930,\r\n    ABOVE_HASH: -110,\r\n    BELOW_HASH: 110,\r\n    TOP_HASH: -95,\r\n    BOT_HASH: 95,\r\n    TOP_FG_POST: -60,\r\n    BOTTOM_FG_POST: 60,\r\n};\r\nexports.DISC_IDS = {\r\n    BALL: 0,\r\n    LOS_TOP: 1,\r\n    LOS_BOT: 2,\r\n    LTG_TOP: 3,\r\n    LTG_BOT: 4,\r\n    TE: [17, 18, 19, 20, 21],\r\n    CROWD_BOX: [22, 23, 24, 25],\r\n};\r\nexports[\"default\"] = HFL_MAP;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/utils/map.ts?");

/***/ }),

/***/ "./src/room/utils/types.ts":
/*!*********************************!*\
  !*** ./src/room/utils/types.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TEAMS = void 0;\r\nexports.TEAMS = {\r\n    SPECTATORS: 0,\r\n    RED: 1,\r\n    BLUE: 2,\r\n};\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/utils/types.ts?");

/***/ }),

/***/ "./src/room/utils/utils.ts":
/*!*********************************!*\
  !*** ./src/room/utils/utils.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.largestInArray = exports.getRandomChars = exports.averageOfArray = exports.extrapolateLine = exports.toOrdinalSuffix = exports.isObject = exports.sumObjectValues = exports.containsNWord = exports.randFromArrayWeighted = exports.randFromArray = exports.escapeRegExp = exports.formatTime = exports.formatDate = exports.formatDateAndTime = exports.isInRectangleArea = exports.inRange = exports.toPercent = exports.toPercentString = exports.formatPercent = exports.sleep = exports.hexToAscii = exports.secToMin = exports.plural = exports.round = exports.truncateName = exports.addPlus = exports.leftpad = exports.getRandomIntInRange = exports.limitNumberWithinRange = exports.getRandomInt = exports.truncateString = exports.partition = void 0;\r\nconst partition = (arr, filter) => {\r\n    return arr.reduce((r, e, i, a) => {\r\n        r[filter(e, i, a) ? 0 : 1].push(e);\r\n        return r;\r\n    }, [[], []]);\r\n};\r\nexports.partition = partition;\r\nconst truncateString = (str = \"\", maxLength) => {\r\n    return str.length <= maxLength ? str : str.slice(0, maxLength - 3) + \"...\";\r\n};\r\nexports.truncateString = truncateString;\r\nconst getRandomInt = (max) => {\r\n    return Math.floor(Math.random() * max);\r\n};\r\nexports.getRandomInt = getRandomInt;\r\nconst limitNumberWithinRange = (value, min, max) => {\r\n    if (min > max)\r\n        throw Error(`Min ${min} is greater than Max ${max}`);\r\n    return Math.min(Math.max(value, min), max);\r\n};\r\nexports.limitNumberWithinRange = limitNumberWithinRange;\r\nconst getRandomIntInRange = (min, max) => {\r\n    let difference = max - min;\r\n    let rand = Math.random();\r\n    rand = Math.floor(rand * difference);\r\n    rand = rand + min;\r\n    return rand;\r\n};\r\nexports.getRandomIntInRange = getRandomIntInRange;\r\nconst leftpad = (val) => {\r\n    return val < 10 ? `0${val}` : `${val}`;\r\n};\r\nexports.leftpad = leftpad;\r\nconst addPlus = (val) => {\r\n    return val > 0 ? `+${val}` : `${val}`;\r\n};\r\nexports.addPlus = addPlus;\r\nconst truncateName = (name) => {\r\n    const MAX_NAME_LENGTH = 15;\r\n    return (0, exports.truncateString)(name, MAX_NAME_LENGTH);\r\n};\r\nexports.truncateName = truncateName;\r\nconst round = (value, precision = 0) => {\r\n    const multiplier = Math.pow(10, precision);\r\n    return Math.round(value * multiplier) / multiplier;\r\n};\r\nexports.round = round;\r\nconst plural = (n, singular, plural) => {\r\n    return `${n} ${n === 1 ? singular : plural}`;\r\n};\r\nexports.plural = plural;\r\nconst secToMin = (seconds) => {\r\n    return (0, exports.round)(seconds / 60, 2);\r\n};\r\nexports.secToMin = secToMin;\r\nconst hexToAscii = (str) => {\r\n    let strOut = \"\";\r\n    for (let x = 0; x < str.length; x += 2)\r\n        strOut += String.fromCharCode(parseInt(str.substr(x, 2), 16));\r\n    return strOut;\r\n};\r\nexports.hexToAscii = hexToAscii;\r\nconst sleep = (ms) => {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\nexports.sleep = sleep;\r\nconst formatPercent = (percentage, precision = 0) => {\r\n    return `${(0, exports.round)(percentage * 100, precision)}%`;\r\n};\r\nexports.formatPercent = formatPercent;\r\nconst toPercentString = (portion, total) => {\r\n    return (0, exports.toPercent)(portion, total) + \"%\";\r\n};\r\nexports.toPercentString = toPercentString;\r\nconst toPercent = (portion, total) => {\r\n    const percent = Math.round((portion / total) * 100);\r\n    return Number.isNaN(percent) ? 0 : percent;\r\n};\r\nexports.toPercent = toPercent;\r\nconst inRange = (num, rangeMin, rangeMax) => {\r\n    if (rangeMin >= rangeMax)\r\n        throw new Error(\"Invalid range\");\r\n    return num >= rangeMin && num <= rangeMax;\r\n};\r\nexports.inRange = inRange;\r\nconst isInRectangleArea = ({ x1, y1, x2, y2 }, { x, y }) => {\r\n    return x > x1 && x < x2 && y > y1 && y < y2;\r\n};\r\nexports.isInRectangleArea = isInRectangleArea;\r\nconst formatDateAndTime = (dateTime = Date.now()) => {\r\n    const dateStringFull = (0, exports.formatDate)(dateTime);\r\n    const timeString = (0, exports.formatTime)(dateTime);\r\n    return `${dateStringFull} ${timeString}`;\r\n};\r\nexports.formatDateAndTime = formatDateAndTime;\r\nconst formatDate = (dateTime = Date.now()) => {\r\n    return new Date(dateTime).toLocaleString(\"en-US\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n        timeZone: \"America/Chicago\",\r\n    });\r\n};\r\nexports.formatDate = formatDate;\r\nconst formatTime = (dateTime = Date.now()) => {\r\n    const date = new Date(dateTime);\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12;\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    const strTime = hours + \":\" + minutes + \" \" + ampm;\r\n    return strTime;\r\n};\r\nexports.formatTime = formatTime;\r\nconst escapeRegExp = (str) => {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n};\r\nexports.escapeRegExp = escapeRegExp;\r\nconst randFromArray = (arr) => {\r\n    return arr[~~(arr.length * Math.random())];\r\n};\r\nexports.randFromArray = randFromArray;\r\nconst randFromArrayWeighted = (arr) => {\r\n    const weightOverOne = arr.some((el) => el.weight > 1);\r\n    if (weightOverOne)\r\n        throw Error(\"Weight cannot be larger than 1\");\r\n    const weight = (arr) => {\r\n        return [].concat(...arr.map((obj) => new Array(Math.ceil(obj.weight * 100)).fill(obj)));\r\n    };\r\n    let weighted = weight(arr);\r\n    return weighted[Math.floor(Math.random() * weighted.length)];\r\n};\r\nexports.randFromArrayWeighted = randFromArrayWeighted;\r\nconst containsNWord = (msg) => {\r\n    msg = msg.toLowerCase();\r\n    const filters = [\r\n        \"nigger\",\r\n        \"n1gger\",\r\n        \"n1gg3r\",\r\n        \"niger\",\r\n        \"n1g3r\",\r\n        \"nigga\",\r\n        \"n1gg@\",\r\n        \"n1g@\",\r\n        \"niga\",\r\n    ];\r\n    const regExpText = new RegExp(/(n|i){1,32}((g{2,32}|q){1,32}|[gq]{2,32})[e3r]{1,32}/, \"i\").test(msg);\r\n    const isOffensive = filters.some((filterWord) => msg.includes(filterWord) || msg === \"nig\");\r\n    return isOffensive || regExpText;\r\n};\r\nexports.containsNWord = containsNWord;\r\nconst sumObjectValues = (object) => {\r\n    const objKeys = Object.values(object);\r\n    return objKeys.reduce((acc, curr) => acc + curr);\r\n};\r\nexports.sumObjectValues = sumObjectValues;\r\nconst isObject = (obj) => {\r\n    return obj != null && obj.constructor.name === \"Object\";\r\n};\r\nexports.isObject = isObject;\r\nconst toOrdinalSuffix = (number) => {\r\n    const english_ordinal_rules = new Intl.PluralRules(\"en\", { type: \"ordinal\" });\r\n    const suffixes = {\r\n        one: \"st\",\r\n        two: \"nd\",\r\n        few: \"rd\",\r\n        other: \"th\",\r\n    };\r\n    const category = english_ordinal_rules.select(number);\r\n    const suffix = suffixes[category];\r\n    return number + suffix;\r\n};\r\nexports.toOrdinalSuffix = toOrdinalSuffix;\r\nconst extrapolateLine = (p1, p2, maxX) => {\r\n    const dx = p2.x - p1.x;\r\n    const dy = p2.y - p1.y;\r\n    if (dx === 0)\r\n        return { x: p1.x, y: Infinity };\r\n    const slope = dy / dx;\r\n    const y = slope * (maxX - p1.x) + p1.y;\r\n    return { x: maxX, y: y };\r\n};\r\nexports.extrapolateLine = extrapolateLine;\r\nconst averageOfArray = (array) => array.reduce((a, b) => a + b) / array.length;\r\nexports.averageOfArray = averageOfArray;\r\nconst getRandomChars = (numbOfChars) => {\r\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r\n    return [...Array(numbOfChars)]\r\n        .map(() => chars.charAt(Math.floor(Math.random() * chars.length)))\r\n        .join(\"\");\r\n};\r\nexports.getRandomChars = getRandomChars;\r\nconst largestInArray = (array, propertyName) => {\r\n    return array.reduce((max, curren) => max[propertyName] > curren[propertyName] ? max : curren);\r\n};\r\nexports.largestInArray = largestInArray;\r\n\n\n//# sourceURL=webpack://hfl_new/./src/room/utils/utils.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/room/index.ts");
/******/ 	
/******/ })()
;